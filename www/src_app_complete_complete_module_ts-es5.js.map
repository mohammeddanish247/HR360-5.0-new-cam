{"version":3,"mappings":"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","names":["routes","path","component","_complete_page__WEBPACK_IMPORTED_MODULE_0__","CompletePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","CompletePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_complete_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_complete_page__WEBPACK_IMPORTED_MODULE_1__","CompletePage","router","route","auth","queryParams","subscribe","getCurrentNavigation","extras","state","data","getLocation","database","executeSql","then","res","f","jobOutCome","rows","item","value","additional","base64","event","console","log","detail","options","quality","source","_capacitor_camera__WEBPACK_IMPORTED_MODULE_2__","height","width","resultType","allowEditing","imageData","base64Image","base64String","updatePicture","err","showToast","parts","labour","getdateformatV2","JSON","stringify","navigate","e","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_api_service__WEBPACK_IMPORTED_MODULE_3__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/complete/complete-routing.module.ts","webpack:///src/app/complete/complete.module.ts","webpack:///src/app/complete/complete.page.ts","webpack:///src/app/complete/complete.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompletePage } from './complete.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompletePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompletePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompletePageRoutingModule } from './complete-routing.module';\n\nimport { CompletePage } from './complete.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CompletePageRoutingModule\n  ],\n  declarations: [CompletePage]\n})\nexport class CompletePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, ImageOptions } from '@capacitor/camera';\nimport { ApiService } from '../api.service';\nimport { Form, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n///////////////////completed\n\n@Component({\n  selector: 'app-complete',\n  templateUrl: './complete.page.html',\n  styleUrls: ['./complete.page.scss'],\n})\nexport class CompletePage implements OnInit {\n\n  options: ImageOptions;\n  base64:string='';\n  updatePicture :any='';\n  jobOutCome : string='';\n  data:any[];\n\n  constructor(private router:Router, private route:ActivatedRoute, private auth:ApiService) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data; \n        this.auth.getLocation();  \n        // this.getdata();  \n      }\n    });\n  }\n\n  getdata() {\n    this.auth.database.executeSql('select * from abandon where JOBGUID=?',[this.data['JOBGUID']])\n    .then((res)=>{\n        let f : NgForm;\n        this.jobOutCome = res.rows.item(0)['OUTCOME'];\n        f.value.additional = res.rows.item(0)['JOBNOTE'];\n        this.base64 = res.rows.item(0)['FILEBASE'];\n   });\n  }\n\n  radiogroupChange(event){\n    console.log(' rg change '+event.detail.value);\n    this.jobOutCome = event.detail.value;\n}\n\n  openCamera(){\n    this.options = {\n      quality: 20,\n      source: CameraSource.Camera,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64,\n      allowEditing : false ,\n    }\n    \n    Camera.getPhoto(this.options).then((imageData) => {\n      // imageData is either a base64 encoded string or a file URI\n      // If it's base64 (DATA_URL):\n      let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n      this.updatePicture = 'data:image/jpeg;base64,' + imageData.base64String;\n      this.base64 = imageData.base64String;\n      console.log('camera'+this.base64);\n     }, (err) => {\n      // Handle error\n     }); \n  }\n\n  complete(f:NgForm)\n  {\n    if(this.base64==null || this.base64 == ''){\n      this.auth.showToast('Image in mandatory','danger');\n     \n    }else\n    {\n\n      if(this.jobOutCome==''){\n        this.auth.showToast('Job Outcome in mandatory','danger');\n      }else{\n\n\n        if(f.value.additional==''){\n          this.auth.showToast('Additional notes in mandatory','danger');\n        }else{\n          if(f.value.parts==''){\n            this.auth.showToast('Parts in mandatory','danger');\n          }else{\n\n            if(f.value.labour==''){\n              this.auth.showToast('Labour in mandatory','danger');\n            }else{\n    \n              console.log('Else code..........' + this.data['JOBGUID']);\n              this.auth.database.executeSql('update  complete set OUTCOME=?,JOBNOTE=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?, HaveData=? where JOBGUID=?', [this.jobOutCome,f.value.additional, this.base64, this.auth.getdateformatV2(), 'lat', 'long', 'yes', this.data['JOBGUID']])\n                .then((res) => {\n                  this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                    console.log('#### jobsstatus success '+JSON.stringify(res));\n                    this.auth.showToast('Success! Job has been Completed.','success'); \n                    console.log('#### complete success ' + JSON.stringify(res));\n                    this.router.navigate(['details']);\n                \n                  }).catch((e)=>{  });\n                  \n                }).catch((e) => {\n                  console.log('### complete Failure ' + JSON.stringify(e));\n                });\n\n            }\n  \n          }\n\n        }\n\n\n      }\n     \n    }\n\n  }\n\n}\n\n","export default \"<ion-header>\\n  <ion-toolbar  color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Job Report</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #f='ngForm'  >\\n    <ion-radio-group  \\n    allow-empty-selection='false' \\n    (ionChange)='radiogroupChange($event)'>\\n      <ion-card>\\n      <ion-list-header>\\n        <h2>Job Outcome</h2>\\n      </ion-list-header>\\n      </ion-card>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Job Completed Successfully</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"JobCompletedSuccessfully\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>At Risk</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"AtRisk\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Capped Off(Not Safe)</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"CappedOff\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n    <ion-card>\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Parts</ion-label>\\n      <ion-input type=\\\"text\\\" \\n      ngModel \\n      name='parts'\\n      required\\n      #partsCtrl='ngModel'></ion-input>\\n    </ion-item>\\n    <p *ngIf='!partsCtrl.valid && partsCtrl.touched'>    * parts cannot be empty</p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Labour</ion-label>\\n      <ion-input type=\\\"text\\\"  \\n      ngModel \\n      name='labour'\\n      required\\n      #labourCtrl='ngModel' ></ion-input>\\n    </ion-item>\\n    </ion-card>\\n    <p *ngIf='!labourCtrl.valid && labourCtrl.touched'>    * labour cannot be empty</p>\\n\\n    <ion-card>\\n      <ion-item>\\n        <ion-textarea rows=\\\"6\\\" cols=\\\"20\\\" \\n         placeholder=\\\"Enter Additional Notes here...\\\"\\n         ngModel \\n         name='additional'\\n         required\\n         #additionalCtrl='ngModel'\\n         ></ion-textarea>\\n      </ion-item>\\n      </ion-card>\\n      <p *ngIf='!additionalCtrl.valid && additionalCtrl.touched'>    * additional cannot be empty</p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <p><b>Upload Image</b></p>\\n      <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera()\\\"></ion-icon>\\n    </ion-item>\\n    <ion-card *ngIf=\\\"updatePicture!= null\\\">\\n      <img [src]=\\\"updatePicture\\\" />\\n    </ion-card>\\n    </form>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary  [disabled]='!f.valid' (click)=\\\"complete(f)\\\">Submit</ion-button>\\n</ion-footer>\\n\\n\";"]}