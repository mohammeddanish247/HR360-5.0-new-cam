{"version":3,"mappings":"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","names":["routes","path","component","_tab1_page__WEBPACK_IMPORTED_MODULE_0__","Tab1PageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","Tab1PageModule","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_explore_container_explore_container_module__WEBPACK_IMPORTED_MODULE_1__","_tab1_routing_module__WEBPACK_IMPORTED_MODULE_2__","declarations","Tab1Page","storage","nativeGeocoder","router","auth","geolocation","androidPermission","locationAccuracy","alertCtrl","themeService","loadingController","locationCoords","latitude","longitude","accuracy","timestamp","timetest","Date","now","checkGPSPermission","getLocation","getJobs","database","executeSql","then","res","console","log","e","JSON","stringify","create","header","message","backdropDismiss","buttons","text","handler","syncAllJobs","alert","present","syncDataToServer","checkNetwork","networkStatus","get","datasyncstatus","connected","getJobsfromApi","showToast","getJobListFromLocal","event","CLAIMGUID","rows","item","dat","CLAIMRef","CLAIMJOBID","JOBGUID","RiskPostCode","ProductName","ContactName","BookingDate","AppointmentStartTime","AppointmentEndTime","BookingTimeType","RiskAddress","phone","HomePhone","ProductTypeId","IsClaim","BackgroundColour","CLIENTNAME","ProductTypeName","EngName","navigationExtras","state","data","navigate","getCurrentPosition","resp","options","useLocale","maxResults","reverseGeocode","coords","result","responseAddress","Object","entries","key","value","length","push","reverse","address","slice","error","i","parseInt","model","presentCustomLoader","jobfetchmsg","setTimeout","isJobsfetched","dismissLoading","retryAlert","retryCount","params","_angular_common_http__WEBPACK_IMPORTED_MODULE_9__","set","httpSend","subscribe","sort","a","b","RouteOrder","insertJobsInDB","err","el","setLoadingText","Promise","ListType","ParentJobGuid","resolve","firmwareUpdateCheck","addProgressBar","speedCheck","setProgressBar","syncOnRoute","syncArrived","syncAbandon","syncAuthorization","syncCertificate","syncNewAppliance","syncCompleteService1","syncboilerInstallation","syncBoilerInstallationPics","syncBoilerInstallationSign","syncCompleteClaim1","syncEnggPic","syncSiteSurvey","syncSurveyPics","syncSurveySign","completesync","emptyAllTables","reject","array","msg","completeClaimRes","serviceResG","claimSyncResponse","serviceSyncResponse","serviceSyncError","claimSyncError","completeClaimError","completeServiceRes","completeServiceError","getdateformatV2","lat","btn_msg","btn_err","hdr","subHeader","cssClass","_ionic_storage__WEBPACK_IMPORTED_MODULE_10__","_ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_11__","_api_service__WEBPACK_IMPORTED_MODULE_2__","_ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_3__","_awesome_cordova_plugins_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_5__","_ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_12__","_themes_service__WEBPACK_IMPORTED_MODULE_7__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/tab1/tab1-routing.module.ts","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.ts","webpack:///src/app/tab1/tab1.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","import { Component } from \"@angular/core\";\nimport { ApiService } from \"../api.service\";\nimport { HttpParams, JsonpClientBackend } from \"@angular/common/http\";\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\nimport { Router, NavigationExtras } from \"@angular/router\";\nimport {\n  NativeGeocoder,\n  NativeGeocoderResult,\n  NativeGeocoderOptions,\n} from \"@ionic-native/native-geocoder/ngx\";\nimport { AndroidPermissions } from '@awesome-cordova-plugins/android-permissions/ngx';\nimport { LocationAccuracy } from \"@ionic-native/location-accuracy/ngx\";\nimport { AlertController, LoadingController } from \"@ionic/angular\";\nimport { Storage } from \"@ionic/storage\";\nimport { ThemesService } from \"../themes.service\";\n\n@Component({\n  selector: \"app-tab1\",\n  templateUrl: \"tab1.page.html\",\n  styleUrls: [\"tab1.page.scss\"],\n})\n\nexport class Tab1Page {\n  public model = [];\n  //public modell: String[];\n  address = \"\";\n  index: any;\n  locationCoords: any;\n  timetest: any;\n  jobsListInsertId: any;\n  onRoutePromise: any;\n  // syncFlag :boolean = true;\n  jobfetchmsg: string = \"Please wait whilst the jobs are loading up. It may Take some time.\";\n  retryCount: number = 0;\n  isJobsfetched: boolean = false;\n\n  constructor(\n    private storage: Storage,\n    private nativeGeocoder: NativeGeocoder,\n    private router: Router,\n    private auth: ApiService,\n    private geolocation: Geolocation,\n    private androidPermission: AndroidPermissions,\n    private locationAccuracy: LocationAccuracy,\n    public alertCtrl: AlertController,\n    public themeService :ThemesService,\n    public loadingController: LoadingController\n  ) {\n    this.locationCoords = {\n      latitude: \"\",\n      longitude: \"\",\n      accuracy: \"\",\n      timestamp: \"\",\n    };\n    this.timetest = Date.now();\n  }\n\n  ngOnInit() {\n    this.auth.checkGPSPermission();\n    this.getLocation();\n    this.getJobs();\n    // START FOR SYNC LOG ONLY\n        this.auth.database.executeSql('create table if not exists SyncLog (JOBGUID  VARCHAR(32),  ActionName VARCHAR(32),  Msg varchar(32))', [])\n          .then((res) => {      \n            console.log('SyncLog created success ');\n          }).catch((e) => {            \n            console.log('SyncLog created failed ' + JSON.stringify(e));\n          })\n    // END FOR SYNC LOG ONLY\n\n  }\n\n  async showSyncAlert() {\n    const alert = await this.alertCtrl.create({\n      header: \"Are you sure?\",\n      message: \"You D\",\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: \"Sync Now\",\n          handler: () => {\n            this.syncAllJobs();\n          },\n        },\n        {\n          text: \"Sync Later\",\n          handler: () => {},\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  syncClick(){\n    this.syncDataToServer();\n  }\n\n  async getJobs() {\n    let networkStatus = await this.auth.checkNetwork();\n        this.storage.get(\"datasyncstatus\").then((datasyncstatus) => {\n          // this.storage.get('loginCount').then((res)=>{\n          //   console.log(\"plan login count after login page \"+res);\n            if (datasyncstatus == \"novice\") {\n              console.log(\"Plan A\");          \n              // EXECUTE PLAN B put jobslist from API\n              if (networkStatus.connected) {\n                this.getJobsfromApi();\n              } else {\n                this.auth.showToast(\"Internet not connected. There was a problem with your network connection.\",'danger');\n              }\n            }else{\n              console.log(\"Plan B\");        \n              this.getJobListFromLocal();\n            }\n            // } else if ((datasyncstatus == \"mature\" && res > 1)||(datasyncstatus == \"novice\" && res > 1)) {\n            //   console.log(\"Plan B\");\n            //   //Execute Plan A\n            //   // sync data to server\n            //   // empty tables\n            //   // then execute Plan B\n            //   //this.syncDataToServer();\n            //   this.getJobListFromLocal();\n            // } else{\n            //   console.log(\"Plan C\");\n            //   if (networkStatus.connected) {\n            //     this.syncDataToServer();\n            //   } else {\n            //     this.auth.showToast(\"Internet not connected. There was a problem with your network connection.\",'danger');\n            //   }\n            // }\n            \n          // }).catch((e) => {\n          //   this.auth.showToast(\"LoginCount Error Somthing went wrong! unable to access ionic storage\" + e,'danger');\n          // });\n        }).catch((e) => {\n          this.auth.showToast(\"data Sync status Error Somthing went wrong! unable to access ionic storage\" + e,'danger');\n        });\n  }\n\n  segmentChanged(event: any) {}\n\n  gotoDetails(CLAIMGUID: any) {\n    this.auth.database\n      .executeSql(\"select * from jobslist where CLAIMGUID=?\", [CLAIMGUID])\n      .then((res) => {\n        console.log(\"dddd \"+JSON.stringify(res.rows.item(0)));\n        \n        let dat = {\n          CLAIMGUID: res.rows.item(0)[\"CLAIMGUID\"],\n          CLAIMRef: res.rows.item(0)[\"CLAIMRef\"],\n          CLAIMJOBID: res.rows.item(0)[\"CLAIMJOBID\"],\n          JOBGUID: res.rows.item(0)[\"JOBGUID\"],\n          RiskPostCode: res.rows.item(0)[\"RiskPostCode\"],\n          ProductName: res.rows.item(0)[\"ProductName\"],\n          ContactName: res.rows.item(0)[\"ContactName\"],\n          BookingDate: res.rows.item(0)[\"BookingDate\"],\n          AppointmentStartTime: res.rows.item(0)[\"AppointmentStartTime\"],\n          AppointmentEndTime: res.rows.item(0)[\"AppointmentEndTime\"],\n          BookingTimeType: res.rows.item(0)[\"BookingTimeType\"],\n          RiskAddress: res.rows.item(0)[\"RiskAddress\"],\n          phone: res.rows.item(0)[\"phone\"],\n          HomePhone: res.rows.item(0)[\"HomePhone\"],\n          ProductTypeId: res.rows.item(0)[\"ProductTypeId\"],\n          IsClaim: res.rows.item(0)[\"IsClaim\"],\n          BackgroundColour: res.rows.item(0)[\"BackgroundColour\"],\n          CLIENTNAME: res.rows.item(0)[\"CLIENTNAME\"],\n          ProductTypeName: res.rows.item(0)[\"ProductTypeName\"],\n          EngName : res.rows.item(0)[\"EngName\"]\n        };\n\n        const navigationExtras: NavigationExtras = {\n          state: {\n            data: dat,\n          },\n        };\n        //querychk\n        this.router.navigate([\"details\"], navigationExtras).then(res=>\n          console.log(res)\n          \n        ).catch(e=>console.log(e)\n        );\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  public getLocation() {\n    this.geolocation\n      .getCurrentPosition()\n      .then((resp) => {\n        let options: NativeGeocoderOptions = {\n          useLocale: true,\n          maxResults: 5,\n        };\n        this.nativeGeocoder\n          .reverseGeocode(resp.coords.latitude, resp.coords.longitude, options)\n          .then((result: NativeGeocoderResult[]) => {\n            const responseAddress = [];\n            for (const [key, value] of Object.entries(result[0])) {\n              if (value.length > 0) {\n                responseAddress.push(value);\n              }\n            }\n            responseAddress.reverse();\n            for (const value of responseAddress) {\n              this.address += value + \", \";\n            }\n            this.address = this.address.slice();\n            //  this.addressConfiramtion(this.address, lattitude, longitude);\n          })\n          .catch();\n      })\n      .catch((error) => {});\n  }\n\n  getJobListFromLocal(){\n    console.log(\"calling get job from local\");\n    this.auth.database\n    .executeSql(\"select * from jobslist ORDER BY RouteOrder ASC\", [])\n    .then((res) => {\n      for (\n        let i = 0;\n        i < parseInt(JSON.stringify(res.rows.length));\n        i++\n      ) {\n        this.model.push(res.rows.item(i));\n      }\n    })\n    .catch((e) => {\n      this.auth.showToast(\n        \"Error Fetching local jobs table \" + JSON.stringify(e),'danger'\n      );\n    });\n  }\n\n  // TODO\n  // getJobListFromAPI() {\n  //   this.auth.firmwareUpdateCheck().then(res=>{\n  //     console.log(\"Danish \"+res);      \n  //     this.auth.presentCustomLoader(this.jobfetchmsg);\n  //     this.storage\n  //       .get(\"enggid\")\n  //       .then((res) => {\n  //         this.auth.speedCheck().then((resp : string|number)=>{     \n  //           if (resp == \"TimeOut\") {           \n  //             this.auth.dismissLoading();\n  //             this.retryAlert(\"Need a Good internet connection. Please try again later after some time\",\"Connection TimeOut\");\n  //           } else {\n  //             if (resp > 1) {\n  //               let params = new HttpParams()\n  //               .set(\"EngineerID\", res)\n  //               .set(\"AppVersion\", \"2.1.8\");\n  //               console.log(\"DanishDev\");\n  //               this.auth\n  //               .httpSend(\"Service_GetJobsForAEngineer2\", params, \"post\")\n  //               .subscribe(\n  //                 (res) => {\n  //                   this.model = [];\n  //                   this.model = res;\n  //                   this.model = this.model.sort((a,b)=> {\n  //                     return a.RouteOrder - b.RouteOrder ;\n  //                   });\n  //                   if (this.model.length == 0) {\n  //                     this.auth.alert(\"No Jobs Found or You are not assigned to any job. Please Try again after some time.\");\n  //                     this.auth.dismissLoading();\n  //                   } else {\n  //                     this.insertJobsInDB();\n  //                   }\n  //                 },\n  //                 (err) => {\n  //                   this.retryAlert(\"Cannot get Jobs. There might be some web service issue. Please try again after some time.\",\"Web Service Issue\");\n  //                   setTimeout(() => {\n  //                     this.auth.dismissLoading();\n  //                   }, 300);              \n  //                 }\n  //               );\n  //             } else {              \n  //               this.auth.dismissLoading();\n  //               this.retryAlert(\"Unable to Sync/Get Jobs! There might be some issue in your Internet connection, either it is too slow or it is not connected. Please Try again later.\",\"Internet Connection Failed\")\n  //             }\n  //           }\n  //         }).catch(e=>{\n  //           this.auth.dismissLoading();           \n  //           this.retryAlert(\"There might be some issue please try again.\",\"Unknown Error\");\n  //         });\n  //       })\n  //       .catch((e) => {\n  //         this.auth.dismissLoading();\n  //         this.auth.showToast(\"Erro Cannot get Engg. Info, Please Logout and Login again\",'danger');\n  //       });\n  //   });\n  // }\n\n  getJobsfromApi() {   \n    this.auth.getLocation();\n      this.auth.presentCustomLoader(this.jobfetchmsg)\n      .then(res=>{\n        setTimeout(() => {\n          if(!this.isJobsfetched){\n            this.auth.dismissLoading();\n            console.log(\"### after 30 sec calling this\");\n            if(!this.model.length)\n            this.retryAlert('Somthing went wrong, Please re-sync.',\"Unable to Get Jobs\",`${3-this.retryCount} attempts Left`);\n          }\n        }, 30000);\n      })\n      this.storage\n        .get(\"enggid\")\n        .then((res) => {\n                let params = new HttpParams()\n                .set(\"EngineerID\", res)\n                .set(\"AppVersion\", \"2.2\");\n                console.log(\"DanishDev\");\n                this.auth\n                .httpSend(\"Service_GetJobsForAEngineer2\", params, \"post\")\n                .subscribe(\n                  (res) => {\n                    this.isJobsfetched = true;\n                    this.model = [];\n                    this.model = res;\n                    console.log(\"dddd \"+JSON.stringify(this.model));\n                    this.model = this.model.sort((a,b)=> {\n                      return a.RouteOrder - b.RouteOrder ;\n                    });\n                    console.log(\"### after soring in model and sorting\");\n                    \n                    if (this.model.length == 0) {\n                      this.auth.alert(\"No Jobs Found or You are not assigned to any job. Please Try again after some time.\");\n                      this.auth.dismissLoading();\n                      console.log(\"### no jobs found\");\n                    } else {\n                      console.log(\"### insert jobs in db calling\");\n                      this.insertJobsInDB();\n                    }\n                  },\n                  (err) => {\n                    this.retryAlert(\"Cannot get Jobs. There might be some web service issue. Please try again after some time.\",\"Web Service Issue\",`${3-this.retryCount} attempts Left`);\n                    setTimeout(() => {\n                      this.auth.dismissLoading();\n                    }, 300);              \n                  }\n                );\n              }).catch((e) => {\n                        this.auth.dismissLoading();\n                        this.retryAlert(\"Cannot get Engg Info, Please Logout and Login again\",\"Database Error\",`${3-this.retryCount} attempts Left`);\n                      });\n\n  }\n\n\n  async insertJobsInDB() {\n    let i = 1;\n    for (const el of this.model) {\n      console.log(`### updating ${i} of ${this.model.length} jobs`);\n      this.auth.setLoadingText(`Please wait whilst the jobs are loading up. Updating ${i} of ${this.model.length} jobs`);\n      await new Promise(resolve => {\n        this.auth.database.executeSql(\n          \"insert into jobslist (CLAIMJOBID,CLAIMGUID,JOBGUID,RiskPostCode,ProductName,ContactName,BookingDate,AppointmentStartTime,AppointmentEndTime,BookingTimeType,RiskAddress,phone,HomePhone,ProductTypeId,IsClaim,BackgroundColour,CLIENTNAME,ProductTypeName,ListType,CLAIMRef,RouteOrder,ParentJobGuid,EngName)  values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\",\n          [\n            el.CLAIMJOBID,\n            el.CLAIMGUID,\n            el.JOBGUID,\n            el.RiskPostCode,\n            el.ProductName,\n            el.ContactName,\n            el.BookingDate,\n            el.AppointmentStartTime,\n            el.AppointmentEndTime,\n            el.BookingTimeType,\n            el.RiskAddress,\n            el.phone,\n            el.HomePhone,\n            el.ProductTypeId,\n            el.IsClaim,\n            el.BackgroundColour,\n            el.CLIENTNAME,\n            el.ProductTypeName,\n            el.ListType,\n            el.CLAIMRef,\n            el.RouteOrder,\n            el.ParentJobGuid,\n            el.EngName\n          ]\n        ).then(()=>{\n          resolve(\"\");\n          console.log(\"### jobslist inserted\");\n          }).catch(()=>{\n            resolve(\"\");\n          console.log(\"### jobslist not inserted\");\n          });\n      });\n      await new Promise(resolve => {\n        this.auth.database.executeSql(\"insert into jobsstatus (JOBGUID) values(?)\", [\n          el.JOBGUID\n        ]).then(()=>{\n          resolve(\"\");\n          console.log(\"### jobsstatus inserted\");\n          }).catch(()=>{\n            resolve(\"\");\n          console.log(\"### jobsstatus not inserted\");\n          });\n      });\n      await new Promise(resolve => {\n        this.auth.database.executeSql(\"insert into onroute (JOBGUID) values(?)\", [\n          el.JOBGUID\n        ]).then(()=>{\n          resolve(\"\");\n          console.log(\"### onroute inserted\");\n          }).catch(()=>{\n            resolve(\"\");\n          console.log(\"### onroute not inserted\");\n          });\n      });\n      await new Promise(resolve => {\n        this.auth.database.executeSql(\"insert into arrived (JOBGUID) values(?)\", [\n          el.JOBGUID\n        ]).then(()=>{\n          resolve(\"\");\n          console.log(\"### arrived inserted\");\n          }).catch(()=>{\n            resolve(\"\");\n          console.log(\"### arrived not inserted\");\n          });\n      });\n      await new Promise(resolve => {\n        this.auth.database.executeSql(\"insert into completeservice (JOBGUID, ParentJobGuid) values(?,?)\", [\n          el.JOBGUID,el.ParentJobGuid\n        ]).then(()=>{\n          resolve(\"\");\n          console.log(\"### completeservice inserted\");\n          }).catch(()=>{\n            resolve(\"\");\n          console.log(\"### completeservice not inserted\");\n          });\n      });\n      await new Promise(resolve => {\n        this.auth.database.executeSql(\n          \"insert into enggpics (JOBGUID,CLAIMGUID) values(?,?)\",\n          [el.JOBGUID,el.CLAIMGUID]\n        ).then(()=>{\n          resolve(\"\");\n          console.log(\"### enggpics inserted\");\n          }).catch(()=>{\n            resolve(\"\");\n          console.log(\"### enggpics not inserted\");\n          });\n      });\n      ++i;\n    }\n\n    console.log(\"### all the data are inserted if its new\");\n    this.auth.dismissLoading();\n\n    console.log(\"### Plan set satuts mature\");        \n    this.storage.set(\"datasyncstatus\", \"mature\");\n\n    // let counter = 1;\n    // for (let i = 0; i < this.model.length; i++) {\n    //   console.log(`### updating ${i+1} of ${this.model.length} jobs`);\n    //   // this.auth.insertDataIntoJobsListTable(\n    //     // this.model[i][\"CLAIMJOBID\"],\n    //     // this.model[i][\"CLAIMGUID\"],\n    //     // this.model[i][\"JOBGUID\"],\n    //     // this.model[i][\"RiskPostCode\"],\n    //     // this.model[i][\"ProductName\"],\n    //     // this.model[i][\"ContactName\"],\n    //     // this.model[i][\"BookingDate\"],\n    //     // this.model[i][\"AppointmentStartTime\"],\n    //     // this.model[i][\"AppointmentEndTime\"],\n    //     // this.model[i][\"BookingTimeType\"],\n    //     // this.model[i][\"RiskAddress\"],\n    //     // this.model[i][\"phone\"],\n    //     // this.model[i][\"ProductTypeId\"],\n    //     // this.model[i][\"IsClaim\"],\n    //     // this.model[i][\"BackgroundColour\"],\n    //     // this.model[i][\"CLIENTNAME\"],\n    //     // this.model[i][\"ProductTypeName\"],\n    //     // this.model[i][\"ListType\"],\n    //     // this.model[i][\"CLAIMRef\"],\n    //     // this.model[i][\"RouteOrder\"],\n    //     // this.model[i][\"ParentJobGuid\"],\n    //     // this.model[i][\"EngName\"],\n    //     // this.jobfetchmsg+` updating ${counter} of ${this.model.length} jobs`\n    //   // );\n    //   this.auth.database.executeSql(\n    //     \"insert into jobslist (CLAIMJOBID,CLAIMGUID,JOBGUID,RiskPostCode,ProductName,ContactName,BookingDate,AppointmentStartTime,AppointmentEndTime,BookingTimeType,RiskAddress,phone,ProductTypeId,IsClaim,BackgroundColour,CLIENTNAME,ProductTypeName,ListType,CLAIMRef,RouteOrder,ParentJobGuid,EngName)  values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\",\n    //     [\n    //       this.model[i][\"CLAIMJOBID\"],\n    //       this.model[i][\"CLAIMGUID\"],\n    //       this.model[i][\"JOBGUID\"],\n    //       this.model[i][\"RiskPostCode\"],\n    //       this.model[i][\"ProductName\"],\n    //       this.model[i][\"ContactName\"],\n    //       this.model[i][\"BookingDate\"],\n    //       this.model[i][\"AppointmentStartTime\"],\n    //       this.model[i][\"AppointmentEndTime\"],\n    //       this.model[i][\"BookingTimeType\"],\n    //       this.model[i][\"RiskAddress\"],\n    //       this.model[i][\"phone\"],\n    //       this.model[i][\"ProductTypeId\"],\n    //       this.model[i][\"IsClaim\"],\n    //       this.model[i][\"BackgroundColour\"],\n    //       this.model[i][\"CLIENTNAME\"],\n    //       this.model[i][\"ProductTypeName\"],\n    //       this.model[i][\"ListType\"],\n    //       this.model[i][\"CLAIMRef\"],\n    //       this.model[i][\"RouteOrder\"],\n    //       this.model[i][\"ParentJobGuid\"],\n    //       this.model[i][\"EngName\"],\n    //     ]\n    //   );\n    //   this.auth.database.executeSql(\"insert into jobsstatus (JOBGUID) values(?)\", [\n    //     this.model[i][\"JOBGUID\"],\n    //   ]);\n    //   this.auth.database.executeSql(\"insert into onroute (JOBGUID) values(?)\", [\n    //     this.model[i][\"JOBGUID\"],\n    //   ]);\n    //   this.auth.database.executeSql(\"insert into arrived (JOBGUID) values(?)\", [\n    //     this.model[i][\"JOBGUID\"],\n    //   ]);\n    //   this.auth.database.executeSql(\"insert into completeservice (JOBGUID, ParentJobGuid) values(?,?)\", [\n    //     this.model[i][\"JOBGUID\"],this.model[i][\"ParentJobGuid\"],\n    //   ]);\n    //   this.auth.database.executeSql(\n    //     \"insert into enggpics (JOBGUID,CLAIMGUID) values(?,?)\",\n    //     [ this.model[i][\"JOBGUID\"],,  this.model[i][\"CLAIMGUID\"],]\n    //   );\n\n    //   if (i == this.model.length - 1) {\n    //     console.log(\"### Plan set satuts mature\");        \n    //     this.storage.set(\"datasyncstatus\", \"mature\");\n    //     // setTimeout(() => {\n    //     //   this.auth.dismissLoading();\n    //     //   this.auth.dismissLoading();\n    //     // }, 5000);\n    //   }\n    //   // counter++;\n    // }\n  }\n\n  async syncDataToServer() {\n    this.auth.firmwareUpdateCheck().then(res=>{\n      console.log(\"Danish \"+res);      \n      this.auth.presentCustomLoader(\"Syncing Data. It may take some time. Please wait... Thank you\").then(()=>{\n        this.auth.addProgressBar();\n      })\n      this.auth.speedCheck().then((res : string|number)=>{     \n        // this.auth.showToast(res)\n        if (res == \"TimeOut\") {\n          this.auth.setProgressBar(\"100\")\n          this.auth.dismissLoading();\n          this.auth.alert(\"Need a Good internet connection. Please try again later after some time\",\"Connection TimeOut\")\n        } else {\n          if (res > 0.5) {\n            this.syncAllJobs();\n          } else {\n            this.auth.setProgressBar(\"100\")\n            this.auth.dismissLoading();\n            this.auth.alert(\"Unable to Sync/Get Jobs! Your Internet connection is too slow Please Try again later.\",\"Poor Internet Connection\")\n          }\n        }\n      }).catch(e=>{\n        this.auth.dismissLoading();\n        this.auth.alert(JSON.stringify(e));\n      });\n    });\n  }\n\n  syncAllJobs(){\n    this.syncOnRoute()\n      .then((res) => {\n        this.syncArrived()\n          .then((res) => {\n            this.syncAbandon()\n              .then((res) => {\n                this.syncAuthorization()\n                  .then((res) => {\n                    this.syncCertificate()\n                      .then((res) => {\n                        this.syncNewAppliance()\n                          .then((res) => {\n                            this.syncCompleteService1()\n                              .then((res) => {\n                                this.syncboilerInstallation()\n                                  .then((res) => {\n                                    this.syncBoilerInstallationPics()\n                                      .then((res) => {\n                                        this.syncBoilerInstallationSign()\n                                          .then((res) => {\n                                            this.syncCompleteClaim1()\n                                              .then((res) => {\n                                                this.syncEnggPic()\n                                                  .then((res) => {\n                                                    this.syncSiteSurvey()\n                                                      .then((res) => {\n                                                        this.syncSurveyPics()\n                                                          .then((res) => {\n                                                            this.syncSurveySign()\n                                                              .then((res) => {\n                                                                this.completesync();\n\n                                                                // if(this.syncFlag){\n                                                                //   this.resync();\n                                                                // } else {\n                                                                //   this.auth.database.executeSql('select * from errorlog',[]).then(res =>{\n                                                                //     if (res.rows.length > 0) {\n                                                                //       // this.auth.sendErrorLog();\n                                                                //       // this.auth.SendErrorEmail();\n                                                                //       this.completesync();\n                                                                //     } else {\n                                                                //       this.completesync();\n                                                                //     }  \n                                                                //   }); \n                                                                // }                                                                                                                                                                                                                                                                                                  \n                                                              })\n                                                              .catch((e) => {\n                                                                this.auth.showToast(\n                                                                  \"syncSurveySign Error\" +\n                                                                    JSON.stringify(\n                                                                      e\n                                                                    ),'danger'\n                                                                );\n                                                              });\n                                                          })\n                                                          .catch((e) => {\n                                                            this.auth.showToast(\n                                                              \"syncSurveyPics Error\" +\n                                                                JSON.stringify(\n                                                                  e\n                                                                ),'danger'\n                                                            );\n                                                          });\n                                                      })\n                                                      .catch((e) => {\n                                                        this.auth.showToast(\n                                                          \"syncSiteSurvey Error\" +\n                                                            JSON.stringify(e),'danger'\n                                                        );\n                                                      });\n                                                  })\n                                                  .catch((e) => {\n                                                    this.auth.showToast(\n                                                      \"syncEnggPic Sync Error\" +\n                                                        JSON.stringify(e),'danger'\n                                                    );\n                                                  });\n                                              })\n                                              .catch((e) => {\n                                                this.auth.showToast(\n                                                  \"Complete claim Sync Error\" +\n                                                    JSON.stringify(e),'danger'\n                                                );\n                                              });\n                                          })\n                                          .catch((e) => {\n                                            this.auth.showToast(\n                                              \"Boiler installation sign Sync Error\" +\n                                                JSON.stringify(e),'danger'\n                                            );\n                                          });\n                                      })\n                                      .catch((e) => {\n                                        this.auth.showToast(\n                                          \"Boiler installation pics Sync Error\" +\n                                            JSON.stringify(e),'danger'\n                                        );\n                                      });\n                                  })\n                                  .catch((e) => {\n                                    this.auth.showToast(\n                                      \"Boiler Installation Sync Error\" +\n                                        JSON.stringify(e),'danger'\n                                    );\n                                  });\n                                //    }).catch((e) => {   this.auth.showToast('Make Certificate Sync Error' + JSON.stringify(e)) });\n                              })\n                              .catch((e) => {\n                                this.auth.showToast(\n                                  \"Complete Service Sync Error\" +\n                                    JSON.stringify(e),'danger'\n                                );\n                              });\n                          })\n                          .catch((e) => {\n                            this.auth.showToast(\n                              \"New Appliance Sync Error\" + JSON.stringify(e),'danger'\n                            );\n                          });\n                      })\n                      .catch((e) => {\n                        this.auth.showToast(\n                          \"certificate Sync Error\" + JSON.stringify(e),'danger'\n                        );\n                      });\n                  })\n                  .catch((e) => {\n                    this.auth.showToast(\n                      \"Authoraization Sync Error\" + JSON.stringify(e),'danger'\n                    );\n                  });\n              })\n              .catch((e) => {\n                this.auth.showToast(\"Abandon Sync Error\" + JSON.stringify(e),'danger');\n              });\n          })\n          .catch((e) => {\n            this.auth.showToast(\"OnArrived Sync Error\" + JSON.stringify(e),'danger');\n          });\n      })\n      .catch((e) => {\n        this.auth.showToast(\"OnRoute Sync Error\" + JSON.stringify(e),'danger');\n      });\n      // setTimeout(() => {\n      //   this.auth.dismissLoading();\n      //   this.auth.alert(\"Please check you network setting and try again.\",\"Connection Timed out\")\n      // }, 180000);\n  }\n  completesync() {\n    this.auth.setProgressBar(\"100\");\n    this.auth.dismissLoading();\n    this.auth.emptyAllTables();\n    this.getJobsfromApi();\n    // this.syncFlag = true;\n  }\n  resync() {\n    this.syncAllJobs();\n    // this.syncFlag = false;\n  }\n\n  syncOnRoute() {\n    this.auth.setLoadingText(\"Syncing OnRoute. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"6.6\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from onroute where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"CLAIMGUID\", res.rows.item(i)[\"CLAIMGUID\"])\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"Latitude\", res.rows.item(i)[\"Latitude\"])\n                .set(\"Longitude\", res.rows.item(i)[\"Longitude\"])\n                .set(\"OnRouteDT\", res.rows.item(i)[\"OnRouteDT\"])\n                .set(\"Desc\", res.rows.item(i)[\"OnRouteDT\"])\n                .set(\"title\", \"On Route\");\n              this.auth\n                .httpSend(\"Service_SaveOnRoute\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"OnRoute Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    //deleting syned data from database\n                    this.auth.database.executeSql(\n                      \"delete from onroute where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    if (array.length == res.rows.length) {\n                      resolve(\"onroute complete\");\n                    }                    \n                  },\n                  (err) => {                    \n                    // Start ErrorLog\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"OnRoute Failed\", err[\"Msg\"]);\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_SaveOnRoute\";\n                    // console.log(res.rows.item(i)[\"CLAIMGUID\"]);\n                    // let Descp = \n                    //   {\n                    //     CLAIMGUID : res.rows.item(i)[\"CLAIMGUID\"],\n                    //     JOBGUID : res.rows.item(i)[\"JOBGUID\"],\n                    //     Latitude : res.rows.item(i)[\"Latitude\"],\n                    //     Longitude : res.rows.item(i)[\"Longitude\"],\n                    //     OnRouteDT : res.rows.item(i)[\"OnRouteDT\"],\n                    //     Desc : res.rows.item(i)[\"OnRouteDT\"],\n                    //     title : \"On Route\"\n                    // }\n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message));\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                );\n            } // end of for loop\n          } else {\n            resolve(\"onroute complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on route failed\" + JSON.stringify(e));\n        });\n    });\n  }\n\n  syncArrived() {\n    this.auth.setLoadingText(\"Syncing On Arrived. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"13.3\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from arrived where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"Latitude\", res.rows.item(i)[\"Latitude\"])\n                .set(\"Longitude\", res.rows.item(i)[\"Longitude\"])\n                .set(\"ArrAtJobDT\", res.rows.item(i)[\"OnRouteDT\"])\n                .set(\"Desc\", res.rows.item(i)[\"OnRouteDT\"])\n                .set(\"title\", \"Arrived at job\");\n              this.auth\n                .httpSend(\"Service_SaveArrivedAtJob\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"ArrivedAtJob Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    //deleting syned data from database\n                    this.auth.database.executeSql(\n                      \"delete from arrived where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    if (array.length == res.rows.length) {\n                      resolve(\"OnArrive complete\");\n                    }\n                  },\n                  (err) => {\n                    // Start ErrorLog\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"ArrivedAtJob Failed\", err[\"Msg\"]);\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_SaveArrivedAtJob\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //     Latitude: res.rows.item(i)[\"Latitude\"],\n                    //     Longitude: res.rows.item(i)[\"Longitude\"],\n                    //     ArrAtJobDT: res.rows.item(i)[\"OnRouteDT\"],\n                    //     Desc: res.rows.item(i)[\"OnRouteDT\"],\n                    //     title: \"Arrived at job\"\n                    // }                      \n                    // ;\n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog                  \n                    array.push(err[\"header\"]);\n                    this.auth.showToast(err.message)\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                );\n            } // end of for loop\n          } else {\n            resolve(\"OnArrive complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on arrived complete\");\n        });\n    });\n  }\n\n  syncAbandon() {\n    this.auth.setLoadingText(\"Syncing Abandon Call Out. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"20\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from abandon where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"OUTCOME\", res.rows.item(i)[\"OUTCOME\"])\n                .set(\"PARTS\", res.rows.item(i)[\"parts\"])\n                .set(\"LABOUR\", res.rows.item(i)[\"labour\"])\n                .set(\"JOBNOTE\", res.rows.item(i)[\"JOBNOTE\"])\n                .set(\"FILEBASE\", res.rows.item(i)[\"FILEBASE\"])\n                .set(\"FILENAME\", res.rows.item(i)[\"FILENAME\"])\n                .set(\"FORACTION\", \"AbandonCallOut\")\n                .set(\"OnDt\", res.rows.item(i)[\"OnDt\"])\n                .set(\"Latitude\", res.rows.item(i)[\"Latitude\"])\n                .set(\"Longitude\", res.rows.item(i)[\"Longitude\"])\n                .set(\"ComboClaimJobId\", \"\")\n                .set(\"ComboIsCompleted\", \"\")\n                .set(\"CantCompleteReason\", \"\");\n              this.auth\n                .httpSend(\"Service_AllEngineerActionsNew\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"Abandoned Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    //deleting syned data from database\n                    this.auth.database.executeSql(\n                      \"delete from abandon where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    if (array.length == res.rows.length) {\n                      resolve(\"Abandon complete\");\n                    }\n                  },\n                  (err) => {\n                    // Start ErrorLog\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"Abandoned Failed\", err[\"Msg\"]);\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_AllEngineerActionsNew\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //     OUTCOME: res.rows.item(i)[\"OUTCOME\"],                              \n                    //     PARTS: res.rows.item(i)[\"parts\"],\n                    //     LABOUR: res.rows.item(i)[\"labour\"],\n                    //     JOBNOTE: res.rows.item(i)[\"JOBNOTE\"],\n                    //     FILEBASE: res.rows.item(i)[\"FILEBASE\"],\n                    //     FILENAME: res.rows.item(i)[\"FILENAME\"],\n                    //     FORACTION: \"AbandonCallOut\",\n                    //     OnDt: res.rows.item(i)[\"OnDt\"], \n                    //     Latitude: res.rows.item(i)[\"Latitude\"],\n                    //     Longitude: res.rows.item(i)[\"Longitude\"],\n                    //     ComboClaimJobId: \"\",\n                    //     ComboIsCompleted: \"\",\n                    //     CantCompleteReason: \"\"\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog                    \n                    array.push(err[\"header\"]);\n                    this.auth.showToast(JSON.stringify(err.message))\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                );\n            }\n          } else {\n            resolve(\"Abandon complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on Abandon failed\");\n        });\n    });\n  }\n\n  syncAuthorization() {\n    this.auth.setLoadingText(\"Syncing Authorization. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"26.6\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from authorization where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"OUTCOME\", res.rows.item(i)[\"OUTCOME\"])\n                .set(\"PARTS\", res.rows.item(i)[\"parts\"])\n                .set(\"LABOUR\", res.rows.item(i)[\"labour\"])\n                .set(\"JOBNOTE\", res.rows.item(i)[\"JOBNOTE\"])\n                .set(\"FILEBASE\", res.rows.item(i)[\"FILEBASE\"])\n                .set(\"FILENAME\", res.rows.item(i)[\"FILENAME\"])\n                .set(\"FORACTION\", \"AuthorisationRequired\")\n                .set(\"OnDt\", res.rows.item(i)[\"OnDt\"])\n                .set(\"Latitude\", res.rows.item(i)[\"Latitude\"])\n                .set(\"Longitude\", res.rows.item(i)[\"Longitude\"])\n                .set(\"ComboClaimJobId\", \"\")\n                .set(\"ComboIsCompleted\", \"\")\n                .set(\"CantCompleteReason\", \"\");\n              this.auth\n                .httpSend(\"Service_AllEngineerActionsNew\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"Authorization Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    //deleting syned data from database\n                    this.auth.database.executeSql(\n                      \"delete from authorization where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    if (array.length == res.rows.length) {\n                      resolve(\"authorization complete\");\n                    }\n                  },\n                  (err) => {\n                    // Start ErrorLog\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"Authorization Failed\", err[\"Msg\"]);\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_AllEngineerActionsNew\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //     OUTCOME: res.rows.item(i)[\"OUTCOME\"],                              \n                    //     PARTS: res.rows.item(i)[\"parts\"],\n                    //     LABOUR: res.rows.item(i)[\"labour\"],\n                    //     JOBNOTE: res.rows.item(i)[\"JOBNOTE\"],\n                    //     FILEBASE: res.rows.item(i)[\"FILEBASE\"],\n                    //     FILENAME: res.rows.item(i)[\"FILENAME\"],\n                    //     FORACTION: \"AuthorisationRequired\",\n                    //     OnDt: res.rows.item(i)[\"OnDt\"], \n                    //     Latitude: res.rows.item(i)[\"Latitude\"],\n                    //     Longitude: res.rows.item(i)[\"Longitude\"],\n                    //     ComboClaimJobId: \"\",\n                    //     ComboIsCompleted: \"\",\n                    //     CantCompleteReason: \"\"\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog       \n                    this.auth.showToast(JSON.stringify(err.message))             \n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                );\n            }\n          } else {\n            resolve(\"authorization complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on authorization failed\");\n        });\n    });\n  }\n\n  syncNewAppliance() {\n    this.auth.setLoadingText(\"Syncing Appliances. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"40\");\n    return new Promise((resolve, reject) => {\n      resolve('resolved')\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from newappliance where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"AppType\", res.rows.item(i)[\"AppType\"])\n                .set(\"Make\", res.rows.item(i)[\"Make\"])\n                .set(\"Model\", res.rows.item(i)[\"Model\"])\n                .set(\"BType\", res.rows.item(i)[\"BType\"])\n                .set(\"Loc\", res.rows.item(i)[\"Loc\"])\n                .set(\"Flue\", res.rows.item(i)[\"Flue\"])\n                .set(\"OwnedBy\", res.rows.item(i)[\"OwnedBy\"])\n                .set(\"Inspected\", res.rows.item(i)[\"Inspected\"])\n                .set(\"ZeroGov\", res.rows.item(i)[\"ZeroGov\"])\n                .set(\"OPU\", res.rows.item(i)[\"OPU\"])\n                .set(\"OptPrs\", res.rows.item(i)[\"OptPrs\"])\n                .set(\"OSD\", res.rows.item(i)[\"OSD\"])\n                .set(\"VS\", res.rows.item(i)[\"VS\"])\n                .set(\"VCF\", res.rows.item(i)[\"VCF\"])\n                .set(\"FOC\", res.rows.item(i)[\"FOC\"])\n                .set(\"ComRead\", res.rows.item(i)[\"ComRead\"])\n                .set(\"HRatio\", res.rows.item(i)[\"HRatio\"])\n                .set(\"HCO2Val\", res.rows.item(i)[\"HCO2Val\"])\n                .set(\"HCOPPM\", res.rows.item(i)[\"HCOPPM\"])\n                .set(\"LRatio\", res.rows.item(i)[\"LRatio\"])\n                .set(\"LCO2Val\", res.rows.item(i)[\"LCO2Val\"])\n                .set(\"LCOPPM\", res.rows.item(i)[\"LCOPPM\"])\n                .set(\"STU\", res.rows.item(i)[\"STU\"])\n                .set(\"DefId\", res.rows.item(i)[\"DefId\"])\n                .set(\"GIUSP\", res.rows.item(i)[\"GIUSP\"])\n                .set(\"WarAdRec\", res.rows.item(i)[\"WarAdRec\"])\n                .set(\"RemAc\", res.rows.item(i)[\"RemAc\"])\n                .set(\"IsDelete\", res.rows.item(i)[\"IsDelete\"]);\n              this.auth\n                .httpSend(\"Service_ApplianceNew\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"ApplianceNew Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    this.auth.database.executeSql(\n                      \"delete from newappliance where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    if (array.length == res.rows.length) {\n                      resolve(\"newappliance complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"ApplianceNew Failed\", err[\"Msg\"]);\n                    // Start ErrorLog\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_ApplianceNew\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //     AppType: res.rows.item(i)[\"AppType\"],\n                    //     Make: res.rows.item(i)[\"Make\"],\n                    //     Model: res.rows.item(i)[\"Model\"],\n                    //     BType: res.rows.item(i)[\"BType\"],\n                    //     Loc: res.rows.item(i)[\"Loc\"],\n                    //     Flue: res.rows.item(i)[\"Flue\"],\n                    //     OwnedBy: res.rows.item(i)[\"OwnedBy\"],\n                    //     Inspected: res.rows.item(i)[\"Inspected\"],\n                    //     ZeroGov: res.rows.item(i)[\"ZeroGov\"],\n                    //     OPU: res.rows.item(i)[\"OPU\"],\n                    //     OptPrs: res.rows.item(i)[\"OptPrs\"],\n                    //     OSD: res.rows.item(i)[\"OSD\"],\n                    //     VS: res.rows.item(i)[\"VS\"],\n                    //     VCF: res.rows.item(i)[\"VCF\"],\n                    //     FOC: res.rows.item(i)[\"FOC\"],\n                    //     ComRead: res.rows.item(i)[\"ComRead\"],\n                    //     HRatio: res.rows.item(i)[\"HRatio\"],\n                    //     HCO2Val: res.rows.item(i)[\"HCO2Val\"],\n                    //     HCOPPM: res.rows.item(i)[\"HCOPPM\"],\n                    //     LRatio: res.rows.item(i)[\"LRatio\"],\n                    //     LCO2Val: res.rows.item(i)[\"LCO2Val\"],\n                    //     LCOPPM: res.rows.item(i)[\"LCOPPM\"],\n                    //     STU: res.rows.item(i)[\"STU\"],\n                    //     DefId: res.rows.item(i)[\"DefId\"],\n                    //     GIUSP: res.rows.item(i)[\"GIUSP\"],\n                    //     WarAdRec: res.rows.item(i)[\"WarAdRec\"],\n                    //     RemAc: res.rows.item(i)[\"RemAc\"],\n                    //     IsDelete: res.rows.item(i)[\"IsDelete\"],\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"newappliance complete\");\n                    }\n                  }\n                );\n            } // end of for loop\n          } else {\n            resolve(\"newappliance complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on newappliance failed\");\n        });\n    });\n  }\n\n  syncCertificate() {\n    this.auth.setLoadingText(\"Syncing Certificates. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"33.2\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from certificate where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          console.log(\"dddd \"+JSON.stringify(res.rows.item(0)));\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"DetailsWork\", res.rows.item(i)[\"DetailsWork\"])\n                .set(\"NoOfAppTested\", res.rows.item(i)[\"NoOfAppTested\"])\n                .set(\"NextDueDt\", res.rows.item(i)[\"NextDueDt\"])\n                .set(\"OGIns\", res.rows.item(i)[\"OGIns\"])\n                .set(\"OGSup\", res.rows.item(i)[\"OGSup\"])\n                .set(\"ECon\", res.rows.item(i)[\"ECon\"])\n                .set(\"OGTight\", res.rows.item(i)[\"OGTight\"])\n                .set(\"COFitted\", res.rows.item(i)[\"COFitted\"])\n                .set(\"COTested\", res.rows.item(i)[\"COTested\"])\n                .set(\"EquiBond\", res.rows.item(i)[\"EquiBond\"])\n                .set(\"SigImage\", res.rows.item(i)[\"SigImage\"])\n                .set(\"SigRec\", res.rows.item(i)[\"SigRec\"])\n                .set(\"FlueChkDt\", res.rows.item(i)[\"FlueChkDt\"])\n                .set(\"ClaimJobId\", res.rows.item(i)[\"CLAIMJOBID\"])\n                .set(\"ParentJobGuid\", res.rows.item(i)[\"ParentJobGuid\"]);\n              this.auth\n                .httpSend(\"Service_Certificate\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    console.log('#### cert succ'+JSON.stringify(msg));                    \n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"certificate Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    this.auth.database.executeSql(\n                      \"delete from certificate where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    if (array.length == res.rows.length) {\n                      resolve(\"certificate complete\");\n                    }\n                  },\n                  (err) => {\n                    console.log('#### cert err'+JSON.stringify(err));     \n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"certificate Failed\", JSON.stringify(err));\n                    // Start ErrorLog\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_Certificate\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //     DetailsWork: res.rows.item(i)[\"DetailsWork\"],\n                    //     NoOfAppTested: res.rows.item(i)[\"NoOfAppTested\"],\n                    //     NextDueDt: res.rows.item(i)[\"NextDueDt\"],\n                    //     OGIns: res.rows.item(i)[\"OGIns\"],\n                    //     OGSup: res.rows.item(i)[\"OGSup\"],\n                    //     ECon: res.rows.item(i)[\"ECon\"],\n                    //     OGTight: res.rows.item(i)[\"OGTight\"],\n                    //     COFitted: res.rows.item(i)[\"COFitted\"],\n                    //     COTested: res.rows.item(i)[\"COTested\"],\n                    //     EquiBond: res.rows.item(i)[\"EquiBond\"],\n                    //     SigImage: res.rows.item(i)[\"SigImage\"],\n                    //     SigRec: res.rows.item(i)[\"SigRec\"],\n                    //     FlueChkDt: res.rows.item(i)[\"FlueChkDt\"],\n                    //     ClaimJobId: res.rows.item(i)[\"ClaimJobId\"],\n                    //     ParentJobGuid: \"\"\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"certificate complete\");\n                    }\n                  },()=>{\n\n                  }\n                );\n            } // end of for loop\n          } else {\n            resolve(\"certificate complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on certificate failed\");\n        });\n      resolve(\"certificate complete\");\n    });\n  }\n\n  syncCompleteClaim1() {\n    this.auth.setLoadingText(\"Syncing Claims Completed It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"73\");\n    let array = [];\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"select * from completeclaim where HaveData=?\", [\"yes\"])\n        .then((completeClaimRes) => {\n          if (completeClaimRes.rows.length > 0) {\n            //For Loop Start\n            for (let i = 0; i < completeClaimRes.rows.length; i++) {\n              if (completeClaimRes.rows.item(i)[\"BackgroundColour\"] == \"#20B2AA\") {\n                // check for the combo job\n                console.log(\"combo check for the combo job \");                \n                this.auth.database\n                  .executeSql(\n                    \"select * from completeservice where ParentJobGuid=?\",\n                    [completeClaimRes.rows.item(i)[\"JOBGUID\"]]\n                  )\n                  .then((serviceResG) => {\n                    if (serviceResG.rows.item(0)[\"HaveData\"] == \"combo\") {\n                      // check is  service also completed then sync BOTH claim and service\n                      console.log(\"combo check is  service also completed then sync BOTH claim and service\");  \n                      let params = new HttpParams() //Sync Claim\n                        .set(\"JOBGUID\", completeClaimRes.rows.item(i)[\"JOBGUID\"])\n                        .set(\"OUTCOME\", completeClaimRes.rows.item(i)[\"OUTCOME\"])\n                        .set(\"PARTS\", completeClaimRes.rows.item(i)[\"PARTS\"])\n                        .set(\"LABOUR\", completeClaimRes.rows.item(i)[\"LABOUR\"])\n                        .set(\"JOBNOTE\", completeClaimRes.rows.item(i)[\"JOBNOTE\"])\n                        .set(\"FILEBASE\", completeClaimRes.rows.item(i)[\"FILEBASE\"])\n                        .set(\"FILENAME\", completeClaimRes.rows.item(i)[\"FILENAME\"])\n                        .set(\"FORACTION\", \"Claim\")\n                        .set(\"OnDt\", completeClaimRes.rows.item(i)[\"OnDt\"])\n                        .set(\"Latitude\", completeClaimRes.rows.item(i)[\"Latitude\"])\n                        .set(\"Longitude\", completeClaimRes.rows.item(i)[\"Longitude\"])\n                        .set(\"ComboClaimJobId\", completeClaimRes.rows.item(i)[\"ComboClaimJobId\"])\n                        .set(\"ComboIsCompleted\", \"true\")\n                        .set(\"CantCompleteReason\",serviceResG.rows.item(i)[\"CantCompleteReason\"]);\n                      this.auth.httpSend(\"Service_AllEngineerActionsNew\",params,\"post\")\n                        .subscribe(\n                          (claimSyncResponse) => {                            \n                            console.log(\"combo claim synced\");  \n                            // this.auth.insertIntoSyncLog(completeClaimRes.rows.item(i)['JOBGUID'],  \"Calim Success\", claimSyncResponse[\"Msg\"]);\n                            this.auth.database.executeSql(\n                              \"delete from completeclaim where JOBGUID=?\",\n                              [completeClaimRes.rows.item(i)[\"JOBGUID\"]]\n                            );\n                            // Sync Service\n                            let params = new HttpParams()\n                              .set(\"JOBGUID\",serviceResG.rows.item(i)[\"JOBGUID\"])\n                              .set(\"OUTCOME\",serviceResG.rows.item(i)[\"OUTCOME\"])\n                              .set(\"PARTS\", serviceResG.rows.item(i)[\"PARTS\"])\n                              .set(\"LABOUR\", serviceResG.rows.item(i)[\"LABOUR\"])\n                              .set(\"JOBNOTE\",serviceResG.rows.item(i)[\"JOBNOTE\"])\n                              .set(\"FILEBASE\",serviceResG.rows.item(i)[\"FILEBASE\"])\n                              .set(\"FILENAME\",serviceResG.rows.item(i)[\"FILENAME\"])\n                              .set(\"FORACTION\", \"Service\")\n                              .set(\"OnDt\", serviceResG.rows.item(i)[\"OnDt\"])\n                              .set( \"Latitude\",completeClaimRes.rows.item(i)[\"Latitude\"])\n                              .set(\"Longitude\",completeClaimRes.rows.item(i)[\"Longitude\"])\n                              .set(\"ComboClaimJobId\",completeClaimRes.rows.item(i)[\"ComboClaimJobId\"])\n                              .set(\"ComboIsCompleted\", \"true\")\n                              .set(\"CantCompleteReason\",serviceResG.rows.item(i)[\"CantCompleteReason\"]);\n                              this.auth.httpSend(\"Service_AllEngineerActionsNew\", params,\"post\")\n                              .subscribe(\n                                (serviceSyncResponse) => {\n                                  console.log(\"combo service synced\");  \n                                  // this.auth.insertIntoSyncLog(completeClaimRes.rows.item(i)['JOBGUID'],  \"Combo S Success\", serviceSyncResponse[\"Msg\"]);\n                                  this.auth.database.executeSql(\n                                    \"delete from completeservice where JOBGUID=?\",\n                                    [serviceResG.rows.item(i)[\"JOBGUID\"]]\n                                  );\n                                  array.push(serviceSyncResponse[\"Msg\"]);\n                                  if (\n                                    array.length == completeClaimRes.rows.length\n                                  ) {\n                                    resolve(\"Combo complete\");\n                                  }\n                                  //\n                                },\n                                (serviceSyncError) => {\n                                  // Start ErrorLog\n                                  // this.auth.insertIntoSyncLog(completeClaimRes.rows.item(i)['JOBGUID'],  \"Combo S Failed\", serviceSyncError[\"Msg\"]);\n                                  // let errorMsg = JSON.stringify(serviceSyncError);\n                                  // let actionName =\"Service_AllEngineerActionsNew\";\n                                  // let Descp = \n                                  //   {\n                                  //     JOBGUID: serviceResG.rows.item(i)[\"JOBGUID\"],\n                                  //     OUTCOME: serviceResG.rows.item(i)[\"OUTCOME\"],\n                                  //     PARTS: serviceResG.rows.item(i)[\"PARTS\"],\n                                  //     LABOUR: serviceResG.rows.item(i)[\"LABOUR\"],\n                                  //     JOBNOTE: serviceResG.rows.item(i)[\"JOBNOTE\"],\n                                  //     FILEBASE: serviceResG.rows.item(i)[\"FILEBASE\"],\n                                  //     FILENAME: serviceResG.rows.item(i)[\"FILENAME\"],\n                                  //     FORACTION: \"Service\",\n                                  //     OnDt: serviceResG.rows.item(i)[\"OnDt\"],\n                                  //     Latitude: completeClaimRes.rows.item(i)[\"Latitude\"],\n                                  //     Longitude: completeClaimRes.rows.item(i)[\"Longitude\"],\n                                  //     ComboClaimJobId: completeClaimRes.rows.item(i)[\"ComboClaimJobId\"],\n                                  //     ComboIsCompleted: \"true\",\n                                  //     CantCompleteReason:serviceResG.rows.item(i)[\"CantCompleteReason\"]\n                                  // }                      \n                                  // ; \n                                  // let Desc = JSON.stringify(Descp);\n                                  // this.auth.insertIntoErrorLog(errorMsg, serviceResG.rows.item(i)['JOBGUID'],  actionName, Desc);\n                                  // End of ErrorLog\n                                  this.auth.showToast(JSON.stringify(serviceSyncError.message))\n                                  array.push(serviceSyncError[\"header\"]);\n                                  if (\n                                    array.length == completeClaimRes.rows.length\n                                  ) {\n                                    resolve(\"enggpics complete\");\n                                  }\n                                }\n                              );\n\n                            //\n                          },\n                          (claimSyncError) => {\n                            // this.auth.insertIntoSyncLog(completeClaimRes.rows.item(i)['JOBGUID'],  \"Calim Failed\", claimSyncError[\"Msg\"]);\n                            // Start ErrorLog\n                            // let errorMsg = JSON.stringify(claimSyncError);\n                            // let actionName =\"Service_AllEngineerActionsNew\";\n                            // let Descp = \n                            //   {\n                            //     JOBGUID: completeClaimRes.rows.item(i)[\"JOBGUID\"],\n                            //     OUTCOME: completeClaimRes.rows.item(i)[\"OUTCOME\"],\n                            //     PARTS: completeClaimRes.rows.item(i)[\"PARTS\"],\n                            //     LABOUR: completeClaimRes.rows.item(i)[\"LABOUR\"],\n                            //     JOBNOTE: completeClaimRes.rows.item(i)[\"JOBNOTE\"],\n                            //     FILEBASE: completeClaimRes.rows.item(i)[\"FILEBASE\"],\n                            //     FILENAME: completeClaimRes.rows.item(i)[\"FILENAME\"],\n                            //     FORACTION: \"Claim\",\n                            //     OnDt: completeClaimRes.rows.item(i)[\"OnDt\"],\n                            //     Latitude: completeClaimRes.rows.item(i)[\"Latitude\"],\n                            //     Longitude: completeClaimRes.rows.item(i)[\"Longitude\"],\n                            //     ComboClaimJobId: completeClaimRes.rows.item(i)[\"ComboClaimJobId\"],\n                            //     ComboIsCompleted: \"true\",\n                            //     CantCompleteReason:serviceResG.rows.item(i)[\"CantCompleteReason\"]\n                            // }                      \n                            // ; \n                            // let Desc = JSON.stringify(Descp);\n                            // this.auth.insertIntoErrorLog(errorMsg, completeClaimRes.rows.item(i)['JOBGUID'],  actionName, Desc);\n                            // End of ErrorLog\n                            this.auth.showToast(JSON.stringify(claimSyncError.message))\n                            array.push(claimSyncError[\"header\"]);\n                            if (array.length == completeClaimRes.rows.length) {\n                              resolve(\"enggpics complete\");\n                            }\n                          }\n                        );\n                    } else {\n                      console.log(\"combo service of combo job not completed\");  \n                      console.log(\"combo Sync Only Claim not service\");  \n                      // service of combo job not completed\n                      // Sync Only Claim not service\n                      let params = new HttpParams()\n                        .set(\n                          \"JOBGUID\",\n                          completeClaimRes.rows.item(i)[\"JOBGUID\"]\n                        )\n                        .set(\n                          \"OUTCOME\",\n                          completeClaimRes.rows.item(i)[\"OUTCOME\"]\n                        )\n                        .set(\"PARTS\", completeClaimRes.rows.item(i)[\"PARTS\"])\n                        .set(\"LABOUR\", completeClaimRes.rows.item(i)[\"LABOUR\"])\n                        .set(\n                          \"JOBNOTE\",\n                          completeClaimRes.rows.item(i)[\"JOBNOTE\"]\n                        )\n                        .set(\n                          \"FILEBASE\",\n                          completeClaimRes.rows.item(i)[\"FILEBASE\"]\n                        )\n                        .set(\n                          \"FILENAME\",\n                          completeClaimRes.rows.item(i)[\"FILENAME\"]\n                        )\n                        .set(\"FORACTION\", \"Claim\")\n                        .set(\"OnDt\", completeClaimRes.rows.item(i)[\"OnDt\"])\n                        .set(\n                          \"Latitude\",\n                          completeClaimRes.rows.item(i)[\"Latitude\"]\n                        )\n                        .set(\n                          \"Longitude\",\n                          completeClaimRes.rows.item(i)[\"Longitude\"]\n                        )\n                        .set(\n                          \"ComboClaimJobId\",\n                          completeClaimRes.rows.item(i)[\"ComboClaimJobId\"]\n                        )\n                        .set(\"ComboIsCompleted\", \"false\")\n                        .set(\n                          \"CantCompleteReason\",\n                          serviceResG.rows.item(i)[\"CantCompleteReason\"]\n                        );\n                      this.auth\n                        .httpSend(\n                          \"Service_AllEngineerActionsNew\",\n                          params,\n                          \"post\"\n                        )\n                        .subscribe(\n                          (claimSyncResponse) => {\n                            // this.auth.insertIntoSyncLog(serviceResG.rows.item(i)['JOBGUID'],  \"CC Suceess\", claimSyncResponse[\"Msg\"]);\n                            this.auth.database.executeSql(\n                              \"delete from completeclaim where JOBGUID=?\",\n                              [completeClaimRes.rows.item(i)[\"JOBGUID\"]]\n                            );\n                            array.push(completeClaimRes[\"Msg\"]);\n                            if (array.length == completeClaimRes.rows.length) {\n                              resolve(\"Claim complete but Service Pending\");\n                            }\n                          },\n                          (claimSyncError) => {\n                            // Start ErrorLog\n                            // this.auth.insertIntoSyncLog(serviceResG.rows.item(i)['JOBGUID'],  \"CC Failed\", claimSyncError[\"Msg\"]);\n                            // let errorMsg = JSON.stringify(claimSyncError);\n                            // let actionName =\"Service_AllEngineerActionsNew\";\n                            // let Descp = \n                            //   {\n                            //     JOBGUID: completeClaimRes.rows.item(i)[\"JOBGUID\"],\n                            //     OUTCOME: completeClaimRes.rows.item(i)[\"OUTCOME\"],\n                            //     PARTS: completeClaimRes.rows.item(i)[\"PARTS\"],\n                            //     LABOUR: completeClaimRes.rows.item(i)[\"LABOUR\"],\n                            //     JOBNOTE: completeClaimRes.rows.item(i)[\"JOBNOTE\"],\n                            //     FILEBASE: completeClaimRes.rows.item(i)[\"FILEBASE\"],\n                            //     FILENAME: completeClaimRes.rows.item(i)[\"FILENAME\"],\n                            //     FORACTION: \"Claim\",\n                            //     OnDt: completeClaimRes.rows.item(i)[\"OnDt\"],\n                            //     Latitude: completeClaimRes.rows.item(i)[\"Latitude\"],\n                            //     Longitude: completeClaimRes.rows.item(i)[\"Longitude\"],\n                            //     ComboClaimJobId: completeClaimRes.rows.item(i)[\"ComboClaimJobId\"],\n                            //     ComboIsCompleted: \"true\",\n                            //     CantCompleteReason:serviceResG.rows.item(i)[\"CantCompleteReason\"]\n                            // }                      \n                            // ; \n                            // let Desc = JSON.stringify(Descp);\n                            // this.auth.insertIntoErrorLog(errorMsg, completeClaimRes.rows.item(i)['JOBGUID'],  actionName, Desc);\n                            // End of ErrorLog\n                            this.auth.showToast(JSON.stringify(claimSyncError.message))\n                            array.push(claimSyncError[\"header\"]);\n                            if (array.length == completeClaimRes.rows.length) {\n                              resolve(\"enggpics complete\");\n                            }\n                          }\n                        );\n                    }\n                  })\n                  .catch();\n              } else {\n                // if job is not combo then sync claim\n\n                let params = new HttpParams()\n                  .set(\"JOBGUID\", completeClaimRes.rows.item(i)[\"JOBGUID\"])\n                  .set(\"OUTCOME\", completeClaimRes.rows.item(i)[\"OUTCOME\"])\n                  .set(\"PARTS\", completeClaimRes.rows.item(i)[\"PARTS\"])\n                  .set(\"LABOUR\", completeClaimRes.rows.item(i)[\"LABOUR\"])\n                  .set(\"JOBNOTE\", completeClaimRes.rows.item(i)[\"JOBNOTE\"])\n                  .set(\"FILEBASE\", completeClaimRes.rows.item(i)[\"FILEBASE\"])\n                  .set(\"FILENAME\", completeClaimRes.rows.item(i)[\"FILENAME\"])\n                  .set(\"FORACTION\", \"Claim\")\n                  .set(\"OnDt\", completeClaimRes.rows.item(i)[\"OnDt\"])\n                  .set(\"Latitude\", completeClaimRes.rows.item(i)[\"Latitude\"])\n                  .set(\"Longitude\", completeClaimRes.rows.item(i)[\"Longitude\"])\n                  .set(\"ComboClaimJobId\", \"\")\n                  .set(\"ComboIsCompleted\", \"\")\n                  .set(\"CantCompleteReason\", \"\");\n                this.auth\n                  .httpSend(\"Service_AllEngineerActionsNew\", params, \"post\")\n                  .subscribe(\n                    (msg) => {\n                      // this.auth.insertIntoSyncLog(completeClaimRes.rows.item(i)['JOBGUID'],  \"Calim Success\", msg[\"Msg\"]);\n                      this.auth.database.executeSql(\n                        \"delete from completeclaim where JOBGUID=?\",\n                        [completeClaimRes.rows.item(i)[\"JOBGUID\"]]\n                      );\n                      array.push(msg[\"Msg\"]);\n                      if (array.length == completeClaimRes.rows.length) {\n                        resolve(\"claim complete\");\n                      }\n                      //\n                    },\n                    (claimSyncError) => {\n                      // this.auth.insertIntoSyncLog(completeClaimRes.rows.item(i)['JOBGUID'],  \"Claim Failed\", claimSyncError[\"Msg\"]);\n                      // Start ErrorLog\n                      // let errorMsg = JSON.stringify(claimSyncError);\n                      // let actionName =\"Service_AllEngineerActionsNew\";\n                      // let Descp = \n                      //   {\n                      //     JOBGUID: completeClaimRes.rows.item(i)[\"JOBGUID\"],\n                      //     OUTCOME: completeClaimRes.rows.item(i)[\"OUTCOME\"],\n                      //     PARTS: completeClaimRes.rows.item(i)[\"PARTS\"],\n                      //     LABOUR: completeClaimRes.rows.item(i)[\"LABOUR\"],\n                      //     JOBNOTE: completeClaimRes.rows.item(i)[\"JOBNOTE\"],\n                      //     FILEBASE: completeClaimRes.rows.item(i)[\"FILEBASE\"],\n                      //     FILENAME: completeClaimRes.rows.item(i)[\"FILENAME\"],\n                      //     FORACTION: \"Claim\",\n                      //     OnDt: completeClaimRes.rows.item(i)[\"OnDt\"],\n                      //     Latitude: completeClaimRes.rows.item(i)[\"Latitude\"],\n                      //     Longitude: completeClaimRes.rows.item(i)[\"Longitude\"],\n                      //     ComboClaimJobId: \"\",\n                      //     ComboIsCompleted: \"\",\n                      //     CantCompleteReason:\"\"\n                      // }                      \n                      // ; \n                      // let Desc = JSON.stringify(Descp);\n                      // this.auth.insertIntoErrorLog(errorMsg, completeClaimRes.rows.item(i)['JOBGUID'],  actionName, Desc);\n                      // End of ErrorLog\n                      this.auth.showToast(JSON.stringify(claimSyncError.message))\n                      array.push(claimSyncError[\"header\"]);\n                      if (array.length == completeClaimRes.rows.length) {\n                        resolve(\"enggpics complete\");\n                      }\n                    }\n                  );\n              }\n            }\n            //For Loop End\n          } else {\n            resolve(\"success No Data in Claim\");\n          }\n        })\n        .catch((completeClaimError) => {\n          reject(\" error complete claim\" + JSON.stringify(completeClaimError));\n        });\n    });\n  }\n\n  syncCompleteService1() {\n    this.auth.setLoadingText(\"Syncing Completed Services. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"46.6\");\n    let array = [];\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"select * from completeservice where HaveData=?\", [\"yes\"])\n        .then((completeServiceRes) => {\n          if (completeServiceRes.rows.length > 0) {\n            for (let i = 0; i < completeServiceRes.rows.length; i++) {\n              console.log(\"Danish inside sync service\");\n              let params = new HttpParams()                \n                .set(\"JOBGUID\", completeServiceRes.rows.item(i)[\"JOBGUID\"])\n                .set(\"OUTCOME\", completeServiceRes.rows.item(i)[\"OUTCOME\"])\n                .set(\"PARTS\", completeServiceRes.rows.item(i)[\"PARTS\"])\n                .set(\"LABOUR\", completeServiceRes.rows.item(i)[\"LABOUR\"])\n                .set(\"JOBNOTE\", completeServiceRes.rows.item(i)[\"JOBNOTE\"])\n                .set(\"FILEBASE\", completeServiceRes.rows.item(i)[\"FILEBASE\"])\n                .set(\"FILENAME\", completeServiceRes.rows.item(i)[\"FILENAME\"])\n                .set(\"FORACTION\", \"Service\")\n                .set(\"OnDt\", completeServiceRes.rows.item(i)[\"OnDt\"])\n                .set(\"Latitude\", completeServiceRes.rows.item(i)[\"Latitude\"])\n                .set(\"Longitude\", completeServiceRes.rows.item(i)[\"Longitude\"])\n                .set(\"ComboClaimJobId\", \"\")\n                .set(\"ComboIsCompleted\", \"\")\n                .set(\"CantCompleteReason\", \"\");\n              this.auth\n                .httpSend(\"Service_AllEngineerActionsNew\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(completeServiceRes.rows.item(i)['JOBGUID'],  \"Service Success\", msg[\"Msg\"]);\n                    this.auth.database.executeSql(\n                      \"delete from completeservice where JOBGUID=?\",\n                      [completeServiceRes.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    array.push(msg[\"Msg\"]);\n                    if (array.length == completeServiceRes.rows.length) {\n                      resolve(\"complete SERVICE complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(completeServiceRes.rows.item(i)['JOBGUID'],  \"Serive Failed\", err[\"Msg\"]);\n                      // Start ErrorLog\n                      // let errorMsg = JSON.stringify(err);\n                      // let actionName =\"Service_AllEngineerActionsNew\";\n                      // let Descp = \n                      //   {\n                      //     JOBGUID: completeServiceRes.rows.item(i)[\"JOBGUID\"],\n                      //     OUTCOME: completeServiceRes.rows.item(i)[\"OUTCOME\"],\n                      //     PARTS: completeServiceRes.rows.item(i)[\"PARTS\"],\n                      //     LABOUR: completeServiceRes.rows.item(i)[\"LABOUR\"],\n                      //     JOBNOTE: completeServiceRes.rows.item(i)[\"JOBNOTE\"],\n                      //     FILEBASE: completeServiceRes.rows.item(i)[\"FILEBASE\"],\n                      //     FILENAME: completeServiceRes.rows.item(i)[\"FILENAME\"],\n                      //     FORACTION: \"Service\",\n                      //     OnDt: completeServiceRes.rows.item(i)[\"OnDt\"],\n                      //     Latitude: completeServiceRes.rows.item(i)[\"Latitude\"],\n                      //     Longitude: completeServiceRes.rows.item(i)[\"Longitude\"],\n                      //     ComboClaimJobId: \"\",\n                      //     ComboIsCompleted: \"\",\n                      //     CantCompleteReason:\"\"\n                      // }                      \n                      // ; \n                      // let Desc = JSON.stringify(Descp);\n                      // this.auth.insertIntoErrorLog(errorMsg, completeServiceRes.rows.item(i)['JOBGUID'],  actionName, Desc);\n                      // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == completeServiceRes.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                );\n            } //for loop\n          } else {\n            resolve(\"complete SERVICE complete\");\n          }\n        })\n        .catch((completeServiceError) => {});\n    });\n  }\n\n  syncboilerInstallation() {\n    this.auth.setLoadingText(\"Syncing Boiler Installation Report. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"53\");\n    let array = [];\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"select * from boilerinstallation where HaveData=?\", [\n          \"yes\",\n        ])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"BLocation\", res.rows.item(i)[\"BLocation\"])\n                .set(\"BLocation_Desc\", res.rows.item(i)[\"BLocation_Desc\"])\n                .set(\"BFlue\", res.rows.item(i)[\"BFlue\"])\n                .set(\"FlueExtension\", res.rows.item(i)[\"FlueExtension\"])\n                .set(\"StandOffKit\", res.rows.item(i)[\"StandOffKit\"])\n                .set(\"D45Elbow\", res.rows.item(i)[\"D45Elbow\"])\n                .set(\"D90Elbow\", res.rows.item(i)[\"D90Elbow\"])\n                .set(\"GasRun\", res.rows.item(i)[\"GasRun\"])\n                .set(\"CGasRun_Desc\", res.rows.item(i)[\"CGasRun_Desc\"])\n                .set(\"CGasRun\", res.rows.item(i)[\"CGasRun\"])\n                .set(\"GasRun_Desc\", res.rows.item(i)[\"GasRun_Desc\"])\n                .set(\"ActionDt\", res.rows.item(i)[\"ActionDt\"])\n                .set(\"Latitude\", res.rows.item(i)[\"Latitude\"])\n                .set(\"Longitude\", res.rows.item(i)[\"Longitude\"]);\n              this.auth\n                .httpSend(\"Service_BInsReport\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"BoilerInsRep Success\", msg[\"Msg\"]);\n                    this.auth.database.executeSql(\n                      \"update boilerinstallationpics set SSID = ? where JOBGUID=?\",\n                      [msg[\"Msg\"], res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    this.auth.database.executeSql(\n                      \"update boilerinstallationsign set SSID = ? where JOBGUID=?\",\n                      [msg[\"Msg\"], res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    array.push(msg[\"Msg\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"boilerinstallation complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"BoilerInsRep Failed\", err[\"Msg\"]);\n                      // Start ErrorLog\n                    //   let errorMsg = JSON.stringify(err);\n                    //   let actionName =\"Service_BInsReport\";\n                    //   let Descp = \n                    //     {\n                    //       JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //       BLocation: res.rows.item(i)[\"BLocation\"],\n                    //       BLocation_Desc: res.rows.item(i)[\"BLocation_Desc\"],\n                    //       BFlue: res.rows.item(i)[\"BFlue\"],\n                    //       FlueExtension: res.rows.item(i)[\"FlueExtension\"],\n                    //       StandOffKit: res.rows.item(i)[\"StandOffKit\"],\n                    //       D45Elbow: res.rows.item(i)[\"D45Elbow\"],\n                    //       D90Elbow: res.rows.item(i)[\"D90Elbow\"],\n                    //       GasRun: res.rows.item(i)[\"GasRun\"],\n                    //       CGasRun_Desc: res.rows.item(i)[\"CGasRun_Desc\"],\n                    //       CGasRun: res.rows.item(i)[\"CGasRun\"],\n                    //       GasRun_Desc: res.rows.item(i)[\"GasRun_Desc\"],\n                    //       ActionDt: res.rows.item(i)[\"ActionDt\"],\n                    //       Latitude: res.rows.item(i)[\"Latitude\"],\n                    //       Longitude: res.rows.item(i)[\"Longitude\"],\n                    //   }                      \n                    //   ; \n                    //   let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                      // End of ErrorLog\n                      this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                );\n            }\n          } else {\n            resolve(\"boilerinstallation complete\");\n          }\n        })\n        .catch((e) => {});\n    });\n  }\n\n  syncBoilerInstallationPics() {\n    this.auth.setLoadingText(\"Syncing Boiler Installation Images. It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"59\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from boilerinstallationpics where HaveData=?\", [\n          \"yes\",\n        ])\n        .then((res) => {\n          if (res.rows.length) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"SSID\", res.rows.item(i)[\"SSID\"])\n                .set(\"BImage\", res.rows.item(i)[\"BImage\"])\n                .set(\"BPWImage\", res.rows.item(i)[\"BPWImage\"])\n                .set(\"CTImage\", res.rows.item(i)[\"CTImage\"])\n                .set(\"FSImage\", res.rows.item(i)[\"FSImage\"])\n                .set(\"IFImage\", res.rows.item(i)[\"IFImage\"])\n                .set(\"FILImage\",res.rows.item(i)[\"FILImage\"])\n                .set(\"EFTImage\", res.rows.item(i)[\"EFTImage\"])\n                .set(\"ACCImage\", res.rows.item(i)[\"ACCImage\"])\n                .set(\"TImage\", res.rows.item(i)[\"TImage\"])\n                .set(\"BMCImage\", res.rows.item(i)[\"BMCImage\"])\n                .set(\"A1Image\", res.rows.item(i)[\"A1Image\"])\n                .set(\"A2Image\", res.rows.item(i)[\"A2Image\"])\n                .set(\"A3Image\", res.rows.item(i)[\"A3Image\"])\n                .set(\"A4Image\", res.rows.item(i)[\"A4Image\"])\n                .set(\"A5Image\", res.rows.item(i)[\"A5Image\"]);\n              this.auth.httpSend(\"Service_BInsImags\", params, \"post\").subscribe(\n                (msg) => {\n                  // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"BoilerInsPic Success\", msg[\"Msg\"]);\n                  array.push(msg[\"Msg\"]);\n                  if (array.length == res.rows.length) {\n                    resolve(\"boilerinstallationpics complete\");\n                  }\n                },\n                (err) => {\n                  // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"BoilerInsPic Failed\", err[\"Msg\"]);\n                  // Start ErrorLog\n                  // let errorMsg = JSON.stringify(err);\n                  // let actionName =\"Service_BInsImags\";\n                  // let Descp = \n                  //   {\n                  //     SSID: res.rows.item(i)[\"SSID\"],\n                  //     BImage: res.rows.item(i)[\"BImage\"],\n                  //     BPWImage: res.rows.item(i)[\"BPWImage\"],\n                  //     CTImage: res.rows.item(i)[\"CTImage\"],\n                  //     FSImage: res.rows.item(i)[\"FSImage\"],\n                  //     IFImage: res.rows.item(i)[\"IFImage\"],\n                  //     FILImage:res.rows.item(i)[\"FILImage\"],\n                  //     EFTImage: res.rows.item(i)[\"EFTImage\"],\n                  //     ACCImage: res.rows.item(i)[\"ACCImage\"],\n                  //     TImage: res.rows.item(i)[\"TImage\"],\n                  //     BMCImage: res.rows.item(i)[\"BMCImage\"],\n                  //     A1Image: res.rows.item(i)[\"A1Image\"],\n                  //     A2Image: res.rows.item(i)[\"A2Image\"],\n                  //     A3Image: res.rows.item(i)[\"A3Image\"],\n                  //     A4Image: res.rows.item(i)[\"A4Image\"],\n                  //     A5Image: res.rows.item(i)[\"A5Image\"]\n                  // }                      \n                  // ; \n                  // let Desc = JSON.stringify(Descp);\n                  //   this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                  // End of ErrorLog\n                  this.auth.showToast(JSON.stringify(err.message))\n                  array.push(err[\"header\"]);\n                  if (array.length == res.rows.length) {\n                    resolve(\"enggpics complete\");\n                  }\n                }\n              );\n            } // end of for loop\n          } else {\n            resolve(\"boilerinstallationpics complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # sync Boiler Installation Pics failed\");\n        });\n    });\n  }\n\n  syncBoilerInstallationSign() {\n    this.auth.setLoadingText(\"Syncing Boiler Installation Signatures It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"66.3\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select * from boilerinstallationsign where HaveData=?\", [\n          \"yes\",\n        ])\n        .then((res) => {\n          if (res.rows.length) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"SSID\", res.rows.item(i)[\"SSID\"])\n                .set(\"BInsComplete\", res.rows.item(i)[\"BInsComplete\"])\n                .set(\"BInsComplete_Reason\",res.rows.item(i)[\"BInsComplete_Reason\"])\n                .set(\"BInsDefects\", res.rows.item(i)[\"BInsDefects\"])\n                .set(\"BInsDefects_Reason\",res.rows.item(i)[\"BInsDefects_Reason\"])\n                .set(\"BInsDamage\", res.rows.item(i)[\"BInsDamage\"])\n                .set(\"BInsDamage_Reason\", res.rows.item(i)[\"BInsDamage_Reason\"])\n                .set(\"BInsAddNotes\", res.rows.item(i)[\"BInsAddNotes\"])\n                .set(\"InstallerSig\", res.rows.item(i)[\"InstallerSig\"])               \n                .set(\"CustomerSig\", res.rows.item(i)[\"CustomerSig\"])               \n                .set(\"InstallerName\", res.rows.item(i)[\"InstallerName\"])\n                .set(\"CustomerName\", res.rows.item(i)[\"CustomerName\"]);\n              this.auth\n                .httpSend(\"Service_BInsSignature\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"BoilerInsSig Success\", msg[\"Msg\"]);\n                    this.auth.database.executeSql(\n                      \"delete from boilerinstallation where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    this.auth.database.executeSql(\n                      \"delete from boilerinstallationpics where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    this.auth.database.executeSql(\n                      \"delete from boilerinstallationsign where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    array.push(msg[\"Msg\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"boilerinstallationsign complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"BoilerInsSig Success\", err[\"Msg\"]);\n                    // Start ErrorLog\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_BInsSignature\";\n                    // let Descp = \n                    //   {\n                    //     SSID: res.rows.item(i)[\"SSID\"],\n                    //     BInsComplete: res.rows.item(i)[\"BInsComplete\"],\n                    //     BInsComplete_Reason:res.rows.item(i)[\"BInsComplete_Reason\"],\n                    //     BInsDefects: res.rows.item(i)[\"BInsDefects\"],\n                    //     BInsDefects_Reason:res.rows.item(i)[\"BInsDefects_Reason\"],\n                    //     BInsDamage: res.rows.item(i)[\"BInsDamage\"],\n                    //     BInsDamage_Reason: res.rows.item(i)[\"BInsDamage_Reason\"],\n                    //     BInsAddNotes: res.rows.item(i)[\"BInsAddNotes\"],\n                    //     InstallerSig: res.rows.item(i)[\"InstallerSig\"],               \n                    //     CustomerSig: res.rows.item(i)[\"CustomerSig\"],               \n                    //     InstallerName: res.rows.item(i)[\"InstallerName\"],\n                    //     CustomerName: res.rows.item(i)[\"CustomerName\"]\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    //   this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  }\n                ); //subscribe end\n            } // end of for loop\n          } else {\n            resolve(\"boilerinstallationsign complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\"# # on boilerinstallationsign failed\");\n        });\n    });\n  }\n\n  // donloadNative(urlpdf: string, JOBGUID: string) {\n  //   return new Promise((resolve, reject) => {\n  //     this.http\n  //       .downloadFile(\n  //         urlpdf, //https://file-examples-com.github.io/uploads/2017/10/file-sample_150kB.pdf\n  //         { id: \"12\", message: \"test\" },\n  //         { Authorization: \"OAuth2: token\" },\n  //         this.file.externalRootDirectory +\n  //           \"download/\" +\n  //           JOBGUID +\n  //           \"certificate.pdf\"\n  //       )\n  //       .then((response) => {\n  //         // prints 200\n\n  //         resolve(JSON.stringify(response.status));\n  //         this.auth.database\n  //           .executeSql(\n  //             \"update jobsstatus set CertificateLocalURI=? where JOBGUID=?\",\n  //             [\n  //               this.file.externalRootDirectory +\n  //                 \"download/\" +\n  //                 JOBGUID +\n  //                 \"certificate.pdf\",\n  //               JOBGUID,\n  //             ]\n  //           )\n  //           .then((res) => {})\n  //           .catch((e) => {});\n  //       })\n  //       .catch((response) => {\n  //         reject(JSON.stringify(response.error));\n  //       });\n  //   });\n  // }\n\n  syncEnggPic() {\n    this.auth.setLoadingText(\"Syncing Engineers Pictures  It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"80\");\n    return new Promise((resolve, reject) => {\n      let array = [];\n      this.auth.database\n        .executeSql(\"select *  from enggpics where HaveData=?\", [\"yes\"])\n        .then((resp) => {\n          if (resp.rows.length > 0) {\n            for (let i = 0; i < resp.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", resp.rows.item(i)[\"JOBGUID\"])\n                .set(\"JOBNOTE\", resp.rows.item(i)[\"JOBNOTE\"])\n                .set(\"OUTCOME\", resp.rows.item(i)[\"OUTCOME\"])\n                .set(\"PARTS\", resp.rows.item(i)[\"PARTS\"])\n                .set(\"LABOUR\", resp.rows.item(i)[\"LABOUR\"])\n                .set(\"FILEBASE\", resp.rows.item(i)[\"pic\"])\n                .set(\"FILENAME\", \"Take Image\")\n                .set(\"FORACTION\", \"Take Image\")\n                .set(\"OnDt\", resp.rows.item(i)[\"onDt\"])\n                .set(\"Latitude\", resp.rows.item(i)[\"latitude\"])\n                .set(\"Longitude\", resp.rows.item(i)[\"longitude\"])\n                .set(\"ComboClaimJobId\", \"\")\n                .set(\"ComboIsCompleted\", \"\")\n                .set(\"CantCompleteReason\", \"\");\n              this.auth\n                .httpSend(\"Service_AllEngineerActionsNew\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(resp.rows.item(i)['JOBGUID'],  \"EngSig Success\", msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    if (array.length == resp.rows.length) {\n                      resolve(\"enggpics complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(resp.rows.item(i)['JOBGUID'],  \"EngSig Failed\", err[\"Msg\"]);\n                    // Start ErrorLog\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_AllEngineerActionsNew\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: resp.rows.item(i)[\"JOBGUID\"],\n                    //     OUTCOME: resp.rows.item(i)[\"OUTCOME\"],\n                    //     PARTS: resp.rows.item(i)[\"PARTS\"],\n                    //     LABOUR: resp.rows.item(i)[\"LABOUR\"],\n                    //     JOBNOTE: resp.rows.item(i)[\"JOBNOTE\"],\n                    //     FILEBASE: resp.rows.item(i)[\"FILEBASE\"],\n                    //     FILENAME: \"Take Image\",\n                    //     FORACTION: \"Take Image\",\n                    //     OnDt: resp.rows.item(i)[\"OnDt\"],\n                    //     Latitude: resp.rows.item(i)[\"Latitude\"],\n                    //     Longitude: resp.rows.item(i)[\"Longitude\"],\n                    //     ComboClaimJobId: \"\",\n                    //     ComboIsCompleted: \"\",\n                    //     CantCompleteReason:\"\"\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, resp.rows.item(i)[\"JOBGUID\"],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == resp.rows.length) {\n                      resolve(\"enggpics incomplete\" + JSON.stringify(err));\n                    }\n                  }\n                );\n            } // end of for loop\n          } else {\n            resolve(\"enggpics complete\");\n          }\n        })\n        .catch((e) => {\n          reject(JSON.stringify(e));\n        });\n    });\n  }\n\n  // sync site survey\n\n  syncSiteSurvey() {\n    this.auth.setLoadingText(\"Syncing Site Survey Report It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"85.5\");\n    let array = [];\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"select * from sitesurvey where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"JOBGUID\", res.rows.item(i)[\"JOBGUID\"])\n                .set(\"NB\", res.rows.item(i)[\"siteSurveyboiler\"])\n                .set(\"BReq\", res.rows.item(i)[\"siteSurveyboilerdescription\"])\n                .set(\"BLocation\", res.rows.item(i)[\"locationboiler\"])\n                .set(\"NBLocation\", res.rows.item(i)[\"NewBoilerLocationSelect\"])\n                .set(\"BLocation_Desc\",res.rows.item(i)[\"NewBoilerLocationDesc\"])\n                .set(\"BFlue\", res.rows.item(i)[\"FlueSelect\"])\n                .set(\"FlueExtension\", res.rows.item(i)[\"FlueextensionsSelect\"])\n                .set(\"StandOffKit\", res.rows.item(i)[\"StandOffKitSelect\"])\n                .set(\"D45Elbow\",res.rows.item(i)[\"FourtyfivedegreeelbowSelect\"])\n                .set(\"D90Elbow\", res.rows.item(i)[\"NinetydegreeelbowSelect\"])\n                .set(\"StandingInletPressure\",res.rows.item(i)[\"StandingInletPressue\"])\n                .set(\"SSReason\", res.rows.item(i)[\"SiteSurveyReason\"])\n                .set(\"SPrdctType\", res.rows.item(i)[\"SiteSurveyProductType\"])\n                .set(\"GasRun\", res.rows.item(i)[\"GasRunSelect\"])\n                .set(\"GasRun_Desc\", res.rows.item(i)[\"GasRunNewDetails\"])\n                .set(\"CGasRun\", res.rows.item(i)[\"CondensateGasSelect\"])\n                .set(\"CGasRun_Desc\",res.rows.item(i)[\"CondensateGasNewDetails\"])\n                .set(\"WorkingInletPressure\",res.rows.item(i)[\"WorkingInletPressue\"])\n                .set(\"ActionDt\", this.auth.getdateformatV2())\n                .set(\"Latitude\", this.auth.lat)\n                .set(\"Longitude\", this.auth.long)\n                .set(\"TRVs\", res.rows.item(i)[\"trvs\"]);\n\n              this.auth\n                .httpSend(\"Service_BInsReport_SS\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveyRep Success\", msg[\"Msg\"]);\n                    console.log(\"Danish SS Report\"+msg[\"Msg\"]);\n                    this.auth.database.executeSql(\n                      \"update sitesurveypics set SSID = ? where JOBGUID=?\",\n                      [msg[\"Msg\"], res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    this.auth.database.executeSql(\n                      \"update sitesurveysign set SSID = ? where JOBGUID=?\",\n                      [msg[\"Msg\"], res.rows.item(i)[\"JOBGUID\"]]\n                    );\n\n                    array.push(msg[\"Msg\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"sitesurvey complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveyRep Failed\", err[\"Msg\"]);\n                    // Start ErrorLog\n                    // console.log(\"Danish BInsReport error \"+JSON.stringify(err));\n                    \n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_BInsReport_SS\";\n                    // let Descp = \n                    //   {\n                    //     JOBGUID: res.rows.item(i)[\"JOBGUID\"],\n                    //     NB: res.rows.item(i)[\"siteSurveyboiler\"],\n                    //     BReq: res.rows.item(i)[\"siteSurveyboilerdescription\"],\n                    //     BLocation: res.rows.item(i)[\"locationboiler\"],\n                    //     NBLocation: res.rows.item(i)[\"NewBoilerLocationSelect\"],\n                    //     BLocation_Desc:res.rows.item(i)[\"NewBoilerLocationDesc\"],\n                    //     BFlue: res.rows.item(i)[\"FlueSelect\"],\n                    //     FlueExtension: res.rows.item(i)[\"FlueextensionsSelect\"],\n                    //     StandOffKit: res.rows.item(i)[\"StandOffKitSelect\"],\n                    //     D45Elbow:res.rows.item(i)[\"FourtyfivedegreeelbowSelect\"],\n                    //     D90Elbow: res.rows.item(i)[\"NinetydegreeelbowSelect\"],\n                    //     StandingInletPressure:res.rows.item(i)[\"StandingInletPressue\"],\n                    //     SSReason: res.rows.item(i)[\"SiteSurveyReason\"],\n                    //     SPrdctType: res.rows.item(i)[\"SiteSurveyProductType\"],\n                    //     GasRun: res.rows.item(i)[\"GasRunSelect\"],\n                    //     GasRun_Desc: res.rows.item(i)[\"GasRunNewDetails\"],\n                    //     CGasRun: res.rows.item(i)[\"CondensateGasSelect\"],\n                    //     CGasRun_Desc:res.rows.item(i)[\"CondensateGasNewDetails\"],\n                    //     WorkingInletPressure:res.rows.item(i)[\"WorkingInletPressue\"],                \n                    //     ActionDt: this.auth.getdateformatV2(),\n                    //     Latitude: this.auth.locationCoords.coords.latitude,\n                    //     Longitude: this.auth.locationCoords.coords.longitude,\n                    //     TRVs : res.rows.item(i)[\"trvs\"]\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics incomplete\");\n                    }\n                  }\n                );\n            }\n          } else {\n            resolve(\"sitesuvery complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\" sync survey error\");\n        });\n    });\n  }\n\n  syncSurveyPics() {\n    this.auth.setLoadingText(\"Syncing Site Survey Images It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"92\");\n    let array = [];\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"select * from sitesurveypics where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"SSID\", res.rows.item(i)[\"SSID\"])\n                .set(\"BImage\", res.rows.item(i)[\"BoilerImage\"])\n                .set(\"BPWImage\", res.rows.item(i)[\"Boilerpipework\"])\n                .set(\"CTImage\", res.rows.item(i)[\"CondensateterminationImage\"])\n                .set(\"FSImage\", res.rows.item(i)[\"FusespurImage\"])\n                .set(\"IFImage\", res.rows.item(i)[\"InternalflueImage\"])\n                .set(\"FILImage\", res.rows.item(i)[\"FlueInLoftImage\"])\n                .set(\"EFTImage\", res.rows.item(i)[\"ExternalflueterminalImage\"])\n                .set(\"ACCImage\",res.rows.item(i)[\"AiringCupboardCylinderImage\"])\n                .set(\"TImage\", '')\n                .set('BMCImage', '')\n                .set(\"STLImage\", res.rows.item(i)[\"STLImage\"])\n                .set(\"DOLImage\", res.rows.item(i)[\"DrainOffLocationFlagImage\"])\n                .set(\"GMImage\", res.rows.item(i)[\"GasMeterImage\"])\n                .set(\"A1Image\", res.rows.item(i)[\"AdditionalOne\"])\n                .set(\"A2Image\", res.rows.item(i)[\"AdditionalTwo\"])\n                .set(\"A3Image\", res.rows.item(i)[\"AdditionalThree\"])\n                .set(\"A4Image\", res.rows.item(i)[\"AdditionalFour\"]);\n\n              this.auth\n                .httpSend(\"Service_BInsImags_SS\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveyPic Success\", msg[\"Msg\"]);\n                    console.log(\"Danish pic succ\"+msg[\"Msg\"]);\n                    array.push(msg[\"Msg\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"sitesurveypic complete\");\n                    }\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveyPic Failed\", err[\"Msg\"]);\n                    // Start ErrorLog\n                    // console.log(\"Danish BInsImags error \"+JSON.stringify(err));\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_BInsImags_SS\";\n                    // let Descp = \n                    //   {\n                    //     SSID: res.rows.item(i)[\"SSID\"],\n                    //     BImage: res.rows.item(i)[\"BoilerImage\"],\n                    //     BPWImage: res.rows.item(i)[\"Boilerpipework\"],\n                    //     CTImage: res.rows.item(i)[\"CondensateterminationImage\"],\n                    //     FSImage: res.rows.item(i)[\"FusespurImage\"],\n                    //     IFImage: res.rows.item(i)[\"InternalflueImage\"],\n                    //     FILImage: res.rows.item(i)[\"FlueInLoftImage\"],\n                    //     EFTImage: res.rows.item(i)[\"ExternalflueterminalImage\"],\n                    //     ACCImage:res.rows.item(i)[\"AiringCupboardCylinderImage\"],\n                    //     TImage: '',\n                    //     BMCImage: '',\n                    //     STLImage: res.rows.item(i)[\"STLImage\"],\n                    //     DOLImage: res.rows.item(i)[\"DrainOffLocationFlagImage\"],\n                    //     GMImage: res.rows.item(i)[\"GasMeterImage\"],\n                    //     A1Image: res.rows.item(i)[\"AdditionalOne\"],\n                    //     A2Image: res.rows.item(i)[\"AdditionalTwo\"],\n                    //     A3Image: res.rows.item(i)[\"AdditionalThree\"],\n                    //     A4Image: res.rows.item(i)[\"AdditionalFour\"]\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"enggpics incomplete\");\n                    }\n                  }\n                );\n            }\n          } else {\n            resolve(\" sync  sitesuvery Pics complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\" sync survey error\");\n        });\n    });\n  }\n\n  syncSurveySign() {\n    this.auth.setLoadingText(\"Syncing Site Survey Signatures It may take some time. Please wait... Thank you\");\n    this.auth.setProgressBar(\"96\");\n    let array = [];\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"select * from sitesurveysign  where HaveData=?\", [\"yes\"])\n        .then((res) => {\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              let params = new HttpParams()\n                .set(\"SSID\", res.rows.item(i)[\"SSID\"])\n                .set(\"BInsAddNotes\", res.rows.item(i)[\"describeIssue\"])\n                .set(\"InstallerSig\", res.rows.item(i)[\"surveyorsign\"])\n                .set(\"CustomerSig\", res.rows.item(i)[\"customersign\"])\n                .set(\"InstallerName\", res.rows.item(i)[\"surveyorname\"])\n                .set(\"CustomerName\", res.rows.item(i)[\"customername\"]);\n\n              this.auth\n                .httpSend(\"Service_BInsSignature_SS\", params, \"post\")\n                .subscribe(\n                  (msg) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveySig Success\", msg[\"Msg\"]);\n                    console.log(\"Danish sig\"+JSON.stringify(msg));\n                    \n                    this.auth.database.executeSql(\n                      \"delete from sitesurvey where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    this.auth.database.executeSql(\n                      \"delete from sitesurveypics where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    this.auth.database.executeSql(\n                      \"delete from sitesurveysign where JOBGUID=?\",\n                      [res.rows.item(i)[\"JOBGUID\"]]\n                    );\n                    array.push(msg[\"Msg\"]);\n                    //sync SS button Clicked\n                    console.log(\"Danish caim ref, ssid , buton \"+res.rows.item(i)[\"CLAIMRef\"],res.rows.item(i)[\"SSID\"],res.rows.item(i)[\"ButtonClicked\"]);\n                    \n                    let params = new HttpParams()\n                      .set(\"Ref247\", res.rows.item(i)[\"CLAIMRef\"])\n                      .set(\"SiteSurveyNewsId\", res.rows.item(i)[\"SSID\"])\n                      .set(\"BtnClick\", res.rows.item(i)[\"ButtonClicked\"]);\n                    this.auth\n                      .httpSend(\n                        \"SwChannelApi_SiteSurveyButtonsClicked\",\n                        params,\n                        \"post\"\n                      )\n                      .subscribe(\n                        (btn_msg) => {\n                          // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveyButton Success\", btn_msg[\"Msg\"]);\n                          if (array.length == res.rows.length) {\n                            resolve(\"sitesuvery sign complete\");\n                          }\n                        },\n                        (btn_err) => {\n                          // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveyButton Failed\", btn_err[\"Msg\"]);\n                          // console.log(\"Danish error button err\"+JSON.stringify(btn_err));\n                          // // Start ErrorLog\n                          // let errorMsg = JSON.stringify(btn_err);\n                          // let actionName =\"SwChannelApi_SiteSurveyButtonsClicked\";\n                          // let Descp = \n                          //   {\n                          //     Ref247: res.rows.item(i)[\"CLAIMRef\"],\n                          //     SiteSurveyNewsId: res.rows.item(i)[\"SSID\"],\n                          //     BtnClick: res.rows.item(i)[\"ButtonClicked\"],\n                          // }                      \n                          // ; \n                          // let Desc = JSON.stringify(Descp);\n                          // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                          // // End of ErrorLog\n                          this.auth.showToast(JSON.stringify(btn_err.message))\n                          if (array.length == res.rows.length) {\n                            resolve(\"sitesuvery sign incomplete\");\n                          }\n                        }\n                      );\n                  },\n                  (err) => {\n                    // this.auth.insertIntoSyncLog(res.rows.item(i)['JOBGUID'],  \"SiteSurveySig Failed\", err[\"Msg\"]);\n                    // console.log(\"Danish BInsSignature error \"+JSON.stringify(err));\n                    // // Start ErrorLog\n                    // let errorMsg = JSON.stringify(err);\n                    // let actionName =\"Service_BInsSignature_SS\";\n                    // let Descp = \n                    //   {\n                    //     SSID: res.rows.item(i)[\"SSID\"],\n                    //     BInsAddNotes: res.rows.item(i)[\"describeIssue\"],\n                    //     InstallerSig: res.rows.item(i)[\"surveyorsign\"],\n                    //     CustomerSig: res.rows.item(i)[\"customersign\"],\n                    //     InstallerName: res.rows.item(i)[\"surveyorname\"],\n                    //     CustomerName: res.rows.item(i)[\"customername\"]\n                    // }                      \n                    // ; \n                    // let Desc = JSON.stringify(Descp);\n                    // this.auth.insertIntoErrorLog(errorMsg, res.rows.item(i)['JOBGUID'],  actionName, Desc);\n                    // // End of ErrorLog\n                    this.auth.showToast(JSON.stringify(err.message))\n                    array.push(err[\"header\"]);\n                    if (array.length == res.rows.length) {\n                      resolve(\"sitesurvay complete\");\n                    }\n                  }\n                );\n            }\n          } else {\n            resolve(\" sync survey Installation Pics complete\");\n          }\n        })\n        .catch((e) => {\n          reject(\" sync survey error\");\n        });\n    });\n  }\n\n  retryAlert(msg: string, hdr?: string, subHeader?:string) {\n    console.log(\"ddddd \"+this.retryCount);\n    ++this.retryCount;\n    console.log(\"ddddd \"+this.retryCount);\n    if (this.retryCount<=3) {\n      this.alertCtrl\n      .create({\n        header: hdr || \"Alert Message\",\n        subHeader : subHeader,\n        cssClass: \"custom-class\",\n        message: msg,\n        backdropDismiss: false,\n        buttons: [\n          {\n            text: \"Re-Try\",\n            handler: () => {\n              this.getJobsfromApi();\n            },\n          },\n        ],\n      })\n      .then((res) => {\n        res.present();\n      });\n    } else {\n      this.auth.alert(\"Unexpected Error Occured Please Contact IT Support Team\");\n    }\n}\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar class=\\\"bgcolour\\\">\\n    <ion-row>\\n      <ion-col size=\\\"10\\\" >\\n          <div>\\n            <img src=\\\"../../assets/images/name.png\\\">\\n          </div>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <div>\\n          <ion-icon class=\\\"syncbutton\\\" size=\\\"large\\\" name=\\\"sync\\\" (click)=\\\"syncClick()\\\"></ion-icon>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n  \\n  <div id=\\\"address\\\" class=\\\"whitebg\\\">\\n    <marquee behavior=\\\"\\\" direction=\\\"\\\">\\n      <span>{{address}}</span>\\n    </marquee>    \\n  </div>\\n\\n  <ion-segment class=\\\"whitebg\\\" color=\\\"favorite\\\" value=\\\"today\\\"  [(ngModel)]=\\\"segment\\\">  \\n    <ion-segment-button value=\\\"today\\\">\\n      <ion-label>Today</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"past\\\">\\n      <ion-label>Past</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"future\\\">\\n      <ion-label>Future</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n\\n\\n\\n</ion-header>\\n\\n\\n<ion-content >\\n   <div [ngSwitch]=\\\"segment\\\">\\n    <div *ngSwitchCase=\\\"'today'\\\">\\n      <div *ngFor='let engineerJob of model; let i = index' (click)= 'gotoDetails(engineerJob.CLAIMGUID)'>\\n        <div *ngIf=\\\"engineerJob.ListType == 'Today'\\\" >\\n          <ion-card [hidden]=\\\"engineerJob.ParentJobGuid != ''\\\"> \\n            <ion-list>\\n              <ion-item lines='none' style=\\\"--background:{{engineerJob.BackgroundColour}};\\\" >\\n                <ion-thumbnail slot=\\\"start\\\">\\n                  <ion-label>\\n                    <p>{{engineerJob.BookingDate}}</p>\\n                    <p>{{engineerJob.BookingTimeType}}</p>\\n                  </ion-label>\\n                </ion-thumbnail>\\n                <ion-label>\\n                  <h4>{{engineerJob.CLAIMJOBID}} {{engineerJob.RiskPostCode}}</h4>\\n                  <h2>{{engineerJob.ProductName}}</h2>\\n                  <p>{{engineerJob.ContactName}}</p>\\n                  <p>{{engineerJob.RiskAddress}}</p>\\n                </ion-label>\\n                <ion-icon slot='end' name=\\\"chevron-forward\\\"></ion-icon>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card>\\n        </div>\\n      </div>\\n    </div>\\n    \\n  \\n    <div *ngSwitchCase=\\\"'past'\\\">\\n      <div *ngFor='let engineerJob of model; let i = index' (click)= 'gotoDetails(engineerJob.CLAIMGUID)'>\\n        <div *ngIf=\\\"engineerJob.ListType == 'Past'\\\" >\\n          <ion-card [hidden]=\\\"engineerJob.ParentJobGuid != ''\\\"> \\n            <ion-list>\\n              <ion-item lines=\\\"none\\\" [hidden]=\\\"engineerJob.ParentJobGuid!=''\\\" style=\\\"--background:{{engineerJob.BackgroundColour}};\\\" >\\n                <ion-thumbnail slot=\\\"start\\\">\\n                  <ion-label>\\n                    <p>{{engineerJob.BookingDate}}</p>\\n                    <p>{{engineerJob.BookingTimeType}}</p>\\n                  </ion-label>\\n                </ion-thumbnail>\\n                <ion-label>\\n                  <h4>{{engineerJob.CLAIMJOBID}} {{engineerJob.RiskPostCode}}</h4>\\n                  <h2>{{engineerJob.ProductName}}</h2>\\n                  <p>{{engineerJob.ContactName}}</p>\\n                  <p>{{engineerJob.RiskAddress}}</p>\\n                </ion-label>\\n                <ion-icon slot='end' name=\\\"chevron-forward\\\"></ion-icon>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card>\\n        </div>\\n      </div>\\n    </div>\\n    \\n\\n    <div *ngSwitchCase=\\\"'future'\\\">\\n      <div *ngFor='let engineerJob of model; let i = index' (click)= 'gotoDetails(engineerJob.CLAIMGUID)'>\\n        <div *ngIf=\\\"engineerJob.ListType == 'Future'\\\" >\\n          <ion-card [hidden]=\\\"engineerJob.ParentJobGuid != ''\\\"> \\n            <ion-list>\\n              <ion-item lines='none' style=\\\"--background:{{engineerJob.BackgroundColour}};\\\" >\\n                <ion-thumbnail slot=\\\"start\\\">\\n                  <ion-label>\\n                    <p>{{engineerJob.BookingDate}}</p>\\n                    <p>{{engineerJob.BookingTimeType}}</p>\\n                  </ion-label>\\n                </ion-thumbnail>\\n                <ion-label>\\n                  <h4>{{engineerJob.CLAIMJOBID}} {{engineerJob.RiskPostCode}}</h4>\\n                  <h2>{{engineerJob.ProductName}}</h2>\\n                  <p>{{engineerJob.ContactName}}</p>\\n                  <p>{{engineerJob.RiskAddress}}</p>\\n                </ion-label>\\n                <ion-icon slot='end' name=\\\"chevron-forward\\\"></ion-icon>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\";"]}