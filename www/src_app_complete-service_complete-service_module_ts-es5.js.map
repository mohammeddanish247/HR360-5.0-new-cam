{"version":3,"mappings":"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","names":["routes","path","component","_complete_service_page__WEBPACK_IMPORTED_MODULE_0__","CompleteServicePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","CompleteServicePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_complete_service_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_complete_service_page__WEBPACK_IMPORTED_MODULE_1__","CompleteServicePage","router","route","auth","queryParams","subscribe","getCurrentNavigation","extras","state","data","getLocation","console","log","JSON","stringify","event","jobOutComeFlag","jobOutCome","detail","value","image2flag","image3flag","parts","partsFlag","additional","additionalFlag","opt","option","imageflag","cameraOptions","quality","source","_capacitor_camera__WEBPACK_IMPORTED_MODULE_2__","height","width","resultType","galleryOptions","then","imageData","base64Image","base64String","image1","base64","err","image2","image3","f","scrollToId","database","executeSql","getdateformatV2","lat","res","showToast","navigate","e","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_api_service__WEBPACK_IMPORTED_MODULE_3__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/complete-service/complete-service-routing.module.ts","webpack:///src/app/complete-service/complete-service.module.ts","webpack:///src/app/complete-service/complete-service.page.ts","webpack:///src/app/complete-service/complete-service.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompleteServicePage } from './complete-service.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompleteServicePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompleteServicePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompleteServicePageRoutingModule } from './complete-service-routing.module';\n\nimport { CompleteServicePage } from './complete-service.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CompleteServicePageRoutingModule\n  ],\n  declarations: [CompleteServicePage]\n})\nexport class CompleteServicePageModule {}\n"," \nimport { Component, OnInit } from '@angular/core';\nimport { Camera, ImageOptions, CameraSource, CameraResultType } from '@capacitor/camera';\nimport { ApiService } from '../api.service';\nimport { Form, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n///////////////////completed\n\n@Component({\n  selector: 'app-complete-service',\n  templateUrl: './complete-service.page.html',\n  styleUrls: ['./complete-service.page.scss'],\n})\nexport class CompleteServicePage implements OnInit {\n\n  cameraOptions: ImageOptions;\n  galleryOptions: ImageOptions;\n  base64:string='';\n  image1 :any='';\n  image2 :any='';\n  image3 :any='';\n  jobOutCome : string='';\n  data:any[];\n  additional: any=\"\";\n  parts: any=\"\";\n  image2flag : boolean = true ;\n  image3flag : boolean = true ;\n  jobOutComeFlag: boolean;\n  partsFlag: boolean;\n  additionalFlag: boolean;\n  imageflag: boolean;\n\n  constructor(private router:Router, private route:ActivatedRoute , private auth:ApiService) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data; \n        this.auth.getLocation();      \n        console.log(JSON.stringify(this.data));\n       // this.auth.showToast(this.data['JOBGUID'],\"warning\")\n      }\n    });\n  }\n\n  radiogroupChange(event){\n    this.jobOutComeFlag = false;\n    this.jobOutCome = event.detail.value;    \n    if(this.jobOutCome == 'At Risk' || this.jobOutCome == 'Capped Off (Not Safe)'){\n      this.image2flag = false;\n      this.image3flag = false;\n    }\n    else{\n      this.image2flag = true;\n      this.image3flag = true;\n    }\n}\n\npartsIonChange(event){\n  this.parts = event.detail.value;    \n  this.partsFlag = false;\n  \n}\n\nadditionalIonChange(event){\n  this.additional = event.detail.value;    \n  this.additionalFlag = false;\n \n}\n\n  openCamera(opt, option : string){\n    this.imageflag = false;\n    this.cameraOptions = {\n      quality: 20,\n      source :CameraSource.Camera,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64\n    }\n    this.galleryOptions = {\n      quality: 20,\n      source :CameraSource.Photos,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64\n    }\n    switch (opt) {\n      case 1:\n        Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n          let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n          this.image1 = 'data:image/jpeg;base64,' + imageData.base64String;\n          this.base64 = imageData.base64String;\n         }, (err) => {\n         }); \n        break;\n      case 2:\n        Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n          let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n          this.image2 = 'data:image/jpeg;base64,' + imageData.base64String;\n          this.base64 = imageData.base64String;\n         }, (err) => {\n         }); \n        break;\n      case 3:\n        Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n          let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n          this.image3 = 'data:image/jpeg;base64,' + imageData.base64String;\n          this.base64 = imageData.base64String;\n         }, (err) => {\n         }); \n        break;\n    \n      default:\n        break;\n    }\n    \n\n  }\n\n  complete(f:NgForm)\n  {\n      if(this.jobOutCome==''){\n        this.jobOutComeFlag = true;\n        this.auth.scrollToId(\"joboutcome\");\n      }else{\n            if((this.jobOutCome == 'At Risk' || this.jobOutCome == 'Capped Off (Not Safe)') && (this.image1=='')){\n              //this.auth.showToast('Upload Image is  mandatory','danger');\n              this.imageflag = true;\n              this.auth.scrollToId(\"uploadImage\");\n            }\n           else{\n            console.log(JSON.stringify(this.data));\n            if (this.data['BackgroundColour']=='#20B2AA') {\n              //In COMBO SERVICE\n              this.auth.database.executeSql('update  completeservice set HaveData=?, OUTCOME=?, JOBNOTE=?, PARTS=?, FILEBASE=?,OnDt=?, Latitude=?,Longitude=?,ComboClaimJobId=?, CantCompleteReason=?, IsServiceCompleted=?, BackgroundColour=? where JOBGUID=?', ['combo',this.jobOutCome,this.additional,this.parts,this.base64,this.auth.getdateformatV2(), this.auth.lat, this.auth.long, this.data['ComboClaimJobId'], \"NA - Service Completed\",\"Yes\",this.data['BackgroundColour'] , this.data[\"JOBGUID\"]])\n             .then((res) => {\n              this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                this.auth.showToast('Success! Job has been Completed.','success'); \n                this.router.navigate(['details']);\n            \n              }).catch((e)=>{  });\n             }).catch(e=>{});\n            } else {\n              //In NOrmal Service\n              console.log('Else code..........' + this.data['JOBGUID']+' '+this.data['BackgroundColour']);\n              this.auth.database.executeSql('update  completeservice set HaveData=?, OUTCOME=?, JOBNOTE=?, PARTS=?, FILEBASE=?,OnDt=?, Latitude=?,Longitude=?,ComboClaimJobId=?, CantCompleteReason=?, IsServiceCompleted=?, BackgroundColour=? where JOBGUID=?', [ 'yes',this.jobOutCome,this.additional,this.parts,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long, this.data['ComboClaimJobId'], \" \",\"yes\",this.data['BackgroundColour'] , this.data[\"JOBGUID\"]])\n             .then((res) => {\n              console.log('Upated service in Normal JOB'+JSON.stringify(res));\n              // this.auth.database.executeSql('update  completeservice set OUTCOME=?,JOBNOTE=?,PARTS=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,ComboClaimJobId=?,  CantCompleteReason=?, IsServiceCompleted=?, BackgroundColour=? where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long,this.data['CLAIMJOBID'], 'yes',this.data['BackgroundColour'], this.data['JOBGUID']])\n              //   .then((res) => {\n                  this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                    console.log('#### devdx jobsstatus success '+JSON.stringify(res));\n                    this.auth.showToast('Success! Job has been Completed.','success'); \n                    console.log('#### complete success ' + JSON.stringify(res));\n                    this.router.navigate(['details']);\n                \n                  }).catch((e)=>{  });\n                  \n                }).catch((e) => {\n                  console.log('### devdx complete Failure ' + JSON.stringify(e));\n                });\n              \n            // }              \n\n            // }\n  \n          }\n          }\n\n        }\n     \n    }\n\n\n  }\n\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Job Report Complete Service</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #f='ngForm'>\\n    <ion-card id=\\\"joboutcome\\\" class=\\\"ion-padding\\\">\\n      <ion-radio-group  \\n      allow-empty-selection='false' \\n      (ionChange)='radiogroupChange($event)'>      \\n          <div class=\\\"ion-text-center\\\">\\n            <h5>Job Outcome</h5> \\n          </div>    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>Job Completed Successfully</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"job completed succesfully\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>At Risk</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"At Risk\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>Capped Off (Not Safe)</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Capped Off (Not Safe)\\\"></ion-radio>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>CP12 Failed</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"CP12 Failed\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n      <ion-item></ion-item>\\n      <p *ngIf='jobOutComeFlag' class=\\\"alert\\\">Job outcomes cannot be empty</p>\\n    </ion-card>\\n\\n    <ion-card id=\\\"parts\\\" class=\\\"ion-padding\\\">\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Parts</ion-label>\\n        <ion-input type=\\\"text\\\" \\n        [(ngModel)]=\\\"parts\\\"\\n        (ionChange)=\\\"partsIonChange($event)\\\"\\n        name='parts'\\n        required\\n        #partsCtrl='ngModel'>\\n      </ion-input>\\n      </ion-item>\\n      <p *ngIf='(!partsCtrl.valid && partsCtrl.touched) || partsFlag' class=\\\"alert\\\"> Parts cannot be empty</p>\\n    </ion-card>\\n\\n\\n    <ion-card id=\\\"additional\\\" class=\\\"ion-padding\\\">\\n      <ion-item>\\n        <ion-textarea rows=\\\"6\\\" cols=\\\"20\\\" \\n         placeholder=\\\"Enter Additional Notes here...\\\"\\n         [(ngModel)]=\\\"additional\\\" \\n         (ionChange)=\\\"additionalIonChange($event)\\\"\\n         name='additional'\\n         required\\n         #additionalCtrl='ngModel'\\n         ></ion-textarea>\\n      </ion-item>\\n      <p *ngIf='(!additionalCtrl.valid && additionalCtrl.touched) || additionalFlag' class=\\\"alert\\\"> Additional notes cannot be empty</p>\\n    </ion-card>\\n      \\n    <ion-card id=\\\"uploadImage\\\" class=\\\"ion-padding\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 1</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(1,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(1,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image1!= null\\\">\\n        <img [src]=\\\"image1\\\" />\\n      </span>\\n      <p *ngIf='imageflag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    \\n    <ion-card id=\\\"uploadImage2\\\" class=\\\"ion-padding\\\" [hidden]=\\\"image2flag\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 2</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(2,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(2,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image2!= null\\\">\\n        <img [src]=\\\"image2\\\" />\\n      </span>      \\n      <p *ngIf='image2flag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    <ion-card id=\\\"uploadImage3\\\" class=\\\"ion-padding\\\" [hidden]=\\\"image3flag\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 3</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(3,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(3 ,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image3!= null\\\">\\n        <img [src]=\\\"image3\\\" />\\n      </span>\\n      <p *ngIf='image3flag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    </form>\\n</ion-content>\\n\\n<!-- <ion-button (click)=\\\"checking()\\\">Check</ion-button> -->\\n<!-- [disabled]='!f.valid' -->\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\"  (click)=\\\"complete(f)\\\">Submit</ion-button>\\n</ion-footer>\\n\\n\";"]}