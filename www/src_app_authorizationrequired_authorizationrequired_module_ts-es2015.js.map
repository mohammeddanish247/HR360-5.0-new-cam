{"version":3,"file":"src_app_authorizationrequired_authorizationrequired_module_ts-es2015.js","mappings":"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","sources":["./src/app/authorizationrequired/authorizationrequired-routing.module.ts","./src/app/authorizationrequired/authorizationrequired.module.ts","./src/app/authorizationrequired/authorizationrequired.page.ts","./src/app/authorizationrequired/authorizationrequired.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthorizationrequiredPage } from './authorizationrequired.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthorizationrequiredPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthorizationrequiredPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthorizationrequiredPageRoutingModule } from './authorizationrequired-routing.module';\n\nimport { AuthorizationrequiredPage } from './authorizationrequired.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthorizationrequiredPageRoutingModule\n  ],\n  declarations: [AuthorizationrequiredPage]\n})\nexport class AuthorizationrequiredPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Camera, CameraResultType, CameraSource, ImageOptions } from '@capacitor/camera';\nimport { Form, NgForm } from '@angular/forms';\nimport { ApiService } from '../api.service';\n\n\n//////authorization\n\n@Component({\n  selector: 'app-authorizationrequired',\n  templateUrl: './authorizationrequired.page.html',\n  styleUrls: ['./authorizationrequired.page.scss'],\n})\nexport class AuthorizationrequiredPage implements OnInit {\n\n  cameraOptions: ImageOptions;\n  galleryOptions: ImageOptions;\n  base64:string='';\n  updatePicture :any='';\n  jobOutcome:string='';\n  parts:string='';\n  labour:string='';\n  additional:string = \"Did you work on the appliance: Yes/No \\nVisual Inspection of appliance: Pass/Fail \\nBurner Pressure/Gas Rate: \\nSafety Device: Pass/Fail \\nInitial FGA: \\nFinal FGA: \\nFlue: Pass Fail \\nVentilation: Pass/Fail \\nDefects: \\nClassification: \\nAction Taken:\";\n  data:any[];\n  constructor(private auth:ApiService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data;  \n        this.auth.getLocation();     \n      }\n    });\n  }\n\n  radiogroupChange(event){\n    this.jobOutcome = event.detail.value;\n  }\n  \n  \n  openCamera(option : string){\n    this.cameraOptions = {\n      quality: 20,\n      source :CameraSource.Camera,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64,\n      allowEditing : false ,\n    }\n    this.galleryOptions = {\n      quality: 20,\n      source :CameraSource.Photos,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64,\n      allowEditing : false ,\n    }\n    \n    Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n      // imageData is either a base64 encoded string or a file URI\n      // If it's base64 (DATA_URL):\n      let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n      this.updatePicture = 'data:image/jpeg;base64,' + imageData.base64String;\n      this.base64 = imageData.base64String.replace(/\\s+/g, \"+\");\n     }, (err) => {\n      // Handle error\n     }); \n  }\n\n  authoizationSubmit(form:NgForm){\n\n    let date = this.auth.getdateformatV2().split(' ')[0];\n    if(this.jobOutcome==''){\n      this.auth.showToast('Job outcome cannot be empty.','danger');\n\n    }else{\n\n      if(String(form.value.parts).trim()==''){\n        this.auth.showToast('Parts cannot be empty.','danger');\n      }else{\n        \n        if(String(form.value.labour).trim()==''){\n          this.auth.showToast('Labour field cannot be empty.','danger');\n        }else{\n          \n          if(String(form.value.additionalNotes).trim()==''){\n            this.auth.showToast('Additional Notes cannot be empty.','danger');\n          }else{\n            \n           // if(this.updatePicture==''){\n           //   this.auth.showToast('Picture cannot be empty.');\n           // }else{\n              console.log('Else code..........' + this.data['JOBGUID']);\n              let haveData = \"yes\";\n              this.auth.database.executeSql('update authorization set OUTCOME=?,JOBNOTE=?,parts=?,labour=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,HaveData=? where JOBGUID=?', [this.jobOutcome, form.value.additionalNotes,this.parts,this.labour, this.base64, date, this.auth.lat, this.auth.long,haveData, this.data['JOBGUID']])\n                .then((res) => {\n                  console.log('#### authorization success ' + JSON.stringify(res));\n                  this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                    this.router.navigate(['details']);\n                    this.auth.showToast(\"Success! Job Authorization has been completed.\",'success');\n                  }).catch((e)=>{  });\n                }).catch((e) => {\n                  console.log('### authorization Failure ' + JSON.stringify(e));\n                });\n           // }\n          }\n          }\n        }\n\n      }\n\n    }\n\n\n\n  }\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Job Report</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form #f='ngForm'  >\\n    <ion-card>\\n    <ion-radio-group allow-empty-selection='false' (ionChange)='radiogroupChange($event)'>\\n      \\n        <div class=\\\"ion-text-center ion-padding\\\">\\n          <b>Job Outcome</b>\\n        </div>\\n      \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Banding</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Banding\\\"></ion-radio>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Part Not Available</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"PartNotAvailable\\\"></ion-radio>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Ber</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Ber\\\"></ion-radio>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Review Case</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"ReviewCase\\\"></ion-radio>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Insufficent Time To Complete</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"InsufficentTimeToComplete\\\"></ion-radio>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Not Covered</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"NotCovered\\\"></ion-radio>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Out Of Skill Set</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"OutOfSkillSet\\\"></ion-radio>\\n      </ion-item>\\n\\n    </ion-radio-group>\\n  </ion-card>\\n\\n    <ion-card>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Parts</ion-label>\\n        <ion-input type=\\\"text\\\"  \\n        [(ngModel)]=\\\"parts\\\" \\n        name='parts'\\n        required\\n        #partsCtrl='ngModel'></ion-input>\\n      </ion-item>\\n      <p *ngIf='!partsCtrl.valid && partsCtrl.touched'>    * Parts cannot be empty</p>\\n\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Labour</ion-label>\\n        <ion-input type=\\\"text\\\"  \\n        [(ngModel)]=\\\"labour\\\" \\n        name='labour'\\n        required\\n        #labourCtrl='ngModel'></ion-input>\\n      </ion-item>\\n\\n      <p *ngIf='!labourCtrl.valid && labourCtrl.touched'>    * Labours field cannot be empty</p>\\n\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-item>\\n        <ion-textarea rows=\\\"12\\\" cols=\\\"20\\\" \\n        placeholder=\\\"Enter Additional Notes here...\\\"\\n        [(ngModel)]=\\\"additional\\\" \\n        name='additionalNotes'\\n        required\\n        #additionalNotesCtrl='ngModel'\\n        ></ion-textarea>\\n      </ion-item>\\n      <p *ngIf='!additionalNotesCtrl.valid && additionalNotesCtrl.touched'>    * Additional cannot be empty</p>\\n\\n      </ion-card>\\n      <ion-card>\\n        <ion-item lines=\\\"full\\\">\\n          <b>Upload Image</b>\\n          <ion-icon slot=\\\"end\\\" name=\\\"camera\\\"  (click)=\\\"openCamera('cam')\\\"></ion-icon>\\n          <ion-icon slot=\\\"end\\\" name=\\\"image\\\"  (click)=\\\"openCamera('gall')\\\"></ion-icon>\\n        </ion-item>\\n        <span *ngIf=\\\"updatePicture!= null\\\">\\n          <img [src]=\\\"updatePicture\\\" />\\n        </span>\\n      </ion-card>\\n    \\n    </form>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\" [disabled]='!f.valid' (click)=\\\"authoizationSubmit(f)\\\">Submit</ion-button>\\n</ion-footer>\";"],"names":[],"sourceRoot":"webpack:///"}