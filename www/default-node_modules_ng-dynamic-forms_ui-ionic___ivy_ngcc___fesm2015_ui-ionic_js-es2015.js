(self["webpackChunkhr360"] = self["webpackChunkhr360"] || []).push([["default-node_modules_ng-dynamic-forms_ui-ionic___ivy_ngcc___fesm2015_ui-ionic_js"],{

/***/ 57636:
/*!***************************************************************************!*\
  !*** ./node_modules/@ng-dynamic-forms/core/__ivy_ngcc__/fesm2015/core.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AND_OPERATOR": function() { return /* binding */ AND_OPERATOR; },
/* harmony export */   "AUTOCOMPLETE_OFF": function() { return /* binding */ AUTOCOMPLETE_OFF; },
/* harmony export */   "AUTOCOMPLETE_ON": function() { return /* binding */ AUTOCOMPLETE_ON; },
/* harmony export */   "AUTOFILL_FIELDS": function() { return /* binding */ AUTOFILL_FIELDS; },
/* harmony export */   "AUTOFILL_FIELDS_CONTACT": function() { return /* binding */ AUTOFILL_FIELDS_CONTACT; },
/* harmony export */   "AUTOFILL_FIELD_ADDITIONAL_NAME": function() { return /* binding */ AUTOFILL_FIELD_ADDITIONAL_NAME; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LEVEL_1": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LEVEL_1; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LEVEL_2": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LEVEL_2; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LEVEL_3": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LEVEL_3; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LEVEL_4": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LEVEL_4; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LINE_1": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LINE_1; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LINE_2": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LINE_2; },
/* harmony export */   "AUTOFILL_FIELD_ADDRESS_LINE_3": function() { return /* binding */ AUTOFILL_FIELD_ADDRESS_LINE_3; },
/* harmony export */   "AUTOFILL_FIELD_BDAY": function() { return /* binding */ AUTOFILL_FIELD_BDAY; },
/* harmony export */   "AUTOFILL_FIELD_BDAY_DAY": function() { return /* binding */ AUTOFILL_FIELD_BDAY_DAY; },
/* harmony export */   "AUTOFILL_FIELD_BDAY_MONTH": function() { return /* binding */ AUTOFILL_FIELD_BDAY_MONTH; },
/* harmony export */   "AUTOFILL_FIELD_BDAY_YEAR": function() { return /* binding */ AUTOFILL_FIELD_BDAY_YEAR; },
/* harmony export */   "AUTOFILL_FIELD_CC_ADDITIONAL_NAME": function() { return /* binding */ AUTOFILL_FIELD_CC_ADDITIONAL_NAME; },
/* harmony export */   "AUTOFILL_FIELD_CC_CSC": function() { return /* binding */ AUTOFILL_FIELD_CC_CSC; },
/* harmony export */   "AUTOFILL_FIELD_CC_EXP": function() { return /* binding */ AUTOFILL_FIELD_CC_EXP; },
/* harmony export */   "AUTOFILL_FIELD_CC_EXP_MONTH": function() { return /* binding */ AUTOFILL_FIELD_CC_EXP_MONTH; },
/* harmony export */   "AUTOFILL_FIELD_CC_EXP_YEAR": function() { return /* binding */ AUTOFILL_FIELD_CC_EXP_YEAR; },
/* harmony export */   "AUTOFILL_FIELD_CC_FAMILY_NAME": function() { return /* binding */ AUTOFILL_FIELD_CC_FAMILY_NAME; },
/* harmony export */   "AUTOFILL_FIELD_CC_GIVEN_NAME": function() { return /* binding */ AUTOFILL_FIELD_CC_GIVEN_NAME; },
/* harmony export */   "AUTOFILL_FIELD_CC_NAME": function() { return /* binding */ AUTOFILL_FIELD_CC_NAME; },
/* harmony export */   "AUTOFILL_FIELD_CC_NUMBER": function() { return /* binding */ AUTOFILL_FIELD_CC_NUMBER; },
/* harmony export */   "AUTOFILL_FIELD_CC_TYPE": function() { return /* binding */ AUTOFILL_FIELD_CC_TYPE; },
/* harmony export */   "AUTOFILL_FIELD_COUNTRY": function() { return /* binding */ AUTOFILL_FIELD_COUNTRY; },
/* harmony export */   "AUTOFILL_FIELD_COUNTRY_NAME": function() { return /* binding */ AUTOFILL_FIELD_COUNTRY_NAME; },
/* harmony export */   "AUTOFILL_FIELD_CURRENT_PASSWORD": function() { return /* binding */ AUTOFILL_FIELD_CURRENT_PASSWORD; },
/* harmony export */   "AUTOFILL_FIELD_EMAIL": function() { return /* binding */ AUTOFILL_FIELD_EMAIL; },
/* harmony export */   "AUTOFILL_FIELD_FAMILY_NAME": function() { return /* binding */ AUTOFILL_FIELD_FAMILY_NAME; },
/* harmony export */   "AUTOFILL_FIELD_GIVEN_NAME": function() { return /* binding */ AUTOFILL_FIELD_GIVEN_NAME; },
/* harmony export */   "AUTOFILL_FIELD_HONORIFIC_PREFIX": function() { return /* binding */ AUTOFILL_FIELD_HONORIFIC_PREFIX; },
/* harmony export */   "AUTOFILL_FIELD_HONORIFIC_SUFFIX": function() { return /* binding */ AUTOFILL_FIELD_HONORIFIC_SUFFIX; },
/* harmony export */   "AUTOFILL_FIELD_IMPP": function() { return /* binding */ AUTOFILL_FIELD_IMPP; },
/* harmony export */   "AUTOFILL_FIELD_LANGUAGE": function() { return /* binding */ AUTOFILL_FIELD_LANGUAGE; },
/* harmony export */   "AUTOFILL_FIELD_NAME": function() { return /* binding */ AUTOFILL_FIELD_NAME; },
/* harmony export */   "AUTOFILL_FIELD_NEW_PASSWORD": function() { return /* binding */ AUTOFILL_FIELD_NEW_PASSWORD; },
/* harmony export */   "AUTOFILL_FIELD_NICKNAME": function() { return /* binding */ AUTOFILL_FIELD_NICKNAME; },
/* harmony export */   "AUTOFILL_FIELD_ORGANIZATION": function() { return /* binding */ AUTOFILL_FIELD_ORGANIZATION; },
/* harmony export */   "AUTOFILL_FIELD_ORGANIZATION_TITLE": function() { return /* binding */ AUTOFILL_FIELD_ORGANIZATION_TITLE; },
/* harmony export */   "AUTOFILL_FIELD_PHOTO": function() { return /* binding */ AUTOFILL_FIELD_PHOTO; },
/* harmony export */   "AUTOFILL_FIELD_POSTAL_CODE": function() { return /* binding */ AUTOFILL_FIELD_POSTAL_CODE; },
/* harmony export */   "AUTOFILL_FIELD_SEX": function() { return /* binding */ AUTOFILL_FIELD_SEX; },
/* harmony export */   "AUTOFILL_FIELD_STREET_ADDRESS": function() { return /* binding */ AUTOFILL_FIELD_STREET_ADDRESS; },
/* harmony export */   "AUTOFILL_FIELD_TEL": function() { return /* binding */ AUTOFILL_FIELD_TEL; },
/* harmony export */   "AUTOFILL_FIELD_TEL_AREA_CODE": function() { return /* binding */ AUTOFILL_FIELD_TEL_AREA_CODE; },
/* harmony export */   "AUTOFILL_FIELD_TEL_COUNTRY_CODE": function() { return /* binding */ AUTOFILL_FIELD_TEL_COUNTRY_CODE; },
/* harmony export */   "AUTOFILL_FIELD_TEL_LOCAL": function() { return /* binding */ AUTOFILL_FIELD_TEL_LOCAL; },
/* harmony export */   "AUTOFILL_FIELD_TEL_LOCAL_EXTENSION": function() { return /* binding */ AUTOFILL_FIELD_TEL_LOCAL_EXTENSION; },
/* harmony export */   "AUTOFILL_FIELD_TEL_LOCAL_PREFIX": function() { return /* binding */ AUTOFILL_FIELD_TEL_LOCAL_PREFIX; },
/* harmony export */   "AUTOFILL_FIELD_TEL_LOCAL_SUFFIX": function() { return /* binding */ AUTOFILL_FIELD_TEL_LOCAL_SUFFIX; },
/* harmony export */   "AUTOFILL_FIELD_TEL_NATIONAL": function() { return /* binding */ AUTOFILL_FIELD_TEL_NATIONAL; },
/* harmony export */   "AUTOFILL_FIELD_TRANSACTION_AMOUNT": function() { return /* binding */ AUTOFILL_FIELD_TRANSACTION_AMOUNT; },
/* harmony export */   "AUTOFILL_FIELD_TRANSACTION_CURRENCY": function() { return /* binding */ AUTOFILL_FIELD_TRANSACTION_CURRENCY; },
/* harmony export */   "AUTOFILL_FIELD_URL": function() { return /* binding */ AUTOFILL_FIELD_URL; },
/* harmony export */   "AUTOFILL_FIELD_USERNAME": function() { return /* binding */ AUTOFILL_FIELD_USERNAME; },
/* harmony export */   "AUTOFILL_TOKENS_ADDRESS": function() { return /* binding */ AUTOFILL_TOKENS_ADDRESS; },
/* harmony export */   "AUTOFILL_TOKENS_CONTACT": function() { return /* binding */ AUTOFILL_TOKENS_CONTACT; },
/* harmony export */   "AUTOFILL_TOKEN_BILLING": function() { return /* binding */ AUTOFILL_TOKEN_BILLING; },
/* harmony export */   "AUTOFILL_TOKEN_FAX": function() { return /* binding */ AUTOFILL_TOKEN_FAX; },
/* harmony export */   "AUTOFILL_TOKEN_HOME": function() { return /* binding */ AUTOFILL_TOKEN_HOME; },
/* harmony export */   "AUTOFILL_TOKEN_MOBILE": function() { return /* binding */ AUTOFILL_TOKEN_MOBILE; },
/* harmony export */   "AUTOFILL_TOKEN_PAGER": function() { return /* binding */ AUTOFILL_TOKEN_PAGER; },
/* harmony export */   "AUTOFILL_TOKEN_SHIPPING": function() { return /* binding */ AUTOFILL_TOKEN_SHIPPING; },
/* harmony export */   "AUTOFILL_TOKEN_WORK": function() { return /* binding */ AUTOFILL_TOKEN_WORK; },
/* harmony export */   "CHANGE_ERROR_STATE_MATCHER": function() { return /* binding */ CHANGE_ERROR_STATE_MATCHER; },
/* harmony export */   "DEFAULT_ERROR_STATE_MATCHER": function() { return /* binding */ DEFAULT_ERROR_STATE_MATCHER; },
/* harmony export */   "DISABLED_MATCHER": function() { return /* binding */ DISABLED_MATCHER; },
/* harmony export */   "DISABLED_MATCHER_PROVIDER": function() { return /* binding */ DISABLED_MATCHER_PROVIDER; },
/* harmony export */   "DYNAMIC_ERROR_MESSAGES_MATCHER": function() { return /* binding */ DYNAMIC_ERROR_MESSAGES_MATCHER; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK": function() { return /* binding */ DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_MAP_FN": function() { return /* binding */ DYNAMIC_FORM_CONTROL_MAP_FN; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_ARRAY": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_ARRAY; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_EDITOR": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_EDITOR; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_GROUP": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_GROUP; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_INPUT": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_INPUT; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_RATING": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_RATING; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_SELECT": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_SELECT; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_SLIDER": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_SLIDER; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_SWITCH": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_SWITCH; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA; },
/* harmony export */   "DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER": function() { return /* binding */ DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER; },
/* harmony export */   "DYNAMIC_FORM_TEXTAREA_WRAP_HARD": function() { return /* binding */ DYNAMIC_FORM_TEXTAREA_WRAP_HARD; },
/* harmony export */   "DYNAMIC_FORM_TEXTAREA_WRAP_SOFT": function() { return /* binding */ DYNAMIC_FORM_TEXTAREA_WRAP_SOFT; },
/* harmony export */   "DYNAMIC_MATCHERS": function() { return /* binding */ DYNAMIC_MATCHERS; },
/* harmony export */   "DYNAMIC_MATCHER_PROVIDERS": function() { return /* binding */ DYNAMIC_MATCHER_PROVIDERS; },
/* harmony export */   "DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT": function() { return /* binding */ DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT; },
/* harmony export */   "DYNAMIC_VALIDATORS": function() { return /* binding */ DYNAMIC_VALIDATORS; },
/* harmony export */   "DynamicCheckControlModel": function() { return /* binding */ DynamicCheckControlModel; },
/* harmony export */   "DynamicCheckboxGroupModel": function() { return /* binding */ DynamicCheckboxGroupModel; },
/* harmony export */   "DynamicCheckboxModel": function() { return /* binding */ DynamicCheckboxModel; },
/* harmony export */   "DynamicColorPickerModel": function() { return /* binding */ DynamicColorPickerModel; },
/* harmony export */   "DynamicDateControlModel": function() { return /* binding */ DynamicDateControlModel; },
/* harmony export */   "DynamicDatePickerModel": function() { return /* binding */ DynamicDatePickerModel; },
/* harmony export */   "DynamicEditorModel": function() { return /* binding */ DynamicEditorModel; },
/* harmony export */   "DynamicFileControlModel": function() { return /* binding */ DynamicFileControlModel; },
/* harmony export */   "DynamicFileUploadModel": function() { return /* binding */ DynamicFileUploadModel; },
/* harmony export */   "DynamicFormArrayComponent": function() { return /* binding */ DynamicFormArrayComponent; },
/* harmony export */   "DynamicFormArrayGroupModel": function() { return /* binding */ DynamicFormArrayGroupModel; },
/* harmony export */   "DynamicFormArrayModel": function() { return /* binding */ DynamicFormArrayModel; },
/* harmony export */   "DynamicFormComponent": function() { return /* binding */ DynamicFormComponent; },
/* harmony export */   "DynamicFormComponentService": function() { return /* binding */ DynamicFormComponentService; },
/* harmony export */   "DynamicFormControlComponent": function() { return /* binding */ DynamicFormControlComponent; },
/* harmony export */   "DynamicFormControlContainerComponent": function() { return /* binding */ DynamicFormControlContainerComponent; },
/* harmony export */   "DynamicFormControlEventType": function() { return /* binding */ DynamicFormControlEventType; },
/* harmony export */   "DynamicFormControlModel": function() { return /* binding */ DynamicFormControlModel; },
/* harmony export */   "DynamicFormControlWithTemplateComponent": function() { return /* binding */ DynamicFormControlWithTemplateComponent; },
/* harmony export */   "DynamicFormGroupComponent": function() { return /* binding */ DynamicFormGroupComponent; },
/* harmony export */   "DynamicFormGroupModel": function() { return /* binding */ DynamicFormGroupModel; },
/* harmony export */   "DynamicFormHook": function() { return /* binding */ DynamicFormHook; },
/* harmony export */   "DynamicFormLayoutService": function() { return /* binding */ DynamicFormLayoutService; },
/* harmony export */   "DynamicFormOption": function() { return /* binding */ DynamicFormOption; },
/* harmony export */   "DynamicFormRelationService": function() { return /* binding */ DynamicFormRelationService; },
/* harmony export */   "DynamicFormService": function() { return /* binding */ DynamicFormService; },
/* harmony export */   "DynamicFormValidationService": function() { return /* binding */ DynamicFormValidationService; },
/* harmony export */   "DynamicFormValueControlModel": function() { return /* binding */ DynamicFormValueControlModel; },
/* harmony export */   "DynamicFormsCoreModule": function() { return /* binding */ DynamicFormsCoreModule; },
/* harmony export */   "DynamicInputControlModel": function() { return /* binding */ DynamicInputControlModel; },
/* harmony export */   "DynamicInputModel": function() { return /* binding */ DynamicInputModel; },
/* harmony export */   "DynamicListDirective": function() { return /* binding */ DynamicListDirective; },
/* harmony export */   "DynamicOptionControlModel": function() { return /* binding */ DynamicOptionControlModel; },
/* harmony export */   "DynamicRadioGroupModel": function() { return /* binding */ DynamicRadioGroupModel; },
/* harmony export */   "DynamicRatingModel": function() { return /* binding */ DynamicRatingModel; },
/* harmony export */   "DynamicSelectModel": function() { return /* binding */ DynamicSelectModel; },
/* harmony export */   "DynamicSliderModel": function() { return /* binding */ DynamicSliderModel; },
/* harmony export */   "DynamicSwitchModel": function() { return /* binding */ DynamicSwitchModel; },
/* harmony export */   "DynamicTemplateDirective": function() { return /* binding */ DynamicTemplateDirective; },
/* harmony export */   "DynamicTextAreaModel": function() { return /* binding */ DynamicTextAreaModel; },
/* harmony export */   "DynamicTimePickerModel": function() { return /* binding */ DynamicTimePickerModel; },
/* harmony export */   "HIDDEN_MATCHER": function() { return /* binding */ HIDDEN_MATCHER; },
/* harmony export */   "HIDDEN_MATCHER_PROVIDER": function() { return /* binding */ HIDDEN_MATCHER_PROVIDER; },
/* harmony export */   "MATCH_DISABLED": function() { return /* binding */ MATCH_DISABLED; },
/* harmony export */   "MATCH_ENABLED": function() { return /* binding */ MATCH_ENABLED; },
/* harmony export */   "MATCH_HIDDEN": function() { return /* binding */ MATCH_HIDDEN; },
/* harmony export */   "MATCH_OPTIONAL": function() { return /* binding */ MATCH_OPTIONAL; },
/* harmony export */   "MATCH_REQUIRED": function() { return /* binding */ MATCH_REQUIRED; },
/* harmony export */   "MATCH_VISIBLE": function() { return /* binding */ MATCH_VISIBLE; },
/* harmony export */   "METADATA_KEY_SERIALIZABLE": function() { return /* binding */ METADATA_KEY_SERIALIZABLE; },
/* harmony export */   "OR_OPERATOR": function() { return /* binding */ OR_OPERATOR; },
/* harmony export */   "REQUIRED_MATCHER": function() { return /* binding */ REQUIRED_MATCHER; },
/* harmony export */   "REQUIRED_MATCHER_PROVIDER": function() { return /* binding */ REQUIRED_MATCHER_PROVIDER; },
/* harmony export */   "getSerializables": function() { return /* binding */ getSerializables; },
/* harmony export */   "isAddressToken": function() { return /* binding */ isAddressToken; },
/* harmony export */   "isBoolean": function() { return /* binding */ isBoolean; },
/* harmony export */   "isContactField": function() { return /* binding */ isContactField; },
/* harmony export */   "isContactToken": function() { return /* binding */ isContactToken; },
/* harmony export */   "isDynamicFormControlEvent": function() { return /* binding */ isDynamicFormControlEvent; },
/* harmony export */   "isField": function() { return /* binding */ isField; },
/* harmony export */   "isFunction": function() { return /* binding */ isFunction; },
/* harmony export */   "isNumber": function() { return /* binding */ isNumber; },
/* harmony export */   "isObject": function() { return /* binding */ isObject; },
/* harmony export */   "isSectionToken": function() { return /* binding */ isSectionToken; },
/* harmony export */   "isString": function() { return /* binding */ isString; },
/* harmony export */   "maskFromString": function() { return /* binding */ maskFromString; },
/* harmony export */   "maskToString": function() { return /* binding */ maskToString; },
/* harmony export */   "parseReviver": function() { return /* binding */ parseReviver; },
/* harmony export */   "serializable": function() { return /* binding */ serializable; },
/* harmony export */   "serialize": function() { return /* binding */ serialize; },
/* harmony export */   "validate": function() { return /* binding */ validate; }
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 3786);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 76491);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 64674);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 81134);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 89919);
/* harmony import */ var reflect_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! reflect-metadata */ 43887);
/* harmony import */ var reflect_metadata__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(reflect_metadata__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 98636);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 33927);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 1143);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 1707);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 54364);









function isBoolean(value) {
    return typeof value === "boolean";
}
// tslint:disable-next-line:ban-types
function isFunction(value) {
    return typeof value === "function";
}
function isNumber(value) {
    return typeof value === "number";
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isString(value) {
    return typeof value === "string";
}

class DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        this.layoutService = layoutService;
        this.validationService = validationService;
        this._hasFocus = false;
    }
    get control() {
        const control = this.group.get(this.model.id);
        if (control === null) {
            throw new Error(`form group does not contain an abstract control with id ${this.model.id}`);
        }
        return control;
    }
    get id() {
        return this.layoutService.getElementId(this.model);
    }
    get hasFocus() {
        return this._hasFocus;
    }
    get isInvalid() {
        return this.control.invalid;
    }
    get isValid() {
        return this.control.valid;
    }
    get errorMessages() {
        return this.validationService.createErrorMessages(this.control, this.model);
    }
    get showErrorMessages() {
        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);
    }
    getClass(context, place, model = this.model) {
        var _a;
        const controlLayout = model === this.model ? this.layout : (_a = this.layoutService.findByModel(model, this.formLayout)) !== null && _a !== void 0 ? _a : model.layout;
        return this.layoutService.getClass(controlLayout, context, place);
    }
    onBlur($event) {
        if ($event instanceof Event) {
            $event.stopPropagation();
        }
        this._hasFocus = false;
        this.blur.emit($event);
    }
    onChange($event) {
        if ($event instanceof Event) {
            $event.stopPropagation();
        }
        this.change.emit($event);
    }
    onCustomEvent($event, type = null, bypass = false) {
        if (bypass) {
            this.customEvent.emit($event);
        }
        else if (isString(type)) {
            this.customEvent.emit({ customEvent: $event, customEventType: type });
        }
    }
    onFocus($event) {
        if ($event instanceof Event) {
            $event.stopPropagation();
        }
        this._hasFocus = true;
        this.focus.emit($event);
    }
}

class DynamicFormArrayComponent extends DynamicFormControlComponent {
    get array() {
        return this.control;
    }
    get startTemplate() {
        return this.layoutService.getStartTemplate(this.model, this.templates);
    }
    get endTemplate() {
        return this.layoutService.getEndTemplate(this.model, this.templates);
    }
    markForCheck() {
        if (this.components instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__.QueryList) {
            this.components.forEach(component => component.markForCheck());
        }
    }
}

class DynamicFormGroupComponent extends DynamicFormControlComponent {
    markForCheck() {
        if (this.components instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__.QueryList) {
            this.components.forEach(component => component.markForCheck());
        }
    }
}

const DYNAMIC_FORM_CONTROL_MAP_FN = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken("DYNAMIC_FORM_CONTROL_MAP_FN");
class DynamicFormComponentService {
    constructor(DYNAMIC_FORM_CONTROL_MAP_FN) {
        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;
        this.forms = [];
        this.formControls = {};
        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;
    }
    getForms() {
        return this.forms.values();
    }
    registerForm(component) {
        this.forms.push(component);
    }
    unregisterForm(component) {
        const indexOf = this.forms.indexOf(component);
        if (indexOf !== -1) {
            this.forms.splice(indexOf, 1);
        }
    }
    getFormControlRef(modelId, index) {
        const ref = this.formControls[modelId];
        if (isNumber(index)) {
            return Array.isArray(ref) ? ref[index] : undefined;
        }
        else {
            return ref;
        }
    }
    registerFormControl(model, ref, index) {
        if (isNumber(index)) { // threat model as array child
            const arrayRef = this.formControls[model.id] || [];
            if (Array.isArray(arrayRef)) {
                arrayRef.splice(index, 0, ref);
                this.formControls[model.id] = arrayRef;
            }
            else {
                console.warn(`registerFormControlRef is called with index for a non-array form control: ${model.id}`);
            }
        }
        else {
            this.formControls[model.id] = ref;
        }
    }
    unregisterFormControl(modelId, index) {
        const componentRef = this.formControls[modelId];
        if (isNumber(index)) {
            if (Array.isArray(componentRef) && componentRef[index] !== undefined) {
                componentRef.splice(index, 1);
            }
        }
        else if (componentRef !== undefined) {
            delete this.formControls[modelId];
        }
    }
    getCustomComponentType(model) {
        return isFunction(this.DYNAMIC_FORM_CONTROL_MAP_FN) ? this.DYNAMIC_FORM_CONTROL_MAP_FN(model) : null;
    }
}
DynamicFormComponentService.ɵfac = function DynamicFormComponentService_Factory(t) { return new (t || DynamicFormComponentService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DYNAMIC_FORM_CONTROL_MAP_FN, 8)); };
DynamicFormComponentService.ɵprov = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({ factory: function DynamicFormComponentService_Factory() { return new DynamicFormComponentService((0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(DYNAMIC_FORM_CONTROL_MAP_FN, 8)); }, token: DynamicFormComponentService, providedIn: "root" });
DynamicFormComponentService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [DYNAMIC_FORM_CONTROL_MAP_FN,] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional }] }
];

class DynamicFormComponent {
    constructor(changeDetectorRef, componentService) {
        this.changeDetectorRef = changeDetectorRef;
        this.componentService = componentService;
    }
    ngOnInit() {
        this.componentService.registerForm(this);
    }
    ngOnDestroy() {
        this.componentService.unregisterForm(this);
    }
    trackByFn(_index, model) {
        return model.id;
    }
    markForCheck() {
        this.changeDetectorRef.markForCheck();
        if (this.components instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__.QueryList) {
            this.components.forEach(component => component.markForCheck());
        }
    }
    detectChanges() {
        this.changeDetectorRef.detectChanges();
    }
    onBlur($event) {
        this.blur.emit($event);
    }
    onChange($event) {
        this.change.emit($event);
    }
    onFocus($event) {
        this.focus.emit($event);
    }
    onCustomEvent($event, customEventEmitter) {
        customEventEmitter.emit($event);
    }
}
DynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) { return new (t || DynamicFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormComponentService)); };
DynamicFormComponent.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({ type: DynamicFormComponent });
DynamicFormComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef },
    { type: DynamicFormComponentService }
];

var DynamicFormControlEventType;
(function (DynamicFormControlEventType) {
    DynamicFormControlEventType["Blur"] = "blur";
    DynamicFormControlEventType["Change"] = "change";
    DynamicFormControlEventType["Focus"] = "focus";
})(DynamicFormControlEventType || (DynamicFormControlEventType = {}));
function isDynamicFormControlEvent($event) {
    return isObject($event) && $event.hasOwnProperty("$event");
}

var DynamicFormHook;
(function (DynamicFormHook) {
    DynamicFormHook["Blur"] = "blur";
    DynamicFormHook["Change"] = "change";
    DynamicFormHook["Submit"] = "submit";
})(DynamicFormHook || (DynamicFormHook = {}));

const METADATA_KEY_SERIALIZABLE = "SERIALIZABLE";
function serializable(name) {
    return (target, key) => {
        Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, { key, name: name || key }, target, key);
    };
}
function getSerializables(target) {
    const serializables = [];
    for (const key in target) {
        const metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);
        if (metadata) {
            serializables.push(metadata);
        }
    }
    return serializables;
}
function serialize(target, prototype) {
    return getSerializables(prototype || target).reduce((prev, prop) => {
        prev[prop.name] = target[prop.key];
        return prev;
    }, {});
}

class DynamicFormControlModel {
    constructor(config, layout = null) {
        var _a, _b, _c, _d, _e, _f, _g;
        this.parent = null;
        this.asyncValidators = (_a = config.asyncValidators) !== null && _a !== void 0 ? _a : null;
        this.errorMessages = (_b = config.errorMessages) !== null && _b !== void 0 ? _b : null;
        this.hidden = isBoolean(config.hidden) ? config.hidden : false;
        this.id = config.id;
        this.label = (_c = config.label) !== null && _c !== void 0 ? _c : null;
        this.labelTooltip = (_d = config.labelTooltip) !== null && _d !== void 0 ? _d : null;
        this.controlTooltip = (_e = config.controlTooltip) !== null && _e !== void 0 ? _e : null;
        this.layout = layout;
        this.name = (_f = config.name) !== null && _f !== void 0 ? _f : config.id;
        this.relations = Array.isArray(config.relations) ? config.relations : [];
        this.updateOn = isString(config.updateOn) ? config.updateOn : null;
        this.validators = (_g = config.validators) !== null && _g !== void 0 ? _g : null;
        this.disabled$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject(isBoolean(config.disabled) ? config.disabled : false);
        this.disabled$.subscribe(disabled => this._disabled = disabled);
        this.disabledChanges = this.disabled$.asObservable();
    }
    get disabled() {
        return this.disabled$.getValue();
    }
    set disabled(disabled) {
        this.disabled$.next(disabled);
    }
    get hasErrorMessages() {
        return isObject(this.errorMessages);
    }
    toJSON() {
        return serialize(this);
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormControlModel.prototype, "asyncValidators", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable("disabled"),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFormControlModel.prototype, "_disabled", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormControlModel.prototype, "errorMessages", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFormControlModel.prototype, "hidden", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormControlModel.prototype, "id", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormControlModel.prototype, "label", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormControlModel.prototype, "labelTooltip", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormControlModel.prototype, "controlTooltip", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormControlModel.prototype, "layout", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormControlModel.prototype, "name", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicFormControlModel.prototype, "relations", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormControlModel.prototype, "updateOn", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormControlModel.prototype, "validators", void 0);

class DynamicFormValueControlModel extends DynamicFormControlModel {
    constructor(config, layout) {
        var _a, _b, _c;
        super(config, layout);
        this.additional = isObject(config.additional) ? config.additional : null;
        this.hint = (_a = config.hint) !== null && _a !== void 0 ? _a : null;
        this.required = isBoolean(config.required) ? config.required : false;
        this.tabIndex = (_b = config.tabIndex) !== null && _b !== void 0 ? _b : null;
        this.value$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.BehaviorSubject((_c = config.value) !== null && _c !== void 0 ? _c : null);
        this.value$.subscribe(value => this._value = value);
        this.valueChanges = this.value$.asObservable();
    }
    get value() {
        return this.value$.getValue();
    }
    set value(value) {
        this.value$.next(value);
    }
    getAdditional(key, defaultValue) {
        return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormValueControlModel.prototype, "additional", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormValueControlModel.prototype, "hint", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFormValueControlModel.prototype, "required", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicFormValueControlModel.prototype, "tabIndex", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable("value"),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormValueControlModel.prototype, "_value", void 0);

class DynamicFormArrayGroupModel {
    constructor(context, group = [], index = -1) {
        this.$implicit = this;
        this.context = context;
        this.group = group;
        this.index = index;
    }
    get parent() {
        return this.context;
    }
    get(index) {
        return this.group[index];
    }
    toJSON() {
        return serialize(this);
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicFormArrayGroupModel.prototype, "group", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicFormArrayGroupModel.prototype, "index", void 0);
const DYNAMIC_FORM_CONTROL_TYPE_ARRAY = "ARRAY";
class DynamicFormArrayModel extends DynamicFormControlModel {
    constructor(config, layout) {
        var _a, _b;
        super(config, layout);
        this.groups = [];
        this.type = DYNAMIC_FORM_CONTROL_TYPE_ARRAY;
        if (isFunction(config.groupFactory)) {
            this.groupFactory = config.groupFactory;
        }
        else {
            throw new Error("group factory function must be specified for DynamicFormArrayModel");
        }
        this.groupAsyncValidators = (_a = config.groupAsyncValidators) !== null && _a !== void 0 ? _a : null;
        this.groupPrototype = this.groupFactory();
        this.groupValidators = (_b = config.groupValidators) !== null && _b !== void 0 ? _b : null;
        this.initialCount = isNumber(config.initialCount) ? config.initialCount : 1;
        if (Array.isArray(config.groups)) {
            config.groups.forEach((arrayGroup, index) => {
                var _a;
                this.groups.push(new DynamicFormArrayGroupModel(this, arrayGroup.group, (_a = arrayGroup.index) !== null && _a !== void 0 ? _a : index));
            });
        }
        else {
            for (let index = 0; index < this.initialCount; index++) {
                this.addGroup();
            }
        }
    }
    updateGroupIndex() {
        this.groups.forEach((group, index) => group.index = index);
    }
    get size() {
        return this.groups.length;
    }
    get(index) {
        return this.groups[index];
    }
    addGroup() {
        return this.insertGroup(this.groups.length);
    }
    insertGroup(index) {
        let group = new DynamicFormArrayGroupModel(this, this.groupFactory());
        this.groups.splice(index, 0, group);
        this.updateGroupIndex();
        return group;
    }
    moveGroup(index, step) {
        this.groups.splice(index + step, 0, ...this.groups.splice(index, 1));
        this.updateGroupIndex();
    }
    removeGroup(index) {
        this.groups.splice(index, 1);
        this.updateGroupIndex();
    }
    clear() {
        this.groups.splice(0);
        this.updateGroupIndex();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormArrayModel.prototype, "groupAsyncValidators", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormArrayModel.prototype, "groupValidators", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicFormArrayModel.prototype, "groups", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicFormArrayModel.prototype, "initialCount", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicFormArrayModel.prototype, "groupPrototype", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormArrayModel.prototype, "type", void 0);

class DynamicCheckControlModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        var _a;
        super(config, layout);
        this.labelPosition = (_a = config.labelPosition) !== null && _a !== void 0 ? _a : null;
        this.checked = isBoolean(this.value) ? this.value : false;
    }
    get checked() {
        return this.value;
    }
    set checked(checked) {
        this.value = checked;
    }
    toggle() {
        this.checked = !this.checked;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicCheckControlModel.prototype, "labelPosition", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = "CHECKBOX";
class DynamicCheckboxModel extends DynamicCheckControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;
        this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicCheckboxModel.prototype, "indeterminate", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicCheckboxModel.prototype, "type", void 0);

class DynamicInputControlModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        var _a, _b, _c, _d;
        super(config, layout);
        this.autoComplete = (_a = config.autoComplete) !== null && _a !== void 0 ? _a : "on";
        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;
        this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;
        this.minLength = isNumber(config.minLength) ? config.minLength : null;
        this.placeholder = (_b = config.placeholder) !== null && _b !== void 0 ? _b : "";
        this.prefix = (_c = config.prefix) !== null && _c !== void 0 ? _c : null;
        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;
        this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;
        this.suffix = (_d = config.suffix) !== null && _d !== void 0 ? _d : null;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputControlModel.prototype, "autoComplete", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicInputControlModel.prototype, "autoFocus", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicInputControlModel.prototype, "maxLength", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicInputControlModel.prototype, "minLength", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputControlModel.prototype, "placeholder", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputControlModel.prototype, "prefix", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicInputControlModel.prototype, "readOnly", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicInputControlModel.prototype, "spellCheck", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputControlModel.prototype, "suffix", void 0);

function maskToString(mask) {
    if (isString(mask)) {
        return mask;
    }
    else if (mask instanceof RegExp) {
        return mask.toString();
    }
    else if (Array.isArray(mask)) {
        return mask.map(value => maskToString(value));
    }
    return null;
}
function maskFromString(mask) {
    if (isString(mask)) {
        const isRegExp = mask.startsWith("/") && mask.endsWith("/");
        return isRegExp ? new RegExp(mask.slice(1, mask.length - 1)) : mask;
    }
    else if (Array.isArray(mask)) {
        return mask.map(value => maskFromString(value));
    }
    return null;
}
function parseReviver(_key, value) {
    const regexDateISO = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*))(?:Z|([+\-])([\d|:]*))?$/;
    return isString(value) && regexDateISO.test(value) ? new Date(value) : value;
}

const DYNAMIC_FORM_CONTROL_TYPE_INPUT = "INPUT";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = "color";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE = "date";
//export const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = "datetime";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = "datetime-local";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = "email";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = "file";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = "month";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = "number";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = "password";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = "range";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = "search";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = "tel";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = "text";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = "time";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = "url";
const DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = "week";
class DynamicInputModel extends DynamicInputControlModel {
    constructor(config, layout) {
        var _a, _b, _c, _d;
        super(config, layout);
        this.files = null;
        this.list$ = null;
        this._list = null;
        this._listId = null;
        this.type = DYNAMIC_FORM_CONTROL_TYPE_INPUT;
        this.accept = (_a = config.accept) !== null && _a !== void 0 ? _a : null;
        this.inputType = (_b = config.inputType) !== null && _b !== void 0 ? _b : DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT;
        this.mask = (_c = config.mask) !== null && _c !== void 0 ? _c : null;
        this.max = config.max !== undefined ? config.max : null;
        this.min = config.min !== undefined ? config.min : null;
        this.multiple = isBoolean(config.multiple) ? config.multiple : null;
        this.pattern = (_d = config.pattern) !== null && _d !== void 0 ? _d : null;
        this.step = isNumber(config.step) ? config.step : null;
        if (config.list !== undefined) {
            this.list = config.list;
            this._listId = `${this.id}List`;
        }
    }
    get listId() {
        return this._listId;
    }
    get hasList() {
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(this.list$);
    }
    set list(list) {
        if (Array.isArray(list)) {
            this._list = list;
            this.list$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(this._list);
        }
        else if ((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(list)) {
            this.list$ = list.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.tap)(list => this._list = list));
        }
        else {
            this._list = null;
            this.list$ = null;
        }
    }
    toJSON() {
        const json = super.toJSON();
        if (this.mask !== null) {
            json.mask = isFunction(this.mask) ? this.mask : maskToString(this.mask);
        }
        return json;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputModel.prototype, "accept", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputModel.prototype, "inputType", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicInputModel.prototype, "mask", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicInputModel.prototype, "max", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicInputModel.prototype, "min", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicInputModel.prototype, "multiple", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputModel.prototype, "pattern", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicInputModel.prototype, "step", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable("list"),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicInputModel.prototype, "_list", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicInputModel.prototype, "type", void 0);

var DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT;
(function (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT) {
    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT["Start"] = "START";
    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT["End"] = "END";
})(DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT || (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT = {}));
class DynamicTemplateDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
        this.align = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;
        this.as = null;
    }
}
DynamicTemplateDirective.ɵfac = function DynamicTemplateDirective_Factory(t) { return new (t || DynamicTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.TemplateRef)); };
DynamicTemplateDirective.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({ type: DynamicTemplateDirective, selectors: [["ng-template", "modelId", ""], ["ng-template", "modelType", ""]], inputs: { align: "align", as: "as", index: "index", modelId: "modelId", modelType: "modelType" } });
DynamicTemplateDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.TemplateRef }
];
DynamicTemplateDirective.propDecorators = {
    align: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    as: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    index: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    modelId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    modelType: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }]
};

class DynamicFormLayoutService {
    findById(id, formLayout) {
        if (isObject(formLayout)) {
            for (const key of Object.keys(formLayout)) {
                if (key === id) {
                    return formLayout[key];
                }
            }
        }
        return null;
    }
    findByModel(model, formLayout) {
        let controlLayout = null;
        if (isObject(formLayout)) {
            for (const key of Object.keys(formLayout)) {
                key.split(",").forEach(substring => {
                    const selector = substring.trim();
                    if (selector === model.id || selector === model.type) {
                        controlLayout = formLayout[key];
                    }
                });
            }
        }
        return controlLayout;
    }
    filterTemplatesByModel(model, templates) {
        const filterCallback = (template) => {
            return template.modelId === model.id || template.modelType === model.type;
        };
        if (templates instanceof _angular_core__WEBPACK_IMPORTED_MODULE_1__.QueryList) {
            return templates.filter(filterCallback);
        }
        else if (Array.isArray(templates)) {
            return templates.filter(filterCallback);
        }
        return [];
    }
    getAlignedTemplate(model, templates, alignment) {
        return this.filterTemplatesByModel(model, templates)
            .find(template => template.as === null && template.align === alignment);
    }
    /*
    getIndexedTemplates(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] | undefined {
        return this.filterTemplatesByModel(model, templates).filter(template => template.as === null);
    }
    */
    getStartTemplate(model, templates) {
        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.Start);
    }
    getEndTemplate(model, templates) {
        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End);
    }
    getClass(layout, context, place) {
        if (isObject(layout) && layout.hasOwnProperty(context)) {
            const config = layout[context];
            if (config.hasOwnProperty(place)) {
                return config[place];
            }
        }
        return "";
    }
    getHostClass(layout) {
        const keys = ["element", "grid"];
        let cls = "";
        if (isObject(layout)) {
            keys.forEach(key => {
                if (isObject(layout[key]) && isString(layout[key].host)) {
                    cls = cls + ` ${layout[key].host}`;
                }
            });
        }
        return cls;
    }
    getElementId(model) {
        let id = model.id;
        let parent = model.parent;
        while (parent !== null) {
            if (parent instanceof DynamicFormArrayGroupModel) {
                id = `${parent.context.id}-${parent.index}-${model.id}`;
                break;
            }
            parent = parent.parent;
        }
        return id;
    }
}
DynamicFormLayoutService.ɵfac = function DynamicFormLayoutService_Factory(t) { return new (t || DynamicFormLayoutService)(); };
DynamicFormLayoutService.ɵprov = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({ factory: function DynamicFormLayoutService_Factory() { return new DynamicFormLayoutService(); }, token: DynamicFormLayoutService, providedIn: "root" });

const DYNAMIC_VALIDATORS = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken("DYNAMIC_VALIDATORS");

const DEFAULT_ERROR_STATE_MATCHER = (control, model, hasFocus) => {
    return control.touched && !hasFocus;
};
const CHANGE_ERROR_STATE_MATCHER = (control, model, hasFocus) => {
    return (model.updateOn === DynamicFormHook.Change || model.updateOn === null) ? control.dirty : control.touched && !hasFocus;
};
const DYNAMIC_ERROR_MESSAGES_MATCHER = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken("DYNAMIC_ERROR_MESSAGES_MATCHER");

class DynamicFormValidationService {
    constructor(_NG_VALIDATORS, _NG_ASYNC_VALIDATORS, _DYNAMIC_VALIDATORS, _DYNAMIC_ERROR_MESSAGES_MATCHER) {
        this._NG_VALIDATORS = _NG_VALIDATORS;
        this._NG_ASYNC_VALIDATORS = _NG_ASYNC_VALIDATORS;
        this._DYNAMIC_VALIDATORS = _DYNAMIC_VALIDATORS;
        this._DYNAMIC_ERROR_MESSAGES_MATCHER = _DYNAMIC_ERROR_MESSAGES_MATCHER;
    }
    getValidatorFn(validatorName, validatorArgs = null, validatorsToken = this._NG_VALIDATORS) {
        let validatorFn;
        if (_angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators.hasOwnProperty(validatorName)) { // Built-in Angular Validators
            validatorFn = _angular_forms__WEBPACK_IMPORTED_MODULE_7__.Validators[validatorName];
        }
        else { // Custom Validators
            if (this._DYNAMIC_VALIDATORS && this._DYNAMIC_VALIDATORS.has(validatorName)) {
                validatorFn = this._DYNAMIC_VALIDATORS.get(validatorName);
            }
            else if (validatorsToken) {
                validatorFn = validatorsToken.find(validator => validator.name === validatorName);
            }
        }
        if (validatorFn === undefined) { // throw when no validator could be resolved
            throw new Error(`validator "${validatorName}" is not provided via NG_VALIDATORS, NG_ASYNC_VALIDATORS or DYNAMIC_FORM_VALIDATORS`);
        }
        if (validatorArgs !== null) {
            return validatorFn(validatorArgs);
        }
        return validatorFn;
    }
    getValidatorFns(validatorsConfig, validatorsToken = this._NG_VALIDATORS) {
        let validatorFns = [];
        if (isObject(validatorsConfig)) {
            validatorFns = Object.keys(validatorsConfig).map(validatorConfigKey => {
                const validatorConfigValue = validatorsConfig[validatorConfigKey];
                if (this.isValidatorDescriptor(validatorConfigValue)) {
                    const descriptor = validatorConfigValue;
                    return this.getValidatorFn(descriptor.name, descriptor.args, validatorsToken);
                }
                return this.getValidatorFn(validatorConfigKey, validatorConfigValue, validatorsToken);
            });
        }
        return validatorFns;
    }
    getValidator(validatorName, validatorArgs = null) {
        return this.getValidatorFn(validatorName, validatorArgs);
    }
    getAsyncValidator(validatorName, validatorArgs = null) {
        return this.getValidatorFn(validatorName, validatorArgs, this._NG_ASYNC_VALIDATORS);
    }
    getValidators(validatorsConfig) {
        return this.getValidatorFns(validatorsConfig);
    }
    getAsyncValidators(asyncValidatorsConfig) {
        return this.getValidatorFns(asyncValidatorsConfig, this._NG_ASYNC_VALIDATORS);
    }
    updateValidators(validatorsConfig, control, model) {
        model.validators = validatorsConfig;
        if (validatorsConfig === null) {
            control.clearValidators();
        }
        else {
            control.setValidators(this.getValidators(validatorsConfig));
        }
        control.updateValueAndValidity();
    }
    updateAsyncValidators(asyncValidatorsConfig, control, model) {
        model.asyncValidators = asyncValidatorsConfig;
        if (asyncValidatorsConfig === null) {
            control.clearAsyncValidators();
        }
        else {
            control.setAsyncValidators(this.getAsyncValidators(asyncValidatorsConfig));
        }
        control.updateValueAndValidity();
    }
    showErrorMessages(control, model, hasFocus) {
        const precondition = control.invalid && model.hasErrorMessages;
        const matcher = this._DYNAMIC_ERROR_MESSAGES_MATCHER ? this._DYNAMIC_ERROR_MESSAGES_MATCHER(control, model, hasFocus) :
            DEFAULT_ERROR_STATE_MATCHER(control, model, hasFocus);
        return precondition && matcher;
    }
    parseErrorMessageConfig(template, model, error = null) {
        return template.replace(/{{\s*(.+?)\s*}}/mg, (_match, expression) => {
            let propertySource = model;
            let propertyName = expression;
            if (expression.indexOf("validator.") >= 0 && error) {
                propertySource = error;
                propertyName = expression.replace("validator.", "");
            }
            return propertySource[propertyName] !== null && propertySource[propertyName] !== undefined ?
                propertySource[propertyName] : null;
        });
    }
    createErrorMessages(control, model) {
        const messages = [];
        if (model.hasErrorMessages) {
            const messagesConfig = model.errorMessages;
            Object.keys(control.errors || {}).forEach(validationErrorKey => {
                let messageKey = validationErrorKey;
                if (validationErrorKey === "minlength" || validationErrorKey === "maxlength") {
                    messageKey = messageKey.replace("length", "Length");
                }
                if (messagesConfig.hasOwnProperty(messageKey)) {
                    const validationError = control.getError(validationErrorKey);
                    const messageTemplate = messagesConfig[messageKey];
                    messages.push(this.parseErrorMessageConfig(messageTemplate, model, validationError));
                }
            });
        }
        return messages;
    }
    isFormHook(value) {
        return isString(value) && Object.values(DynamicFormHook).includes(value);
    }
    isValidatorDescriptor(value) {
        if (isObject(value)) {
            return value.hasOwnProperty("name") && value.hasOwnProperty("args");
        }
        return false;
    }
}
DynamicFormValidationService.ɵfac = function DynamicFormValidationService_Factory(t) { return new (t || DynamicFormValidationService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_VALIDATORS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_ASYNC_VALIDATORS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DYNAMIC_VALIDATORS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DYNAMIC_ERROR_MESSAGES_MATCHER, 8)); };
DynamicFormValidationService.ɵprov = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({ factory: function DynamicFormValidationService_Factory() { return new DynamicFormValidationService((0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_VALIDATORS, 8), (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_ASYNC_VALIDATORS, 8), (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(DYNAMIC_VALIDATORS, 8), (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(DYNAMIC_ERROR_MESSAGES_MATCHER, 8)); }, token: DynamicFormValidationService, providedIn: "root" });
DynamicFormValidationService.ctorParameters = () => [
    { type: Array, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_VALIDATORS,] }] },
    { type: Array, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_ASYNC_VALIDATORS,] }] },
    { type: Map, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [DYNAMIC_VALIDATORS,] }] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [DYNAMIC_ERROR_MESSAGES_MATCHER,] }] }
];

const DYNAMIC_FORM_CONTROL_TYPE_GROUP = "GROUP";
class DynamicFormGroupModel extends DynamicFormControlModel {
    constructor(config, layout) {
        var _a;
        super(config, layout);
        this.group = [];
        this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;
        this.group = Array.isArray(config.group) ? config.group : [];
        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;
    }
    get(index) {
        return this.group[index];
    }
    set(index, controlModel) {
        this.group[index] = controlModel;
    }
    add(controlModel) {
        this.group.push(controlModel);
    }
    insert(index, controlModel) {
        this.group.splice(index, 0, controlModel);
    }
    move(index, step) {
        this.group.splice(index + step, 0, ...this.group.splice(index, 1));
    }
    remove(index) {
        this.group.splice(index, 1);
    }
    size() {
        return this.group.length;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicFormGroupModel.prototype, "group", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormGroupModel.prototype, "legend", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormGroupModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = "CHECKBOX_GROUP";
class DynamicCheckboxGroupModel extends DynamicFormGroupModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;
    }
    check(...indices) {
        indices.forEach(index => this.group[index].checked = true);
    }
    uncheck(...indices) {
        indices.forEach(index => this.group[index].checked = false);
    }
    checkAll() {
        this.group.forEach(model => model.checked = true);
    }
    uncheckAll() {
        this.group.forEach(model => model.checked = false);
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicCheckboxGroupModel.prototype, "group", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicCheckboxGroupModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = "COLORPICKER";
class DynamicColorPickerModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;
        this.format = isString(config.format) ? config.format : null;
        this.inline = isBoolean(config.inline) ? config.inline : false;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicColorPickerModel.prototype, "format", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicColorPickerModel.prototype, "inline", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicColorPickerModel.prototype, "type", void 0);

class DynamicDateControlModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        var _a, _b, _c, _d;
        super(config, layout);
        this.format = (_a = config.format) !== null && _a !== void 0 ? _a : null;
        this.max = (_b = config.max) !== null && _b !== void 0 ? _b : null;
        this.min = (_c = config.min) !== null && _c !== void 0 ? _c : null;
        this.placeholder = (_d = config.placeholder) !== null && _d !== void 0 ? _d : null;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDateControlModel.prototype, "format", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicDateControlModel.prototype, "max", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicDateControlModel.prototype, "min", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDateControlModel.prototype, "placeholder", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER = "DATEPICKER";
class DynamicDatePickerModel extends DynamicDateControlModel {
    constructor(config, layout) {
        var _a, _b, _c;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER;
        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;
        this.focusedDate = (_a = config.focusedDate) !== null && _a !== void 0 ? _a : null;
        this.inline = isBoolean(config.inline) ? config.inline : false;
        this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;
        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;
        this.toggleIcon = isString(config.toggleIcon) ? config.toggleIcon : null;
        this.toggleLabel = isString(config.toggleLabel) ? config.toggleLabel : null;
        this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicDatePickerModel.prototype, "autoFocus", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicDatePickerModel.prototype, "focusedDate", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicDatePickerModel.prototype, "inline", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDatePickerModel.prototype, "prefix", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicDatePickerModel.prototype, "readOnly", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDatePickerModel.prototype, "suffix", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDatePickerModel.prototype, "toggleIcon", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDatePickerModel.prototype, "toggleLabel", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicDatePickerModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_EDITOR = "EDITOR";
class DynamicEditorModel extends DynamicInputControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_EDITOR;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicEditorModel.prototype, "type", void 0);

class DynamicFileControlModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.multiple = isBoolean(config.multiple) ? config.multiple : false;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFileControlModel.prototype, "multiple", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = "FILE_UPLOAD";
class DynamicFileUploadModel extends DynamicFileControlModel {
    constructor(config, layout) {
        var _a, _b;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;
        this.accept = Array.isArray(config.accept) ? config.accept : null;
        this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;
        this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;
        this.minSize = isNumber(config.minSize) ? config.minSize : null;
        this.removeUrl = (_a = config.removeUrl) !== null && _a !== void 0 ? _a : null;
        this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;
        this.url = (_b = config.url) !== null && _b !== void 0 ? _b : null;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicFileUploadModel.prototype, "accept", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFileUploadModel.prototype, "autoUpload", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicFileUploadModel.prototype, "maxSize", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicFileUploadModel.prototype, "minSize", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFileUploadModel.prototype, "removeUrl", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFileUploadModel.prototype, "showFileList", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFileUploadModel.prototype, "url", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFileUploadModel.prototype, "type", void 0);

class DynamicFormOption {
    constructor(config) {
        var _a;
        this.disabled = isBoolean(config.disabled) ? config.disabled : false;
        this.label = (_a = config.label) !== null && _a !== void 0 ? _a : null;
        this.value = config.value;
    }
    get text() {
        return this.label;
    }
    set text(text) {
        this.label = text;
    }
    toJSON() {
        return serialize(this);
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicFormOption.prototype, "disabled", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicFormOption.prototype, "label", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Object)
], DynamicFormOption.prototype, "value", void 0);
class DynamicOptionControlModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this._options = [];
        this.options = config.options;
    }
    updateOptions$() {
        this.options$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(this.options);
    }
    set options(options) {
        if (Array.isArray(options)) {
            this._options = options.map(optionConfig => new DynamicFormOption(optionConfig));
            this.updateOptions$();
        }
        else if ((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.isObservable)(options)) {
            this.options$ = options.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.map)(optionsConfig => {
                this._options = optionsConfig.map(optionConfig => new DynamicFormOption(optionConfig));
                return this._options;
            }));
        }
        else {
            this.updateOptions$();
        }
    }
    get options() {
        return this._options;
    }
    add(optionConfig) {
        return this.insert(this.options.length, optionConfig);
    }
    get(index) {
        return this.options[index];
    }
    insert(index, optionConfig) {
        const option = new DynamicFormOption(optionConfig);
        this.options.splice(index, 0, option);
        this.updateOptions$();
        return option;
    }
    remove(...indices) {
        indices.forEach(index => this.options.splice(index, 1));
        this.updateOptions$();
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable("options"),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Array)
], DynamicOptionControlModel.prototype, "_options", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP = "RADIO_GROUP";
class DynamicRadioGroupModel extends DynamicOptionControlModel {
    constructor(config, layout) {
        var _a;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP;
        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;
    }
    select(index) {
        this.value = this.get(index).value;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicRadioGroupModel.prototype, "legend", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicRadioGroupModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_RATING = "RATING";
class DynamicRatingModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_RATING;
        this.max = isNumber(config.max) ? config.max : 10;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicRatingModel.prototype, "max", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicRatingModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_SELECT = "SELECT";
class DynamicSelectModel extends DynamicOptionControlModel {
    constructor(config, layout) {
        var _a, _b, _c;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_SELECT;
        this.compareWithFn = isFunction(config.compareWithFn) ? config.compareWithFn : Object.is;
        this.filterable = isBoolean(config.filterable) ? config.filterable : false;
        this.multiple = isBoolean(config.multiple) ? config.multiple : false;
        this.placeholder = (_a = config.placeholder) !== null && _a !== void 0 ? _a : "";
        this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;
        this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;
    }
    select(...indices) {
        this.value = this.multiple ? indices.map(index => this.get(index).value) : this.get(indices[0]).value;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicSelectModel.prototype, "filterable", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicSelectModel.prototype, "multiple", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSelectModel.prototype, "placeholder", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSelectModel.prototype, "prefix", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSelectModel.prototype, "suffix", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSelectModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_SLIDER = "SLIDER";
class DynamicSliderModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;
        this.max = isNumber(config.max) ? config.max : 10;
        this.min = isNumber(config.min) ? config.min : 0;
        this.step = isNumber(config.step) ? config.step : 1;
        this.vertical = isBoolean(config.vertical) ? config.vertical : false;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicSliderModel.prototype, "max", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicSliderModel.prototype, "min", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicSliderModel.prototype, "step", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicSliderModel.prototype, "vertical", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSliderModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_SWITCH = "SWITCH";
class DynamicSwitchModel extends DynamicCheckControlModel {
    constructor(config, layout) {
        var _a, _b;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;
        this.offLabel = (_a = config.offLabel) !== null && _a !== void 0 ? _a : null;
        this.onLabel = (_b = config.onLabel) !== null && _b !== void 0 ? _b : null;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSwitchModel.prototype, "offLabel", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSwitchModel.prototype, "onLabel", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicSwitchModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = "TEXTAREA";
const DYNAMIC_FORM_TEXTAREA_WRAP_HARD = "hard";
const DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = "soft";
class DynamicTextAreaModel extends DynamicInputControlModel {
    constructor(config, layout) {
        var _a;
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;
        this.cols = isNumber(config.cols) ? config.cols : 20;
        this.rows = isNumber(config.rows) ? config.rows : 2;
        this.wrap = (_a = config.wrap) !== null && _a !== void 0 ? _a : DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicTextAreaModel.prototype, "cols", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Number)
], DynamicTextAreaModel.prototype, "rows", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicTextAreaModel.prototype, "wrap", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicTextAreaModel.prototype, "type", void 0);

const DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = "TIMEPICKER";
class DynamicTimePickerModel extends DynamicDateControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;
        this.meridian = isBoolean(config.meridian) ? config.meridian : false;
        this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;
    }
}
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicTimePickerModel.prototype, "meridian", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", Boolean)
], DynamicTimePickerModel.prototype, "showSeconds", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    serializable(),
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__metadata)("design:type", String)
], DynamicTimePickerModel.prototype, "type", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormComponentService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
                args: [DYNAMIC_FORM_CONTROL_MAP_FN]
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }] }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef }, { type: DynamicFormComponentService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicTemplateDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
        args: [{
                selector: "ng-template[modelId],ng-template[modelType]"
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.TemplateRef }]; }, { align: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], as: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], index: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], modelId: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], modelType: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormLayoutService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], null, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormValidationService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: Array, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
                args: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_VALIDATORS]
            }] }, { type: Array, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
                args: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__.NG_ASYNC_VALIDATORS]
            }] }, { type: Map, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
                args: [DYNAMIC_VALIDATORS]
            }] }, { type: undefined, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
                args: [DYNAMIC_ERROR_MESSAGES_MATCHER]
            }] }]; }, null); })();

class DynamicFormService {
    constructor(componentService, validationService) {
        this.componentService = componentService;
        this.validationService = validationService;
    }
    createAbstractControlOptions(validatorsConfig = null, asyncValidatorsConfig = null, updateOn = null) {
        return {
            asyncValidators: asyncValidatorsConfig !== null ? this.validationService.getAsyncValidators(asyncValidatorsConfig) : null,
            validators: validatorsConfig !== null ? this.validationService.getValidators(validatorsConfig) : null,
            updateOn: updateOn !== null && this.validationService.isFormHook(updateOn) ? updateOn : DynamicFormHook.Change
        };
    }
    createFormArray(formArrayModel) {
        const controls = [];
        const options = this.createAbstractControlOptions(formArrayModel.validators, formArrayModel.asyncValidators, formArrayModel.updateOn);
        for (let index = 0; index < formArrayModel.size; index++) {
            const groupModel = formArrayModel.get(index);
            const groupOptions = this.createAbstractControlOptions(formArrayModel.groupValidators, formArrayModel.groupAsyncValidators, formArrayModel.updateOn);
            controls.push(this.createFormGroup(groupModel.group, groupOptions, groupModel));
        }
        return new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormArray(controls, options);
    }
    createFormGroup(formModel, options = null, parent = null) {
        const controls = {};
        formModel.forEach(model => {
            model.parent = parent;
            switch (model.type) {
                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:
                    controls[model.id] = this.createFormArray(model);
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:
                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:
                    const groupModel = model;
                    const groupOptions = this.createAbstractControlOptions(groupModel.validators, groupModel.asyncValidators, groupModel.updateOn);
                    controls[model.id] = this.createFormGroup(groupModel.group, groupOptions, groupModel);
                    break;
                default:
                    const controlModel = model;
                    const controlState = { value: controlModel.value, disabled: controlModel.disabled };
                    const controlOptions = this.createAbstractControlOptions(controlModel.validators, controlModel.asyncValidators, controlModel.updateOn);
                    controls[model.id] = new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl(controlState, controlOptions);
            }
        });
        return new _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormGroup(controls, options);
    }
    getPathSegment(model) {
        return model instanceof DynamicFormArrayGroupModel ? model.index.toString() : model.id;
    }
    getPath(model, join = false) {
        const path = [this.getPathSegment(model)];
        let parent = model.parent;
        while (parent) {
            path.unshift(this.getPathSegment(parent));
            parent = parent.parent;
        }
        return join ? path.join(".") : path;
    }
    addFormGroupControl(formGroup, formModel, ...models) {
        if (formModel instanceof DynamicFormGroupModel) {
            this.insertFormGroupControl(formModel.size(), formGroup, formModel, ...models);
        }
        else {
            const model = formModel;
            this.insertFormGroupControl(model.length, formGroup, model, ...models);
        }
    }
    moveFormGroupControl(index, step, formModel) {
        if (formModel instanceof DynamicFormGroupModel) {
            formModel.move(index, step);
        }
        else {
            const model = formModel;
            model.splice(index + step, 0, ...model.splice(index, 1));
        }
    }
    insertFormGroupControl(index, formGroup, formModel, ...models) {
        const parent = formModel instanceof DynamicFormGroupModel ? formModel : null;
        const controls = this.createFormGroup(models, null, parent).controls;
        Object.keys(controls).forEach((controlName, idx) => {
            const controlModel = models[idx];
            if (formModel instanceof DynamicFormGroupModel) {
                formModel.insert(index, controlModel);
            }
            else {
                formModel.splice(index, 0, controlModel);
            }
            formGroup.addControl(controlName, controls[controlName]);
        });
    }
    removeFormGroupControl(index, formGroup, formModel) {
        if (formModel instanceof DynamicFormGroupModel) {
            formGroup.removeControl(formModel.get(index).id);
            formModel.remove(index);
        }
        else {
            formGroup.removeControl(formModel[index].id);
            formModel.splice(index, 1);
        }
    }
    addFormArrayGroup(formArray, formArrayModel) {
        const groupModel = formArrayModel.addGroup();
        formArray.push(this.createFormGroup(groupModel.group, null, groupModel));
    }
    insertFormArrayGroup(index, formArray, formArrayModel) {
        const groupModel = formArrayModel.insertGroup(index);
        formArray.insert(index, this.createFormGroup(groupModel.group, null, groupModel));
    }
    moveFormArrayGroup(index, step, formArray, formArrayModel) {
        const newIndex = index + step;
        const moveUp = step >= 0;
        if ((index >= 0 && index < formArrayModel.size) && (newIndex >= 0 && newIndex < formArrayModel.size)) {
            const movingGroups = [];
            for (let i = moveUp ? index : newIndex; i <= (moveUp ? newIndex : index); i++) {
                movingGroups.push(formArray.at(i));
            }
            movingGroups.forEach((formControl, idx) => {
                let position;
                if (moveUp) {
                    position = idx === 0 ? newIndex : index + idx - 1;
                }
                else {
                    position = idx === movingGroups.length - 1 ? newIndex : newIndex + idx + 1;
                }
                formArray.setControl(position, formControl);
            });
            formArrayModel.moveGroup(index, step);
        }
        else {
            throw new Error(`form array group cannot be moved due to index or new index being out of bounds`);
        }
    }
    removeFormArrayGroup(index, formArray, formArrayModel) {
        formArray.removeAt(index);
        formArrayModel.removeGroup(index);
    }
    clearFormArray(formArray, formArrayModel) {
        formArray.clear();
        formArrayModel.clear();
    }
    findById(id, formModel) {
        let result = null;
        const findByIdFn = (modelId, groupModel) => {
            for (const controlModel of groupModel) {
                if (controlModel.id === modelId) {
                    result = controlModel;
                    break;
                }
                if (controlModel instanceof DynamicFormGroupModel) {
                    findByIdFn(modelId, controlModel.group);
                }
            }
        };
        findByIdFn(id, formModel);
        return result;
    }
    findModelById(id, formModel) {
        return this.findById(id, formModel);
    }
    findControlByModel(model, group) {
        return group.root.get(this.getPath(model, true));
    }
    detectChanges(formComponent) {
        if (formComponent instanceof DynamicFormComponent) {
            formComponent.markForCheck();
            formComponent.detectChanges();
        }
        else {
            for (const form of this.componentService.getForms()) {
                form.markForCheck();
                form.detectChanges();
            }
        }
    }
    fromJSON(json) {
        const formModelJSON = isString(json) ? JSON.parse(json, parseReviver) : json;
        const formModel = [];
        formModelJSON.forEach((model) => {
            var _a;
            const layout = (_a = model.layout) !== null && _a !== void 0 ? _a : null;
            switch (model.type) {
                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:
                    const formArrayModel = model;
                    if (Array.isArray(formArrayModel.groups)) {
                        formArrayModel.groups.forEach((groupModel) => {
                            groupModel.group = this.fromJSON(groupModel.group);
                        });
                    }
                    formArrayModel.groupFactory = () => {
                        return this.fromJSON(formArrayModel.groupPrototype);
                    };
                    formModel.push(new DynamicFormArrayModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:
                    formModel.push(new DynamicCheckboxModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:
                    model.group = this.fromJSON(model.group);
                    formModel.push(new DynamicCheckboxGroupModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER:
                    formModel.push(new DynamicColorPickerModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:
                    formModel.push(new DynamicDatePickerModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:
                    formModel.push(new DynamicEditorModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD:
                    model.value = null;
                    formModel.push(new DynamicFileUploadModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:
                    model.group = this.fromJSON(model.group);
                    formModel.push(new DynamicFormGroupModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_INPUT:
                    const inputModel = model;
                    if (inputModel.mask !== null) {
                        if (!(inputModel.mask instanceof Function)) {
                            inputModel.mask = maskFromString(inputModel.mask);
                        }
                    }
                    formModel.push(new DynamicInputModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:
                    formModel.push(new DynamicRadioGroupModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_RATING:
                    formModel.push(new DynamicRatingModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_SELECT:
                    formModel.push(new DynamicSelectModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:
                    formModel.push(new DynamicSliderModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:
                    formModel.push(new DynamicSwitchModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:
                    formModel.push(new DynamicTextAreaModel(model, layout));
                    break;
                case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:
                    formModel.push(new DynamicTimePickerModel(model, layout));
                    break;
                default:
                    throw new Error(`unknown form control model type defined on JSON object with id "${model.id}"`);
            }
        });
        return formModel;
    }
}
DynamicFormService.ɵfac = function DynamicFormService_Factory(t) { return new (t || DynamicFormService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DynamicFormComponentService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DynamicFormValidationService)); };
DynamicFormService.ɵprov = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({ factory: function DynamicFormService_Factory() { return new DynamicFormService((0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(DynamicFormComponentService), (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(DynamicFormValidationService)); }, token: DynamicFormService, providedIn: "root" });
DynamicFormService.ctorParameters = () => [
    { type: DynamicFormComponentService },
    { type: DynamicFormValidationService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: DynamicFormComponentService }, { type: DynamicFormValidationService }]; }, null); })();

const MATCH_DISABLED = "DISABLED";
const MATCH_ENABLED = "ENABLED";
const MATCH_HIDDEN = "HIDDEN";
const MATCH_OPTIONAL = "OPTIONAL";
const MATCH_REQUIRED = "REQUIRED";
const MATCH_VISIBLE = "VISIBLE";
const AND_OPERATOR = "AND";
const OR_OPERATOR = "OR";
const DYNAMIC_MATCHERS = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken("DYNAMIC_MATCHERS");
const DISABLED_MATCHER = {
    match: MATCH_DISABLED,
    opposingMatch: MATCH_ENABLED,
    onChange(hasMatch, model) {
        model.disabled = hasMatch;
    }
};
const HIDDEN_MATCHER = {
    match: MATCH_HIDDEN,
    opposingMatch: MATCH_VISIBLE,
    onChange(hasMatch, model) {
        model.hidden = hasMatch;
    }
};
const REQUIRED_MATCHER = {
    match: MATCH_REQUIRED,
    opposingMatch: MATCH_OPTIONAL,
    onChange(hasMatch, model, control, injector) {
        let validatorsConfig = null;
        if (hasMatch) {
            validatorsConfig = isObject(model.validators) ? Object.assign(Object.assign({}, model.validators), { required: null }) : { required: null };
        }
        else {
            if (isObject(model.validators)) {
                delete model.validators.required;
                validatorsConfig = Object.assign({}, model.validators);
            }
        }
        injector.get(DynamicFormValidationService).updateValidators(validatorsConfig, control, model);
        injector.get(DynamicFormService).detectChanges();
    }
};
const DISABLED_MATCHER_PROVIDER = {
    provide: DYNAMIC_MATCHERS,
    useValue: DISABLED_MATCHER,
    multi: true
};
const HIDDEN_MATCHER_PROVIDER = {
    provide: DYNAMIC_MATCHERS,
    useValue: HIDDEN_MATCHER,
    multi: true
};
const REQUIRED_MATCHER_PROVIDER = {
    provide: DYNAMIC_MATCHERS,
    useValue: REQUIRED_MATCHER,
    multi: true
};
const DYNAMIC_MATCHER_PROVIDERS = [DISABLED_MATCHER_PROVIDER, HIDDEN_MATCHER_PROVIDER, REQUIRED_MATCHER_PROVIDER];

class DynamicFormRelationService {
    constructor(MATCHERS, injector) {
        this.MATCHERS = MATCHERS;
        this.injector = injector;
    }
    getRelatedFormControls(model, group) {
        const conditionReducer = (controls, condition) => {
            var _a;
            const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;
            if (!controls.hasOwnProperty(path)) {
                const control = condition.rootPath ? group.root.get(condition.rootPath) : group.get(condition.id);
                control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormControl ? controls[path] = control : console.warn(`No related form control with id ${condition.id} could be found`);
            }
            return controls;
        };
        const relationReducer = (controls, relation) => relation.when.reduce(conditionReducer, controls);
        return model.relations.reduce(relationReducer, {});
    }
    findRelationByMatcher(relations, matcher) {
        return relations.find(relation => [matcher.match, matcher.opposingMatch].includes(relation.match));
    }
    matchesCondition(relation, relatedFormControls, matcher) {
        var _a;
        const operator = (_a = relation.operator) !== null && _a !== void 0 ? _a : OR_OPERATOR;
        return relation.when.reduce((hasAlreadyMatched, condition, index) => {
            var _a;
            const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;
            let relatedFormControl;
            for (const [key, control] of Object.entries(relatedFormControls)) {
                if (key === path) {
                    relatedFormControl = control;
                    break;
                }
            }
            if (relatedFormControl && relation.match === matcher.match) {
                if (index > 0 && operator === AND_OPERATOR && !hasAlreadyMatched) {
                    return false;
                }
                if (index > 0 && operator === OR_OPERATOR && hasAlreadyMatched) {
                    return true;
                }
                return condition.value === relatedFormControl.value || condition.status === relatedFormControl.status;
            }
            if (relatedFormControl && relation.match === matcher.opposingMatch) {
                if (index > 0 && operator === AND_OPERATOR && hasAlreadyMatched) {
                    return true;
                }
                if (index > 0 && operator === OR_OPERATOR && !hasAlreadyMatched) {
                    return false;
                }
                return !(condition.value === relatedFormControl.value || condition.status === relatedFormControl.status);
            }
            return false;
        }, false);
    }
    subscribeRelations(model, group, control) {
        const relatedFormControls = this.getRelatedFormControls(model, group);
        const subscriptions = [];
        Object.values(relatedFormControls).forEach(relatedControl => {
            const valueChanges = relatedControl.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.startWith)(relatedControl.value));
            const statusChanges = relatedControl.statusChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.startWith)(relatedControl.status));
            subscriptions.push((0,rxjs__WEBPACK_IMPORTED_MODULE_10__.merge)(valueChanges, statusChanges).subscribe(() => {
                this.MATCHERS.forEach(matcher => {
                    const relation = this.findRelationByMatcher(model.relations, matcher);
                    if (relation !== undefined) {
                        const hasMatch = this.matchesCondition(relation, relatedFormControls, matcher);
                        matcher.onChange(hasMatch, model, control, this.injector);
                    }
                });
            }));
        });
        return subscriptions;
    }
}
DynamicFormRelationService.ɵfac = function DynamicFormRelationService_Factory(t) { return new (t || DynamicFormRelationService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DYNAMIC_MATCHERS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector)); };
DynamicFormRelationService.ɵprov = (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({ factory: function DynamicFormRelationService_Factory() { return new DynamicFormRelationService((0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(DYNAMIC_MATCHERS, 8), (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__.INJECTOR)); }, token: DynamicFormRelationService, providedIn: "root" });
DynamicFormRelationService.ctorParameters = () => [
    { type: Array, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject, args: [DYNAMIC_MATCHERS,] }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormRelationService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: Array, decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional
            }, {
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
                args: [DYNAMIC_MATCHERS]
            }] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector }]; }, null); })();

class DynamicFormControlContainerComponent {
    constructor(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService) {
        this.changeDetectorRef = changeDetectorRef;
        this.componentFactoryResolver = componentFactoryResolver;
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.componentService = componentService;
        this.relationService = relationService;
        this._hasFocus = false;
        this.context = null;
        this.componentSubscriptions = [];
        this.subscriptions = [];
    }
    ngOnChanges(changes) {
        const groupChange = changes.group;
        const layoutChange = changes.layout;
        const modelChange = changes.model;
        if (layoutChange || modelChange) {
            this.onLayoutOrModelChange();
        }
        if (modelChange) {
            this.onModelChange();
        }
        if (groupChange || modelChange) {
            this.onGroupOrModelChange();
        }
    }
    ngOnDestroy() {
        this.destroyFormControlComponent();
        this.unsubscribe();
    }
    get id() {
        return this.layoutService.getElementId(this.model);
    }
    get hasFocus() {
        return this._hasFocus;
    }
    get isInvalid() {
        return this.control.invalid;
    }
    get isValid() {
        return this.control.valid;
    }
    get errorMessages() {
        return this.validationService.createErrorMessages(this.control, this.model);
    }
    get showErrorMessages() {
        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);
    }
    get hasLabel() {
        return isString(this.model.label);
    }
    get hasHint() {
        return isString(this.model.hint);
    }
    get hint() {
        var _a;
        return (_a = this.model.hint) !== null && _a !== void 0 ? _a : null;
    }
    get isCheckbox() {
        return this.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;
    }
    get templates() {
        return this.inputTemplateList !== undefined ? this.inputTemplateList : this.contentTemplateList;
    }
    get startTemplate() {
        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?
            this.layoutService.getStartTemplate(this.model, this.templates) : undefined;
    }
    get endTemplate() {
        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?
            this.layoutService.getEndTemplate(this.model, this.templates) : undefined;
    }
    getClass(context, place) {
        return this.layoutService.getClass(this.controlLayout, context, place);
    }
    markForCheck() {
        this.changeDetectorRef.markForCheck();
        const component = this.componentRef && this.componentRef.instance;
        if (component && (component instanceof DynamicFormGroupComponent || component instanceof DynamicFormArrayComponent)) {
            component.markForCheck();
        }
    }
    createFormControlComponent() {
        const componentType = this.componentType;
        if (componentType !== null) {
            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);
            this.componentViewContainerRef.clear();
            this.componentRef = this.componentViewContainerRef.createComponent(componentFactory);
            const component = this.componentRef.instance;
            component.formLayout = this.layout;
            component.group = this.group;
            component.layout = this.controlLayout;
            component.model = this.model;
            if (this.templates) {
                component.templates = this.templates;
            }
            this.componentSubscriptions.push(component.blur.subscribe(($event) => this.onBlur($event)));
            this.componentSubscriptions.push(component.change.subscribe(($event) => this.onChange($event)));
            this.componentSubscriptions.push(component.focus.subscribe(($event) => this.onFocus($event)));
            if (component.customEvent !== undefined) {
                this.componentSubscriptions.push(component.customEvent.subscribe(($event) => this.onCustomEvent($event)));
            }
            this.registerFormControlComponentRef(this.componentRef);
        }
    }
    destroyFormControlComponent() {
        if (this.componentRef) {
            this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());
            this.componentSubscriptions = [];
            this.unregisterFormControlComponentRef();
            this.componentRef.destroy();
        }
    }
    createDynamicFormControlEvent($event, type) {
        return { $event, context: this.context, control: this.control, group: this.group, model: this.model, type };
    }
    unsubscribe() {
        // this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());
        // this.componentSubscriptions = [];
        this.subscriptions.forEach(subscription => subscription.unsubscribe());
        this.subscriptions = [];
    }
    onControlValueChanges(value) {
        if (this.model instanceof DynamicFormValueControlModel && this.model.value !== value) {
            this.model.value = value;
        }
    }
    onModelValueUpdates(value) {
        if (this.control.value !== value) {
            this.control.setValue(value);
        }
    }
    onModelDisabledUpdates(disabled) {
        disabled ? this.control.disable() : this.control.enable();
    }
    onLayoutOrModelChange() {
        var _a;
        this.controlLayout = (_a = this.layoutService.findByModel(this.model, this.layout)) !== null && _a !== void 0 ? _a : this.model.layout;
        this.klass = `${Array.isArray(this.hostClass) ? this.hostClass.join(" ") : ""} ${this.layoutService.getHostClass(this.controlLayout)}`;
    }
    onModelChange() {
        this.destroyFormControlComponent();
        this.createFormControlComponent();
    }
    onGroupOrModelChange() {
        if (this.model) {
            this.unsubscribe();
            if (this.group) {
                this.control = this.group.get(this.model.id);
                this.subscriptions.push(this.control.valueChanges.subscribe(value => this.onControlValueChanges(value)));
            }
            this.subscriptions.push(this.model.disabledChanges.subscribe(value => this.onModelDisabledUpdates(value)));
            if (this.model instanceof DynamicFormValueControlModel) {
                const model = this.model;
                this.subscriptions.push(model.valueChanges.subscribe(value => this.onModelValueUpdates(value)));
            }
            if (this.model.relations.length > 0) {
                this.subscriptions.push(...this.relationService.subscribeRelations(this.model, this.group, this.control));
            }
        }
    }
    onChange($event) {
        var _a;
        if ($event instanceof Event) { // native HTML5 change event
            if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {
                const model = this.model;
                if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {
                    const inputElement = (_a = $event.target) !== null && _a !== void 0 ? _a : $event.srcElement;
                    model.files = inputElement.files;
                }
            }
            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));
        }
        else if (isDynamicFormControlEvent($event)) { // event bypass
            this.change.emit($event);
        }
        else { // custom library value change event
            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));
        }
    }
    onBlur($event) {
        if (isDynamicFormControlEvent($event)) { // event bypass
            this.blur.emit($event);
        }
        else { // native HTML 5 or UI library blur event
            this._hasFocus = false;
            this.blur.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Blur));
        }
    }
    onFocus($event) {
        if (isDynamicFormControlEvent($event)) { // event bypass
            this.focus.emit($event);
        }
        else { // native HTML 5 or UI library focus event
            this._hasFocus = true;
            this.focus.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Focus));
        }
    }
    onCustomEvent($event) {
        const emitter = this.customEvent;
        if (isDynamicFormControlEvent($event)) { // child event bypass
            emitter.emit($event);
        }
        else { // native UI library custom event
            emitter.emit(this.createDynamicFormControlEvent($event.customEvent, $event.customEventType));
        }
    }
    registerFormControlComponentRef(ref) {
        if (this.context instanceof DynamicFormArrayGroupModel) {
            this.componentService.registerFormControl(this.model, ref, this.context.index);
        }
        else {
            this.componentService.registerFormControl(this.model, ref);
        }
    }
    unregisterFormControlComponentRef() {
        if (this.context instanceof DynamicFormArrayGroupModel) {
            this.componentService.unregisterFormControl(this.model.id, this.context.index);
        }
        else {
            this.componentService.unregisterFormControl(this.model.id);
        }
    }
}
DynamicFormControlContainerComponent.ɵfac = function DynamicFormControlContainerComponent_Factory(t) { return new (t || DynamicFormControlContainerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormValidationService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormComponentService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormRelationService)); };
DynamicFormControlContainerComponent.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({ type: DynamicFormControlContainerComponent, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]] });
DynamicFormControlContainerComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver },
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService },
    { type: DynamicFormComponentService },
    { type: DynamicFormRelationService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormControlContainerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver }, { type: DynamicFormLayoutService }, { type: DynamicFormValidationService }, { type: DynamicFormComponentService }, { type: DynamicFormRelationService }]; }, null); })();

class DynamicFormControlWithTemplateComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
    }
    ngAfterViewInit() {
        this.layoutService
            .filterTemplatesByModel(this.model, this.templates)
            .forEach(template => this.bindTemplate(template));
    }
    bindTemplate(template) {
        if (isString(template.as) && this.templateDirectives.has(template.as)) {
            const property = this.templateDirectives.get(template.as);
            this.viewChild[property] = this.mapTemplate(template);
        }
    }
}
DynamicFormControlWithTemplateComponent.ɵfac = function DynamicFormControlWithTemplateComponent_Factory(t) { return new (t || DynamicFormControlWithTemplateComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DynamicFormValidationService)); };
DynamicFormControlWithTemplateComponent.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({ type: DynamicFormControlWithTemplateComponent, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]] });
DynamicFormControlWithTemplateComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService },
    { type: DynamicFormValidationService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormControlWithTemplateComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive
    }], function () { return [{ type: DynamicFormLayoutService }, { type: DynamicFormValidationService }]; }, null); })();

class DynamicListDirective {
    constructor(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    ngAfterViewInit() {
        if (isString(this.listId)) {
            this.renderer.setAttribute(this.elementRef.nativeElement, "list", this.listId);
        }
    }
}
DynamicListDirective.ɵfac = function DynamicListDirective_Factory(t) { return new (t || DynamicListDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2)); };
DynamicListDirective.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({ type: DynamicListDirective, selectors: [["", "dynamicList", ""]], inputs: { listId: ["dynamicList", "listId"] } });
DynamicListDirective.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2 }
];
DynamicListDirective.propDecorators = {
    listId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input, args: ["dynamicList",] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicListDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
        args: [{
                selector: "[dynamicList]"
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2 }]; }, { listId: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ["dynamicList"]
        }] }); })();

const AUTOCOMPLETE_OFF = "off";
const AUTOCOMPLETE_ON = "on";
const AUTOFILL_TOKEN_BILLING = "billing";
const AUTOFILL_TOKEN_SHIPPING = "shipping";
const AUTOFILL_TOKENS_ADDRESS = [AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_SHIPPING];
const AUTOFILL_TOKEN_HOME = "home";
const AUTOFILL_TOKEN_WORK = "work";
const AUTOFILL_TOKEN_MOBILE = "mobile";
const AUTOFILL_TOKEN_FAX = "fax";
const AUTOFILL_TOKEN_PAGER = "pager";
const AUTOFILL_TOKENS_CONTACT = [
    AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_WORK
];
const AUTOFILL_FIELD_STREET_ADDRESS = "street-address";
const AUTOFILL_FIELD_ADDRESS_LINE_1 = "address-line1";
const AUTOFILL_FIELD_ADDRESS_LINE_2 = "address-line2";
const AUTOFILL_FIELD_ADDRESS_LINE_3 = "address-line3";
const AUTOFILL_FIELD_ADDRESS_LEVEL_4 = "address-level4";
const AUTOFILL_FIELD_ADDRESS_LEVEL_3 = "address-level3";
const AUTOFILL_FIELD_ADDRESS_LEVEL_2 = "address-level2";
const AUTOFILL_FIELD_ADDRESS_LEVEL_1 = "address-level1";
const AUTOFILL_FIELD_NAME = "name";
const AUTOFILL_FIELD_HONORIFIC_PREFIX = "honorific-prefix";
const AUTOFILL_FIELD_GIVEN_NAME = "given-name";
const AUTOFILL_FIELD_ADDITIONAL_NAME = "additional-name";
const AUTOFILL_FIELD_FAMILY_NAME = "family-name";
const AUTOFILL_FIELD_HONORIFIC_SUFFIX = "honorific-suffix";
const AUTOFILL_FIELD_NICKNAME = "nickname";
const AUTOFILL_FIELD_USERNAME = "username";
const AUTOFILL_FIELD_NEW_PASSWORD = "new-password";
const AUTOFILL_FIELD_CURRENT_PASSWORD = "current-password";
const AUTOFILL_FIELD_ORGANIZATION_TITLE = "organization-title";
const AUTOFILL_FIELD_ORGANIZATION = "organization";
const AUTOFILL_FIELD_COUNTRY = "country";
const AUTOFILL_FIELD_COUNTRY_NAME = "country-name";
const AUTOFILL_FIELD_POSTAL_CODE = "postal-code";
const AUTOFILL_FIELD_CC_NAME = "cc-name";
const AUTOFILL_FIELD_CC_GIVEN_NAME = "cc-given-name";
const AUTOFILL_FIELD_CC_ADDITIONAL_NAME = "cc-additional-name";
const AUTOFILL_FIELD_CC_FAMILY_NAME = "cc-family-name";
const AUTOFILL_FIELD_CC_NUMBER = "cc-number";
const AUTOFILL_FIELD_CC_EXP = "cc-exp";
const AUTOFILL_FIELD_CC_EXP_MONTH = "cc-exp-month";
const AUTOFILL_FIELD_CC_EXP_YEAR = "cc-exp-year";
const AUTOFILL_FIELD_CC_CSC = "cc-csc";
const AUTOFILL_FIELD_CC_TYPE = "cc-type";
const AUTOFILL_FIELD_TRANSACTION_CURRENCY = "transaction-currency";
const AUTOFILL_FIELD_TRANSACTION_AMOUNT = "transaction-amount";
const AUTOFILL_FIELD_LANGUAGE = "language";
const AUTOFILL_FIELD_BDAY = "bday";
const AUTOFILL_FIELD_BDAY_DAY = "bday-day";
const AUTOFILL_FIELD_BDAY_MONTH = "bday-month";
const AUTOFILL_FIELD_BDAY_YEAR = "bday-year";
const AUTOFILL_FIELD_SEX = "sex";
const AUTOFILL_FIELD_URL = "url";
const AUTOFILL_FIELD_PHOTO = "photo";
const AUTOFILL_FIELDS = [
    AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2,
    AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LEVEL_3,
    AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_NAME,
    AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_ADDITIONAL_NAME,
    AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_USERNAME,
    AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_ORGANIZATION_TITLE,
    AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_POSTAL_CODE,
    AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_ADDITIONAL_NAME,
    AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH,
    AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_TRANSACTION_CURRENCY,
    AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY,
    AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_PHOTO
];
const AUTOFILL_FIELD_TEL = "tel";
const AUTOFILL_FIELD_TEL_COUNTRY_CODE = "tel-country-code";
const AUTOFILL_FIELD_TEL_NATIONAL = "tel-national";
const AUTOFILL_FIELD_TEL_AREA_CODE = "tel-area-code";
const AUTOFILL_FIELD_TEL_LOCAL = "tel-local";
const AUTOFILL_FIELD_TEL_LOCAL_PREFIX = "tel-local-prefix";
const AUTOFILL_FIELD_TEL_LOCAL_SUFFIX = "tel-local-suffix";
const AUTOFILL_FIELD_TEL_LOCAL_EXTENSION = "tel-extension";
const AUTOFILL_FIELD_EMAIL = "email";
const AUTOFILL_FIELD_IMPP = "impp";
const AUTOFILL_FIELDS_CONTACT = [
    AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TEL_AREA_CODE,
    AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX,
    AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_IMPP
];
function isAddressToken(token) {
    return AUTOFILL_TOKENS_ADDRESS.indexOf(token) > -1;
}
function isContactField(token) {
    return AUTOFILL_FIELDS_CONTACT.indexOf(token) > -1;
}
function isContactToken(token) {
    return AUTOFILL_TOKENS_CONTACT.indexOf(token) > -1;
}
function isField(token) {
    return AUTOFILL_FIELDS.indexOf(token) > -1;
}
function isSectionToken(token) {
    return token.startsWith("section-");
}
function validate(tokens) {
    const toExpression = (total, currentValue) => `${total}|${currentValue}`;
    const tokensAddress = AUTOFILL_TOKENS_ADDRESS.reduce(toExpression);
    const tokensContact = AUTOFILL_TOKENS_CONTACT.reduce(toExpression);
    const fields = AUTOFILL_FIELDS.reduce(toExpression);
    const fieldsContact = AUTOFILL_FIELDS_CONTACT.reduce(toExpression);
    const regex = new RegExp(`^(section-\\w+\\s{1})?((${tokensAddress}){1}\\s)?((${fields}){1}|((${tokensContact}){1}\\s{1}(${fieldsContact})))$`);
    return regex.test(tokens);
}

class DynamicFormsCoreModule {
    /*@deprecated*/
    static forRoot() {
        return {
            ngModule: DynamicFormsCoreModule,
            providers: [
                DynamicFormService,
                DynamicFormLayoutService,
                DynamicFormValidationService,
                DynamicFormComponentService,
                DynamicFormRelationService
            ]
        };
    }
}
DynamicFormsCoreModule.ɵfac = function DynamicFormsCoreModule_Factory(t) { return new (t || DynamicFormsCoreModule)(); };
DynamicFormsCoreModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({ type: DynamicFormsCoreModule });
DynamicFormsCoreModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({ imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_11__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormsCoreModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
        args: [{
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_11__.CommonModule,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule
                ],
                declarations: [
                    DynamicListDirective,
                    DynamicTemplateDirective
                ],
                exports: [
                    DynamicListDirective,
                    DynamicTemplateDirective
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](DynamicFormsCoreModule, { declarations: function () { return [DynamicListDirective, DynamicTemplateDirective]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_11__.CommonModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule]; }, exports: function () { return [DynamicListDirective, DynamicTemplateDirective]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */





/***/ }),

/***/ 81029:
/*!***********************************************************************************!*\
  !*** ./node_modules/@ng-dynamic-forms/ui-ionic/__ivy_ngcc__/fesm2015/ui-ionic.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DynamicFormsIonicUIModule": function() { return /* binding */ DynamicFormsIonicUIModule; },
/* harmony export */   "DynamicIonicCheckboxComponent": function() { return /* binding */ DynamicIonicCheckboxComponent; },
/* harmony export */   "DynamicIonicDateTimeComponent": function() { return /* binding */ DynamicIonicDateTimeComponent; },
/* harmony export */   "DynamicIonicFormArrayComponent": function() { return /* binding */ DynamicIonicFormArrayComponent; },
/* harmony export */   "DynamicIonicFormComponent": function() { return /* binding */ DynamicIonicFormComponent; },
/* harmony export */   "DynamicIonicFormControlContainerComponent": function() { return /* binding */ DynamicIonicFormControlContainerComponent; },
/* harmony export */   "DynamicIonicFormGroupComponent": function() { return /* binding */ DynamicIonicFormGroupComponent; },
/* harmony export */   "DynamicIonicInputComponent": function() { return /* binding */ DynamicIonicInputComponent; },
/* harmony export */   "DynamicIonicRadioGroupComponent": function() { return /* binding */ DynamicIonicRadioGroupComponent; },
/* harmony export */   "DynamicIonicRangeComponent": function() { return /* binding */ DynamicIonicRangeComponent; },
/* harmony export */   "DynamicIonicSelectComponent": function() { return /* binding */ DynamicIonicSelectComponent; },
/* harmony export */   "DynamicIonicTextAreaComponent": function() { return /* binding */ DynamicIonicTextAreaComponent; },
/* harmony export */   "DynamicIonicToggleComponent": function() { return /* binding */ DynamicIonicToggleComponent; },
/* harmony export */   "ionicUIFormControlMapFn": function() { return /* binding */ ionicUIFormControlMapFn; }
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2316);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic/angular */ 7602);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 1707);
/* harmony import */ var _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-dynamic-forms/core */ 57636);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 54364);
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! angular2-text-mask */ 29230);













const _c0 = ["ionCheckbox"];
const _c1 = function (a0, a1) { return [a0, a1]; };
function DynamicIonicCheckboxComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
const _c2 = ["ionDatetime"];
function DynamicIonicDateTimeComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
function DynamicIonicFormGroupComponent_legend_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "legend", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.legend, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"]);
} }
function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dynamic-ionic-form-control", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("blur", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_blur_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r4); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r3.onBlur($event); })("change", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_change_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r4); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r5.onChange($event); })("focus", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_focus_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r4); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r6.onFocus($event); })("ionEvent", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_ionEvent_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r4); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r7.onCustomEvent($event, null, true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const _model_r2 = ctx.$implicit;
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("group", ctx_r1.control)("hidden", _model_r2.hidden)("layout", ctx_r1.formLayout)("model", _model_r2)("templates", ctx_r1.templates)("hostClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](6, _c1, ctx_r1.getClass("element", "children"), ctx_r1.getClass("grid", "children")));
} }
const _c3 = ["ionInput"];
function DynamicIonicInputComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
const _c4 = ["ionRadioGroup"];
function DynamicIonicRadioGroupComponent_ion_list_header_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-list-header");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r1.model.label);
} }
function DynamicIonicRadioGroupComponent_ion_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "ion-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](3, "ion-radio", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const option_r3 = ctx.$implicit;
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", ctx_r2.getClass("element", "option"));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](option_r3.label);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", option_r3.value);
} }
const _c5 = ["ionRange"];
function DynamicIonicRangeComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
const _c6 = ["ionSelect"];
function DynamicIonicSelectComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 5);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
function DynamicIonicSelectComponent_ion_select_option_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-select-option", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const option_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", option_r3.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](option_r3.label);
} }
const _c7 = ["ionToggle"];
function DynamicIonicToggleComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
const _c8 = ["ionTextArea"];
function DynamicIonicTextAreaComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "ion-label", 4);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx_r0.model.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"])("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx_r0.getClass("element", "label"), ctx_r0.getClass("grid", "label")));
} }
const _c9 = ["componentViewContainer"];
function DynamicIonicFormControlContainerComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainer"](0);
} }
function DynamicIonicFormControlContainerComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainer"](0);
} }
const _c10 = function (a0, a1, a2) { return [a0, a1, a2]; };
const _c11 = ["*"];
function DynamicIonicFormArrayComponent_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainer"](0);
} }
function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dynamic-ionic-form-control", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("blur", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_blur_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r8); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2); return ctx_r7.onBlur($event); })("change", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_change_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r8); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2); return ctx_r9.onChange($event); })("focus", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_focus_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r8); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2); return ctx_r10.onFocus($event); })("ionEvent", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_ionEvent_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r8); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2); return ctx_r11.onCustomEvent($event, null, true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const _model_r6 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    const groupModel_r1 = ctx_r12.$implicit;
    const idx_r2 = ctx_r12.index;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("context", groupModel_r1)("group", ctx_r4.array.at(idx_r2))("hidden", _model_r6.hidden)("layout", ctx_r4.formLayout)("model", _model_r6)("templates", ctx_r4.templates)("hostClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](7, _c1, ctx_r4.getClass("element", "children"), ctx_r4.getClass("grid", "children")));
} }
function DynamicIonicFormArrayComponent_div_2_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainer"](0);
} }
function DynamicIonicFormArrayComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicFormArrayComponent_div_2_ng_container_1_Template, 1, 0, "ng-container", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template, 1, 10, "dynamic-ionic-form-control", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, DynamicIonicFormArrayComponent_div_2_ng_container_3_Template, 1, 0, "ng-container", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const groupModel_r1 = ctx.$implicit;
    const idx_r2 = ctx.index;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroupName", idx_r2)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](7, _c1, ctx_r0.getClass("element", "group"), ctx_r0.getClass("grid", "group")));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.startTemplate == null ? null : ctx_r0.startTemplate.templateRef)("ngTemplateOutletContext", groupModel_r1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", groupModel_r1.group);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.endTemplate == null ? null : ctx_r0.endTemplate.templateRef)("ngTemplateOutletContext", groupModel_r1);
} }
function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dynamic-ionic-form-control", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("blur", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_blur_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r2.onBlur($event); })("change", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_change_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r3); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r4.onChange($event); })("focus", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_focus_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r3); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r5.onFocus($event); })("ionEvent", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_ionEvent_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r3); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r6.onCustomEvent($event, ctx_r6.ionEvent); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const controlModel_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("group", ctx_r0.group)("hidden", controlModel_r1.hidden)("layout", ctx_r0.layout)("model", controlModel_r1)("templates", ctx_r0.templates);
} }
class DynamicIonicCheckboxComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicCheckboxComponent.ɵfac = function DynamicIonicCheckboxComponent_Factory(t) { return new (t || DynamicIonicCheckboxComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicCheckboxComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicCheckboxComponent, selectors: [["dynamic-ionic-checkbox"]], viewQuery: function DynamicIonicCheckboxComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c0, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionCheckbox = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 7, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], [3, "checked", "color", "formControlName", "id", "ngClass", "ionBlur", "ionChange", "ionFocus"], ["ionCheckbox", ""], [3, "innerHTML", "ngClass"]], template: function DynamicIonicCheckboxComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicCheckboxComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-checkbox", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicCheckboxComponent_Template_ion_checkbox_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionChange", function DynamicIonicCheckboxComponent_Template_ion_checkbox_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicCheckboxComponent_Template_ion_checkbox_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("checked", ctx.model.checked)("color", ctx.model.getAdditional("color", undefined))("formControlName", ctx.model.id)("id", ctx.id)("ngClass", ctx.getClass("element", "control"));
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonCheckbox, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.BooleanValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel], encapsulation: 2 });
DynamicIonicCheckboxComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicCheckboxComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionCheckbox: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionCheckbox", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicCheckboxComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-checkbox",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-checkbox #ionCheckbox\n                  [checked]=\"model.checked\"\n                  [color]=\"model.getAdditional('color', undefined)\"\n                  [formControlName]=\"model.id\"\n                  [id]=\"id\"\n                  [ngClass]=\"getClass('element', 'control')\"\n                  (ionBlur)=\"onBlur($event)\"\n                  (ionChange)=\"onChange($event)\"\n                  (ionFocus)=\"onFocus($event)\"></ion-checkbox>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionCheckbox: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionCheckbox", { static: true }]
        }] }); })();

class DynamicIonicDateTimeComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.customEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicDateTimeComponent.ɵfac = function DynamicIonicDateTimeComponent_Factory(t) { return new (t || DynamicIonicDateTimeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicDateTimeComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicDateTimeComponent, selectors: [["dynamic-ionic-datetime"]], viewQuery: function DynamicIonicDateTimeComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c2, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionDatetime = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", customEvent: "customEvent", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 22, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], [3, "cancelText", "dayNames", "dayShortNames", "dayValues", "displayFormat", "doneText", "formControlName", "hourValues", "id", "max", "min", "minuteValues", "monthNames", "monthShortNames", "monthValues", "ngClass", "pickerFormat", "pickerOptions", "placeholder", "yearValues", "ionBlur", "ionCancel", "ionChange", "ionFocus"], ["ionDatetime", ""], [3, "innerHTML", "ngClass"]], template: function DynamicIonicDateTimeComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicDateTimeComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-datetime", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionCancel", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionCancel_2_listener($event) { return ctx.onCustomEvent($event, "ionCancel"); })("ionChange", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("cancelText", ctx.model.getAdditional("cancelText", "Cancel"))("dayNames", ctx.model.getAdditional("dayNames", undefined))("dayShortNames", ctx.model.getAdditional("dayShortNames", undefined))("dayValues", ctx.model.getAdditional("dayValues", undefined))("displayFormat", ctx.model.format || "MMM D, YYYY")("doneText", ctx.model.getAdditional("doneText", "Done"))("formControlName", ctx.model.id)("hourValues", ctx.model.getAdditional("hourValues", undefined))("id", ctx.id)("max", ctx.model.max || undefined)("min", ctx.model.min || undefined)("minuteValues", ctx.model.getAdditional("minuteValues", undefined))("monthNames", ctx.model.getAdditional("monthNames", undefined))("monthShortNames", ctx.model.getAdditional("monthShortNames", undefined))("monthValues", ctx.model.getAdditional("monthValues", undefined))("ngClass", ctx.getClass("element", "control"))("pickerFormat", ctx.model.getAdditional("pickerFormat", "MMM D, YYYY"))("pickerOptions", ctx.model.getAdditional("pickerOptions", undefined))("placeholder", ctx.model.placeholder)("yearValues", ctx.model.getAdditional("yearValues", undefined));
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonDatetime, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.SelectValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel], encapsulation: 2 });
DynamicIonicDateTimeComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicDateTimeComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    customEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionDatetime: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionDatetime", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicDateTimeComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-datetime",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-datetime #ionDatetime\n                  [cancelText]=\"model.getAdditional('cancelText', 'Cancel')\"\n                  [dayNames]=\"model.getAdditional('dayNames', undefined)\"\n                  [dayShortNames]=\"model.getAdditional('dayShortNames', undefined)\"\n                  [dayValues]=\"model.getAdditional('dayValues', undefined)\"\n                  [displayFormat]=\"model.format || 'MMM D, YYYY'\"\n                  [doneText]=\"model.getAdditional('doneText', 'Done')\"\n                  [formControlName]=\"model.id\"\n                  [hourValues]=\"model.getAdditional('hourValues', undefined)\"\n                  [id]=\"id\"\n                  [max]=\"model.max || undefined\"\n                  [min]=\"model.min || undefined\"\n                  [minuteValues]=\"model.getAdditional('minuteValues', undefined)\"\n                  [monthNames]=\"model.getAdditional('monthNames', undefined)\"\n                  [monthShortNames]=\"model.getAdditional('monthShortNames', undefined)\"\n                  [monthValues]=\"model.getAdditional('monthValues', undefined)\"\n                  [ngClass]=\"getClass('element', 'control')\"\n                  [pickerFormat]=\"model.getAdditional('pickerFormat', 'MMM D, YYYY')\"\n                  [pickerOptions]=\"model.getAdditional('pickerOptions', undefined)\"\n                  [placeholder]=\"model.placeholder\"\n                  [yearValues]=\"model.getAdditional('yearValues', undefined)\"\n                  (ionBlur)=\"onBlur($event)\"\n                  (ionCancel)=\"onCustomEvent($event, 'ionCancel')\"\n                  (ionChange)=\"onChange($event)\"\n                  (ionFocus)=\"onFocus($event)\"></ion-datetime>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], customEvent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionDatetime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionDatetime", { static: true }]
        }] }); })();

class DynamicIonicFormGroupComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormGroupComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.customEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicFormGroupComponent.ɵfac = function DynamicIonicFormGroupComponent_Factory(t) { return new (t || DynamicIonicFormGroupComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicFormGroupComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicFormGroupComponent, selectors: [["dynamic-ionic-form-group"]], viewQuery: function DynamicIonicFormGroupComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](DynamicIonicFormControlContainerComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.components = _t);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model", templates: "templates" }, outputs: { blur: "blur", change: "change", customEvent: "customEvent", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 7, consts: [[3, "formGroup"], [3, "formGroupName", "id", "name", "ngClass"], [3, "innerHTML", 4, "ngIf"], [3, "group", "hidden", "layout", "model", "templates", "hostClass", "blur", "change", "focus", "ionEvent", 4, "ngFor", "ngForOf"], [3, "innerHTML"], [3, "group", "hidden", "layout", "model", "templates", "hostClass", "blur", "change", "focus", "ionEvent"]], template: function DynamicIonicFormGroupComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0, 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "fieldset", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicIonicFormGroupComponent_legend_2_Template, 1, 1, "legend", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template, 1, 9, "dynamic-ionic-form-control", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroupName", ctx.model.id)("id", ctx.id)("name", ctx.model.name)("ngClass", ctx.getClass("element", "control"));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.legend);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.model.group);
    } }, directives: function () { return [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, DynamicIonicFormControlContainerComponent]; }, encapsulation: 2 });
DynamicIonicFormGroupComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicFormGroupComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    templates: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    customEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    components: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChildren, args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(() => DynamicIonicFormControlContainerComponent),] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicFormGroupComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-form-group",
                template: "<ng-container [formGroup]=\"group\">\n\n    <fieldset [formGroupName]=\"model.id\"\n              [id]=\"id\"\n              [name]=\"model.name\"\n              [ngClass]=\"getClass('element', 'control')\">\n\n        <legend *ngIf=\"model.legend\" [innerHTML]=\"model.legend\"></legend>\n\n        <dynamic-ionic-form-control *ngFor=\"let _model of model.group\"\n                                    [group]=\"control\"\n                                    [hidden]=\"_model.hidden\"\n                                    [layout]=\"formLayout\"\n                                    [model]=\"_model\"\n                                    [templates]=\"templates\"\n                                    [hostClass]=\"[getClass('element','children'), getClass('grid','children')]\"\n                                    (blur)=\"onBlur($event)\"\n                                    (change)=\"onChange($event)\"\n                                    (focus)=\"onFocus($event)\"\n                                    (ionEvent)=\"onCustomEvent($event, null, true)\"></dynamic-ionic-form-control>\n    </fieldset>\n\n</ng-container>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], customEvent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], templates: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], components: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChildren,
            args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(() => DynamicIonicFormControlContainerComponent)]
        }] }); })();

class DynamicIonicInputComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicInputComponent.ɵfac = function DynamicIonicInputComponent_Factory(t) { return new (t || DynamicIonicInputComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicInputComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicInputComponent, selectors: [["dynamic-ionic-input"]], viewQuery: function DynamicIonicInputComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c3, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionInput = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 21, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], [3, "accept", "autocapitalize", "autocomplete", "autocorrect", "clearInput", "clearOnEdit", "debounce", "formControlName", "id", "max", "min", "ngClass", "pattern", "placeholder", "readonly", "size", "spellcheck", "step", "type", "ionBlur", "ionChange", "ionFocus"], ["ionInput", ""], [3, "innerHTML", "ngClass"]], template: function DynamicIonicInputComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicInputComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-input", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicInputComponent_Template_ion_input_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionChange", function DynamicIonicInputComponent_Template_ion_input_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicInputComponent_Template_ion_input_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("accept", ctx.model.accept || undefined)("autocapitalize", ctx.model.getAdditional("autocapitalize", "off"))("autocomplete", ctx.model.autoComplete)("autocorrect", ctx.model.getAdditional("autocorrect", "off"))("clearInput", ctx.model.getAdditional("clearInput", true))("clearOnEdit", ctx.model.getAdditional("clearOnEdit", false))("debounce", ctx.model.getAdditional("debounce", 0))("formControlName", ctx.model.id)("id", ctx.id)("max", ctx.model.max)("min", ctx.model.min)("ngClass", ctx.getClass("element", "control"))("pattern", ctx.model.pattern)("placeholder", ctx.model.placeholder)("readonly", ctx.model.readOnly)("size", ctx.model.getAdditional("size", undefined))("spellcheck", ctx.model.spellCheck)("step", ctx.model.step)("type", ctx.model.inputType);
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonInput, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.TextValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.PatternValidator, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel], encapsulation: 2 });
DynamicIonicInputComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicInputComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionInput: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionInput", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicInputComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-input",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-input #ionInput\n               [accept]=\"model.accept || undefined\"\n               [autocapitalize]=\"model.getAdditional('autocapitalize', 'off')\"\n               [autocomplete]=\"model.autoComplete\"\n               [autocorrect]=\"model.getAdditional('autocorrect', 'off')\"\n               [clearInput]=\"model.getAdditional('clearInput', true)\"\n               [clearOnEdit]=\"model.getAdditional('clearOnEdit', false)\"\n               [debounce]=\"model.getAdditional('debounce', 0)\"\n               [formControlName]=\"model.id\"\n               [id]=\"id\"\n               [max]=\"model.max\"\n               [min]=\"model.min\"\n               [ngClass]=\"getClass('element', 'control')\"\n               [pattern]=\"model.pattern\"\n               [placeholder]=\"model.placeholder\"\n               [readonly]=\"model.readOnly\"\n               [size]=\"model.getAdditional('size', undefined)\"\n               [spellcheck]=\"model.spellCheck\"\n               [step]=\"model.step\"\n               [type]=\"model.inputType\"\n               (ionBlur)=\"onBlur($event)\"\n               (ionChange)=\"onChange($event)\"\n               (ionFocus)=\"onFocus($event)\"></ion-input>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionInput: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionInput", { static: true }]
        }] }); })();

class DynamicIonicRadioGroupComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicRadioGroupComponent.ɵfac = function DynamicIonicRadioGroupComponent_Factory(t) { return new (t || DynamicIonicRadioGroupComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicRadioGroupComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicRadioGroupComponent, selectors: [["dynamic-ionic-radio-group"]], viewQuery: function DynamicIonicRadioGroupComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c4, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionRadioGroup = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 7, vars: 8, consts: [[3, "formGroup"], [3, "formControlName", "id", "ngClass", "ionChange"], ["ionRadioGroup", ""], [4, "ngIf"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "value"]], template: function DynamicIonicRadioGroupComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0, 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "ion-list");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-radio-group", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionChange", function DynamicIonicRadioGroupComponent_Template_ion_radio_group_ionChange_2_listener($event) { return ctx.onChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, DynamicIonicRadioGroupComponent_ion_list_header_4_Template, 2, 1, "ion-list-header", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, DynamicIonicRadioGroupComponent_ion_item_5_Template, 4, 3, "ion-item", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](6, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formControlName", ctx.model.id)("id", ctx.id)("ngClass", ctx.getClass("element", "control"));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](6, 6, ctx.model.options$));
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonList, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonRadioGroup, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.SelectValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonListHeader, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonRadio, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.RadioValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.AsyncPipe], encapsulation: 2 });
DynamicIonicRadioGroupComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicRadioGroupComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionRadioGroup: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionRadioGroup", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicRadioGroupComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-radio-group",
                template: "<ng-container [formGroup]=\"group\">\n\n    <ion-list>\n\n        <ion-radio-group #ionRadioGroup\n                         [formControlName]=\"model.id\"\n                         [id]=\"id\"\n                         [ngClass]=\"getClass('element', 'control')\"\n                         (ionChange)=\"onChange($event)\">\n\n            <ion-list-header *ngIf=\"model.label !== null\">{{ model.label }}</ion-list-header>\n\n            <ion-item *ngFor=\"let option of model.options$ | async\" [ngClass]=\"getClass('element', 'option')\">\n\n                <ion-label>{{ option.label }}</ion-label>\n\n                <ion-radio [value]=\"option.value\"></ion-radio>\n\n            </ion-item>\n\n        </ion-radio-group>\n\n    </ion-list>\n\n</ng-container>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionRadioGroup: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionRadioGroup", { static: true }]
        }] }); })();

class DynamicIonicRangeComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicRangeComponent.ɵfac = function DynamicIonicRangeComponent_Factory(t) { return new (t || DynamicIonicRangeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicRangeComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicRangeComponent, selectors: [["dynamic-ionic-range"]], viewQuery: function DynamicIonicRangeComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c5, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionRange = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 13, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], [3, "color", "debounce", "dualKnobs", "formControlName", "id", "max", "min", "ngClass", "pin", "snaps", "step", "ionBlur", "ionChange", "ionFocus"], ["ionRange", ""], [3, "innerHTML", "ngClass"]], template: function DynamicIonicRangeComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicRangeComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-range", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicRangeComponent_Template_ion_range_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionChange", function DynamicIonicRangeComponent_Template_ion_range_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicRangeComponent_Template_ion_range_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("color", ctx.model.getAdditional("color", undefined))("debounce", ctx.model.getAdditional("debounce", 0))("dualKnobs", ctx.model.getAdditional("dualKnobs", false))("formControlName", ctx.model.id)("id", ctx.id)("max", ctx.model.max)("min", ctx.model.min)("ngClass", ctx.getClass("element", "control"))("pin", ctx.model.getAdditional("pin", true))("snaps", ctx.model.getAdditional("snaps", true))("step", ctx.model.step);
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonRange, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.SelectValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel], encapsulation: 2 });
DynamicIonicRangeComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicRangeComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionRange: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionRange", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicRangeComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-range",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-range #ionRange\n               [color]=\"model.getAdditional('color', undefined)\"\n               [debounce]=\"model.getAdditional('debounce', 0)\"\n               [dualKnobs]=\"model.getAdditional('dualKnobs', false)\"\n               [formControlName]=\"model.id\"\n               [id]=\"id\"\n               [max]=\"model.max\"\n               [min]=\"model.min\"\n               [ngClass]=\"getClass('element', 'control')\"\n               [pin]=\"model.getAdditional('pin', true)\"\n               [snaps]=\"model.getAdditional('snaps', true)\"\n               [step]=\"model.step\"\n               (ionBlur)=\"onBlur($event)\"\n               (ionChange)=\"onChange($event)\"\n               (ionFocus)=\"onFocus($event)\"></ion-range>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionRange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionRange", { static: true }]
        }] }); })();

class DynamicIonicSelectComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicSelectComponent.ɵfac = function DynamicIonicSelectComponent_Factory(t) { return new (t || DynamicIonicSelectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicSelectComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicSelectComponent, selectors: [["dynamic-ionic-select"]], viewQuery: function DynamicIonicSelectComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c6, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionSelect = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 6, vars: 14, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], [3, "cancelText", "formControlName", "id", "interface", "multiple", "ngClass", "okText", "placeholder", "selectedText", "ionBlur", "ionChange", "ionFocus"], ["ionSelect", ""], [3, "value", 4, "ngFor", "ngForOf"], [3, "innerHTML", "ngClass"], [3, "value"]], template: function DynamicIonicSelectComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicSelectComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-select", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicSelectComponent_Template_ion_select_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionChange", function DynamicIonicSelectComponent_Template_ion_select_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicSelectComponent_Template_ion_select_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, DynamicIonicSelectComponent_ion_select_option_4_Template, 2, 2, "ion-select-option", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](5, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("cancelText", ctx.model.getAdditional("cancelText", "Cancel"))("formControlName", ctx.model.id)("id", ctx.id)("interface", ctx.model.getAdditional("interface", "alert"))("multiple", ctx.model.multiple)("ngClass", ctx.getClass("element", "control"))("okText", ctx.model.getAdditional("okText", "OK"))("placeholder", ctx.model.placeholder)("selectedText", ctx.model.getAdditional("selectedText", null));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](5, 12, ctx.model.options$));
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonSelect, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.SelectValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonSelectOption], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.AsyncPipe], encapsulation: 2 });
DynamicIonicSelectComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicSelectComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionSelect: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionSelect", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicSelectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-select",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-select #ionSelect\n                [cancelText]=\"model.getAdditional('cancelText', 'Cancel')\"\n                [formControlName]=\"model.id\"\n                [id]=\"id\"\n                [interface]=\"model.getAdditional('interface', 'alert')\"\n                [multiple]=\"model.multiple\"\n                [ngClass]=\"getClass('element', 'control')\"\n                [okText]=\"model.getAdditional('okText', 'OK')\"\n                [placeholder]=\"model.placeholder\"\n                [selectedText]=\"model.getAdditional('selectedText', null)\"\n                (ionBlur)=\"onBlur($event)\"\n                (ionChange)=\"onChange($event)\"\n                (ionFocus)=\"onFocus($event)\">\n\n        <ion-select-option *ngFor=\"let option of model.options$ | async\"\n                           [value]=\"option.value\">{{ option.label }}</ion-select-option>\n\n    </ion-select>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionSelect", { static: true }]
        }] }); })();

class DynamicIonicToggleComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicToggleComponent.ɵfac = function DynamicIonicToggleComponent_Factory(t) { return new (t || DynamicIonicToggleComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicToggleComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicToggleComponent, selectors: [["dynamic-ionic-toggle"]], viewQuery: function DynamicIonicToggleComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c7, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionToggle = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 7, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], [3, "checked", "color", "formControlName", "id", "ngClass", "ionBlur", "ionChange", "ionFocus"], ["ionToggle", ""], [3, "innerHTML", "ngClass"]], template: function DynamicIonicToggleComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicToggleComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-toggle", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicToggleComponent_Template_ion_toggle_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionChange", function DynamicIonicToggleComponent_Template_ion_toggle_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicToggleComponent_Template_ion_toggle_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("checked", ctx.model.checked)("color", ctx.model.getAdditional("color", undefined))("formControlName", ctx.model.id)("id", ctx.id)("ngClass", ctx.getClass("element", "control"));
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonToggle, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.BooleanValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel], encapsulation: 2 });
DynamicIonicToggleComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicToggleComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionToggle: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionToggle", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicToggleComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-toggle",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-toggle #ionToggle\n                [checked]=\"model.checked\"\n                [color]=\"model.getAdditional('color', undefined)\"\n                [formControlName]=\"model.id\"\n                [id]=\"id\"\n                [ngClass]=\"getClass('element', 'control')\"\n                (ionBlur)=\"onBlur($event)\"\n                (ionChange)=\"onChange($event)\"\n                (ionFocus)=\"onFocus($event)\"></ion-toggle>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionToggle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionToggle", { static: true }]
        }] }); })();

class DynamicIonicTextAreaComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicTextAreaComponent.ɵfac = function DynamicIonicTextAreaComponent_Factory(t) { return new (t || DynamicIonicTextAreaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicTextAreaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicTextAreaComponent, selectors: [["dynamic-ionic-textarea"]], viewQuery: function DynamicIonicTextAreaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c8, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.ionTextArea = _t.first);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 7, consts: [[3, "formGroup"], [3, "innerHTML", "ngClass", 4, "ngIf"], ["clearInput", "true", 3, "formControlName", "id", "ngClass", "placeholder", "readonly", "ionBlur", "ionChange", "ionFocus"], ["ionTextArea", ""], [3, "innerHTML", "ngClass"]], template: function DynamicIonicTextAreaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "ion-item", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicTextAreaComponent_ion_label_1_Template, 1, 5, "ion-label", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "ion-textarea", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ionBlur", function DynamicIonicTextAreaComponent_Template_ion_textarea_ionBlur_2_listener($event) { return ctx.onBlur($event); })("ionChange", function DynamicIonicTextAreaComponent_Template_ion_textarea_ionChange_2_listener($event) { return ctx.onChange($event); })("ionFocus", function DynamicIonicTextAreaComponent_Template_ion_textarea_ionFocus_2_listener($event) { return ctx.onFocus($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.model.label !== null);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formControlName", ctx.model.id)("id", ctx.id)("ngClass", ctx.getClass("element", "control"))("placeholder", ctx.model.placeholder)("readonly", ctx.model.readOnly);
    } }, directives: [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonItem, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonTextarea, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.TextValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonLabel], encapsulation: 2 });
DynamicIonicTextAreaComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicTextAreaComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionTextArea: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["ionTextArea", { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicTextAreaComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-textarea",
                template: "<ion-item [formGroup]=\"group\">\n\n    <ion-label *ngIf=\"model.label !== null\"\n               [innerHTML]=\"model.label\"\n               [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></ion-label>\n\n    <ion-textarea #ionTextArea clearInput=\"true\"\n                  [formControlName]=\"model.id\"\n                  [id]=\"id\"\n                  [ngClass]=\"getClass('element', 'control')\"\n                  [placeholder]=\"model.placeholder\"\n                  [readonly]=\"model.readOnly\"\n                  (ionBlur)=\"onBlur($event)\"\n                  (ionChange)=\"onChange($event)\"\n                  (ionFocus)=\"onFocus($event)\"></ion-textarea>\n\n</ion-item>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], ionTextArea: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["ionTextArea", { static: true }]
        }] }); })();

class DynamicIonicFormControlContainerComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormControlContainerComponent {
    constructor(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService) {
        super(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService);
        this.changeDetectorRef = changeDetectorRef;
        this.componentFactoryResolver = componentFactoryResolver;
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.componentService = componentService;
        this.relationService = relationService;
        this.context = null;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.customEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
    get componentType() {
        return this.componentService.getCustomComponentType(this.model) || ionicUIFormControlMapFn(this.model);
    }
}
DynamicIonicFormControlContainerComponent.ɵfac = function DynamicIonicFormControlContainerComponent_Factory(t) { return new (t || DynamicIonicFormControlContainerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponentService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormRelationService)); };
DynamicIonicFormControlContainerComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicFormControlContainerComponent, selectors: [["dynamic-ionic-form-control"]], contentQueries: function DynamicIonicFormControlContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵcontentQuery"](dirIndex, _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicTemplateDirective, 4);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.contentTemplateList = _t);
    } }, viewQuery: function DynamicIonicFormControlContainerComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c9, 7, _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.componentViewContainerRef = _t.first);
    } }, hostVars: 2, hostBindings: function DynamicIonicFormControlContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassMap"](ctx.klass);
    } }, inputs: { context: "context", group: "group", hostClass: "hostClass", inputTemplateList: ["templates", "inputTemplateList"], layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus", customEvent: "ionEvent" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], ngContentSelectors: _c11, decls: 6, vars: 10, consts: [[3, "formGroup", "ngClass"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["componentViewContainer", ""]], template: function DynamicIonicFormControlContainerComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicIonicFormControlContainerComponent_ng_container_1_Template, 1, 0, "ng-container", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainer"](2, null, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, DynamicIonicFormControlContainerComponent_ng_container_4_Template, 1, 0, "ng-container", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction3"](6, _c10, "ng-dynamic-forms-" + ctx.model.type.toLowerCase(), ctx.getClass("element", "container"), ctx.getClass("grid", "container")));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.startTemplate == null ? null : ctx.startTemplate.templateRef)("ngTemplateOutletContext", ctx.model);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.endTemplate == null ? null : ctx.endTemplate.templateRef)("ngTemplateOutletContext", ctx.model);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
DynamicIonicFormControlContainerComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponentService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormRelationService }
];
DynamicIonicFormControlContainerComponent.propDecorators = {
    contentTemplateList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ContentChildren, args: [_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicTemplateDirective,] }],
    klass: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostBinding, args: ["class",] }],
    context: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    hostClass: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    inputTemplateList: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input, args: ["templates",] }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    customEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output, args: ["ionEvent",] }],
    componentViewContainerRef: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild, args: ["componentViewContainer", { read: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef, static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicFormControlContainerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-form-control",
                template: "<div [formGroup]=\"group\"\n     [ngClass]=\"['ng-dynamic-forms-'+model.type.toLowerCase(), getClass('element', 'container'), getClass('grid', 'container')]\">\n\n    <ng-container *ngTemplateOutlet=\"startTemplate?.templateRef; context: model\"></ng-container>\n\n    <ng-container #componentViewContainer></ng-container>\n\n    <ng-container *ngTemplateOutlet=\"endTemplate?.templateRef; context: model\"></ng-container>\n\n    <ng-content></ng-content>\n\n</div>\n",
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponentService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormRelationService }]; }, { context: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], customEvent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output,
            args: ["ionEvent"]
        }], contentTemplateList: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ContentChildren,
            args: [_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicTemplateDirective]
        }], klass: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostBinding,
            args: ["class"]
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], hostClass: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], inputTemplateList: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input,
            args: ["templates"]
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], componentViewContainerRef: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
            args: ["componentViewContainer", { read: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef, static: true }]
        }] }); })();
function ionicUIFormControlMapFn(model) {
    switch (model.type) {
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:
            return DynamicIonicFormArrayComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:
            return DynamicIonicCheckboxComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:
            return DynamicIonicFormGroupComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:
            return DynamicIonicDateTimeComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_GROUP:
            return DynamicIonicFormGroupComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_INPUT:
            return DynamicIonicInputComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:
            return DynamicIonicRadioGroupComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_SELECT:
            return DynamicIonicSelectComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_SLIDER:
            return DynamicIonicRangeComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_SWITCH:
            return DynamicIonicToggleComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:
            return DynamicIonicTextAreaComponent;
        case _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:
            return DynamicIonicDateTimeComponent;
        default:
            return null;
    }
}

class DynamicIonicFormArrayComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormArrayComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.customEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicFormArrayComponent.ɵfac = function DynamicIonicFormArrayComponent_Factory(t) { return new (t || DynamicIonicFormArrayComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService)); };
DynamicIonicFormArrayComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicFormArrayComponent, selectors: [["dynamic-ionic-form-array"]], viewQuery: function DynamicIonicFormArrayComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](DynamicIonicFormControlContainerComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.components = _t);
    } }, inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model", templates: "templates" }, outputs: { blur: "blur", change: "change", customEvent: "customEvent", focus: "focus" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 3, vars: 5, consts: [[3, "formGroup"], [3, "formArrayName", "id", "ngClass"], ["role", "group", 3, "formGroupName", "ngClass", 4, "ngFor", "ngForOf"], ["role", "group", 3, "formGroupName", "ngClass"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "context", "group", "hidden", "layout", "model", "templates", "hostClass", "blur", "change", "focus", "ionEvent", 4, "ngFor", "ngForOf"], [3, "context", "group", "hidden", "layout", "model", "templates", "hostClass", "blur", "change", "focus", "ionEvent"]], template: function DynamicIonicFormArrayComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0, 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicIonicFormArrayComponent_div_2_Template, 4, 10, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formArrayName", ctx.model.id)("id", ctx.id)("ngClass", ctx.getClass("element", "control"));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.model.groups);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormArrayName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupName, _angular_common__WEBPACK_IMPORTED_MODULE_5__.NgTemplateOutlet, DynamicIonicFormControlContainerComponent], encapsulation: 2 });
DynamicIonicFormArrayComponent.ctorParameters = () => [
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }
];
DynamicIonicFormArrayComponent.propDecorators = {
    formLayout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    templates: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    customEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    components: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChildren, args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(() => DynamicIonicFormControlContainerComponent),] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicFormArrayComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-form-array",
                template: "<ng-container [formGroup]=\"group\">\n\n    <div [formArrayName]=\"model.id\" [id]=\"id\" [ngClass]=\"getClass('element', 'control')\">\n\n        <div *ngFor=\"let groupModel of model.groups; let idx = index\" role=\"group\"\n             [formGroupName]=\"idx\" [ngClass]=\"[getClass('element', 'group'), getClass('grid', 'group')]\">\n\n            <ng-container *ngTemplateOutlet=\"startTemplate?.templateRef; context: groupModel\"></ng-container>\n\n            <dynamic-ionic-form-control *ngFor=\"let _model of groupModel.group\"\n                                        [context]=\"groupModel\"\n                                        [group]=\"array.at(idx)\"\n                                        [hidden]=\"_model.hidden\"\n                                        [layout]=\"formLayout\"\n                                        [model]=\"_model\"\n                                        [templates]=\"templates\"\n                                        [hostClass]=\"[getClass('element','children'), getClass('grid','children')]\"\n                                        (blur)=\"onBlur($event)\"\n                                        (change)=\"onChange($event)\"\n                                        (focus)=\"onFocus($event)\"\n                                        (ionEvent)=\"onCustomEvent($event, null, true)\"></dynamic-ionic-form-control>\n\n            <ng-container *ngTemplateOutlet=\"endTemplate?.templateRef; context: groupModel\"></ng-container>\n\n        </div>\n\n    </div>\n\n</ng-container>\n"
            }]
    }], function () { return [{ type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormLayoutService }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormValidationService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], customEvent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], formLayout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], templates: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], components: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChildren,
            args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(() => DynamicIonicFormControlContainerComponent)]
        }] }); })();

class DynamicIonicFormComponent extends _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponent {
    constructor(changeDetectorRef, componentService) {
        super(changeDetectorRef, componentService);
        this.changeDetectorRef = changeDetectorRef;
        this.componentService = componentService;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.ionEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
}
DynamicIonicFormComponent.ɵfac = function DynamicIonicFormComponent_Factory(t) { return new (t || DynamicIonicFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponentService)); };
DynamicIonicFormComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicIonicFormComponent, selectors: [["dynamic-ionic-form"]], contentQueries: function DynamicIonicFormComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵcontentQuery"](dirIndex, _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicTemplateDirective, 4);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.templates = _t);
    } }, viewQuery: function DynamicIonicFormComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](DynamicIonicFormControlContainerComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.components = _t);
    } }, inputs: { group: "group", model: "model", layout: "layout" }, outputs: { blur: "blur", change: "change", focus: "focus", ionEvent: "ionEvent" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 1, vars: 2, consts: [[3, "group", "hidden", "layout", "model", "templates", "blur", "change", "focus", "ionEvent", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "group", "hidden", "layout", "model", "templates", "blur", "change", "focus", "ionEvent"]], template: function DynamicIonicFormComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template, 1, 5, "dynamic-ionic-form-control", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.model)("ngForTrackBy", ctx.trackByFn);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, DynamicIonicFormControlContainerComponent], encapsulation: 2, changeDetection: 0 });
DynamicIonicFormComponent.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef },
    { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponentService }
];
DynamicIonicFormComponent.propDecorators = {
    group: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    model: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    layout: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input }],
    blur: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    change: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    focus: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    ionEvent: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output }],
    templates: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ContentChildren, args: [_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicTemplateDirective,] }],
    components: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChildren, args: [DynamicIonicFormControlContainerComponent,] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicIonicFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
        args: [{
                selector: "dynamic-ionic-form",
                template: "<dynamic-ionic-form-control *ngFor=\"let controlModel of model; trackBy: trackByFn\"\n                            [group]=\"group\"\n                            [hidden]=\"controlModel.hidden\"\n                            [layout]=\"layout\"\n                            [model]=\"controlModel\"\n                            [templates]=\"templates\"\n                            (blur)=\"onBlur($event)\"\n                            (change)=\"onChange($event)\"\n                            (focus)=\"onFocus($event)\"\n                            (ionEvent)=\"onCustomEvent($event, ionEvent)\"></dynamic-ionic-form-control>\n",
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef }, { type: _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormComponentService }]; }, { blur: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], change: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], focus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], ionEvent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], model: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], layout: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
        }], templates: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ContentChildren,
            args: [_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicTemplateDirective]
        }], components: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChildren,
            args: [DynamicIonicFormControlContainerComponent]
        }] }); })();

class DynamicFormsIonicUIModule {
}
DynamicFormsIonicUIModule.ɵfac = function DynamicFormsIonicUIModule_Factory(t) { return new (t || DynamicFormsIonicUIModule)(); };
DynamicFormsIonicUIModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({ type: DynamicFormsIonicUIModule });
DynamicFormsIonicUIModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({ imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__.ReactiveFormsModule,
            _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonicModule,
            angular2_text_mask__WEBPACK_IMPORTED_MODULE_0__.TextMaskModule,
            _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormsCoreModule
        ], _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormsCoreModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormsIonicUIModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
        args: [{
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_4__.ReactiveFormsModule,
                    _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonicModule,
                    angular2_text_mask__WEBPACK_IMPORTED_MODULE_0__.TextMaskModule,
                    _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormsCoreModule
                ],
                declarations: [
                    DynamicIonicCheckboxComponent,
                    DynamicIonicDateTimeComponent,
                    DynamicIonicFormArrayComponent,
                    DynamicIonicFormComponent,
                    DynamicIonicFormControlContainerComponent,
                    DynamicIonicFormGroupComponent,
                    DynamicIonicInputComponent,
                    DynamicIonicRadioGroupComponent,
                    DynamicIonicRangeComponent,
                    DynamicIonicSelectComponent,
                    DynamicIonicTextAreaComponent,
                    DynamicIonicToggleComponent
                ],
                entryComponents: [
                    DynamicIonicCheckboxComponent,
                    DynamicIonicDateTimeComponent,
                    DynamicIonicFormArrayComponent,
                    DynamicIonicFormGroupComponent,
                    DynamicIonicInputComponent,
                    DynamicIonicRadioGroupComponent,
                    DynamicIonicRangeComponent,
                    DynamicIonicSelectComponent,
                    DynamicIonicTextAreaComponent,
                    DynamicIonicToggleComponent
                ],
                exports: [
                    _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormsCoreModule,
                    DynamicIonicCheckboxComponent,
                    DynamicIonicDateTimeComponent,
                    DynamicIonicFormArrayComponent,
                    DynamicIonicFormComponent,
                    DynamicIonicFormControlContainerComponent,
                    DynamicIonicFormGroupComponent,
                    DynamicIonicInputComponent,
                    DynamicIonicRadioGroupComponent,
                    DynamicIonicRangeComponent,
                    DynamicIonicSelectComponent,
                    DynamicIonicTextAreaComponent,
                    DynamicIonicToggleComponent
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](DynamicFormsIonicUIModule, { declarations: function () { return [DynamicIonicCheckboxComponent, DynamicIonicDateTimeComponent, DynamicIonicFormArrayComponent, DynamicIonicFormComponent, DynamicIonicFormControlContainerComponent, DynamicIonicFormGroupComponent, DynamicIonicInputComponent, DynamicIonicRadioGroupComponent, DynamicIonicRangeComponent, DynamicIonicSelectComponent, DynamicIonicTextAreaComponent, DynamicIonicToggleComponent]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_4__.ReactiveFormsModule,
        _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.IonicModule,
        angular2_text_mask__WEBPACK_IMPORTED_MODULE_0__.TextMaskModule,
        _ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormsCoreModule]; }, exports: function () { return [_ng_dynamic_forms_core__WEBPACK_IMPORTED_MODULE_2__.DynamicFormsCoreModule, DynamicIonicCheckboxComponent, DynamicIonicDateTimeComponent, DynamicIonicFormArrayComponent, DynamicIonicFormComponent, DynamicIonicFormControlContainerComponent, DynamicIonicFormGroupComponent, DynamicIonicInputComponent, DynamicIonicRadioGroupComponent, DynamicIonicRangeComponent, DynamicIonicSelectComponent, DynamicIonicTextAreaComponent, DynamicIonicToggleComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */





/***/ }),

/***/ 29230:
/*!*******************************************************************************!*\
  !*** ./node_modules/angular2-text-mask/__ivy_ngcc__/dist/angular2TextMask.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
var core_1 = __webpack_require__(/*! @angular/core */ 2316);
var forms_1 = __webpack_require__(/*! @angular/forms */ 1707);
var platform_browser_1 = __webpack_require__(/*! @angular/platform-browser */ 71570);
var textMaskCore_1 = __webpack_require__(/*! text-mask-core/dist/textMaskCore */ 47669);
var ɵngcc0 = __webpack_require__(/*! @angular/core */ 2316);
var TextMaskConfig = /** @class */ (function () {
    function TextMaskConfig() {
    }
    return TextMaskConfig;
}());
exports.TextMaskConfig = TextMaskConfig;
exports.MASKEDINPUT_VALUE_ACCESSOR = {
    provide: forms_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () { return MaskedInputDirective; }),
    multi: true
};
/**
 * We must check whether the agent is Android because composition events
 * behave differently between iOS and Android.
 */
function _isAndroid() {
    var userAgent = platform_browser_1.ɵgetDOM() ? platform_browser_1.ɵgetDOM().getUserAgent() : '';
    return /android (\d+)/.test(userAgent.toLowerCase());
}
var MaskedInputDirective = /** @class */ (function () {
    function MaskedInputDirective(_renderer, _elementRef, _compositionMode) {
        this._renderer = _renderer;
        this._elementRef = _elementRef;
        this._compositionMode = _compositionMode;
        this.textMaskConfig = {
            mask: [],
            guide: true,
            placeholderChar: '_',
            pipe: undefined,
            keepCharPositions: false,
        };
        this.onChange = function (_) { };
        this.onTouched = function () { };
        /** Whether the user is creating a composition string (IME events). */
        this._composing = false;
        if (this._compositionMode == null) {
            this._compositionMode = !_isAndroid();
        }
    }
    MaskedInputDirective.prototype.ngOnChanges = function (changes) {
        this._setupMask(true);
        if (this.textMaskInputElement !== undefined) {
            this.textMaskInputElement.update(this.inputElement.value);
        }
    };
    MaskedInputDirective.prototype.writeValue = function (value) {
        this._setupMask();
        // set the initial value for cases where the mask is disabled
        var normalizedValue = value == null ? '' : value;
        this._renderer.setProperty(this.inputElement, 'value', normalizedValue);
        if (this.textMaskInputElement !== undefined) {
            this.textMaskInputElement.update(value);
        }
    };
    MaskedInputDirective.prototype.registerOnChange = function (fn) { this.onChange = fn; };
    MaskedInputDirective.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };
    MaskedInputDirective.prototype.setDisabledState = function (isDisabled) {
        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);
    };
    MaskedInputDirective.prototype._handleInput = function (value) {
        if (!this._compositionMode || (this._compositionMode && !this._composing)) {
            this._setupMask();
            if (this.textMaskInputElement !== undefined) {
                this.textMaskInputElement.update(value);
                // get the updated value
                value = this.inputElement.value;
                this.onChange(value);
            }
        }
    };
    MaskedInputDirective.prototype._setupMask = function (create) {
        if (create === void 0) { create = false; }
        if (!this.inputElement) {
            if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {
                // `textMask` directive is used directly on an input element
                this.inputElement = this._elementRef.nativeElement;
            }
            else {
                // `textMask` directive is used on an abstracted input element, `md-input-container`, etc
                this.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0];
            }
        }
        if (this.inputElement && create) {
            this.textMaskInputElement = textMaskCore_1.createTextMaskInputElement(Object.assign({ inputElement: this.inputElement }, this.textMaskConfig));
        }
    };
    MaskedInputDirective.prototype._compositionStart = function () { this._composing = true; };
    MaskedInputDirective.prototype._compositionEnd = function (value) {
        this._composing = false;
        this._compositionMode && this._handleInput(value);
    };
    /** @nocollapse */
    MaskedInputDirective.ctorParameters = function () { return [
        { type: core_1.Renderer2, },
        { type: core_1.ElementRef, },
        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [forms_1.COMPOSITION_BUFFER_MODE,] },] },
    ]; };
    MaskedInputDirective.propDecorators = {
        'textMaskConfig': [{ type: core_1.Input, args: ['textMask',] },],
    };
MaskedInputDirective.ɵfac = function MaskedInputDirective_Factory(t) { return new (t || MaskedInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(forms_1.COMPOSITION_BUFFER_MODE, 8)); };
MaskedInputDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaskedInputDirective, selectors: [["", "textMask", ""]], hostBindings: function MaskedInputDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function MaskedInputDirective_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })("blur", function MaskedInputDirective_blur_HostBindingHandler() { return ctx.onTouched(); })("compositionstart", function MaskedInputDirective_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })("compositionend", function MaskedInputDirective_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });
    } }, inputs: { textMaskConfig: ["textMask", "textMaskConfig"] }, exportAs: ["textMask"], features: [ɵngcc0.ɵɵProvidersFeature([exports.MASKEDINPUT_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskedInputDirective, [{
        type: core_1.Directive,
        args: [{
                host: {
                    '(input)': '_handleInput($event.target.value)',
                    '(blur)': 'onTouched()',
                    '(compositionstart)': '_compositionStart()',
                    '(compositionend)': '_compositionEnd($event.target.value)'
                },
                selector: '[textMask]',
                exportAs: 'textMask',
                providers: [exports.MASKEDINPUT_VALUE_ACCESSOR]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{
                type: core_1.Optional
            }, {
                type: core_1.Inject,
                args: [forms_1.COMPOSITION_BUFFER_MODE]
            }] }]; }, { textMaskConfig: [{
            type: core_1.Input,
            args: ['textMask']
        }] }); })();
    return MaskedInputDirective;
}());
exports.MaskedInputDirective = MaskedInputDirective;
var TextMaskModule = /** @class */ (function () {
    function TextMaskModule() {
    }
    /** @nocollapse */
    TextMaskModule.ctorParameters = function () { return []; };
TextMaskModule.ɵfac = function TextMaskModule_Factory(t) { return new (t || TextMaskModule)(); };
TextMaskModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextMaskModule });
TextMaskModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextMaskModule, [{
        type: core_1.NgModule,
        args: [{
                declarations: [MaskedInputDirective],
                exports: [MaskedInputDirective]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextMaskModule, { declarations: [MaskedInputDirective], exports: [MaskedInputDirective] }); })();
    return TextMaskModule;
}());
exports.TextMaskModule = TextMaskModule;
var textMaskCore_2 = __webpack_require__(/*! text-mask-core/dist/textMaskCore */ 47669);
exports.conformToMask = textMaskCore_2.conformToMask;



/***/ }),

/***/ 43887:
/*!**************************************************!*\
  !*** ./node_modules/reflect-metadata/Reflect.js ***!
  \**************************************************/
/***/ (function() {

/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof global === "object" ? global :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));


/***/ }),

/***/ 47669:
/*!**********************************************************!*\
  !*** ./node_modules/text-mask-core/dist/textMaskCore.js ***!
  \**********************************************************/
/***/ (function(module) {

!function(e,r){ true?module.exports=r():0}(this,function(){return function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,"__esModule",{value:!0});var o=t(3);Object.defineProperty(r,"conformToMask",{enumerable:!0,get:function(){return n(o).default}});var i=t(2);Object.defineProperty(r,"adjustCaretPosition",{enumerable:!0,get:function(){return n(i).default}});var a=t(5);Object.defineProperty(r,"createTextMaskInputElement",{enumerable:!0,get:function(){return n(a).default}})},function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.placeholderChar="_",r.strFunction="function"},function(e,r){"use strict";function t(e){var r=e.previousConformedValue,t=void 0===r?o:r,i=e.previousPlaceholder,a=void 0===i?o:i,u=e.currentCaretPosition,l=void 0===u?0:u,s=e.conformedValue,f=e.rawValue,d=e.placeholderChar,c=e.placeholder,p=e.indexesOfPipedChars,v=void 0===p?n:p,h=e.caretTrapIndexes,m=void 0===h?n:h;if(0===l||!f.length)return 0;var y=f.length,g=t.length,b=c.length,C=s.length,P=y-g,k=P>0,x=0===g,O=P>1&&!k&&!x;if(O)return l;var T=k&&(t===s||s===c),w=0,M=void 0,S=void 0;if(T)w=l-P;else{var j=s.toLowerCase(),_=f.toLowerCase(),V=_.substr(0,l).split(o),A=V.filter(function(e){return j.indexOf(e)!==-1});S=A[A.length-1];var N=a.substr(0,A.length).split(o).filter(function(e){return e!==d}).length,E=c.substr(0,A.length).split(o).filter(function(e){return e!==d}).length,F=E!==N,R=void 0!==a[A.length-1]&&void 0!==c[A.length-2]&&a[A.length-1]!==d&&a[A.length-1]!==c[A.length-1]&&a[A.length-1]===c[A.length-2];!k&&(F||R)&&N>0&&c.indexOf(S)>-1&&void 0!==f[l]&&(M=!0,S=f[l]);for(var I=v.map(function(e){return j[e]}),J=I.filter(function(e){return e===S}).length,W=A.filter(function(e){return e===S}).length,q=c.substr(0,c.indexOf(d)).split(o).filter(function(e,r){return e===S&&f[r]!==e}).length,L=q+W+J+(M?1:0),z=0,B=0;B<C;B++){var D=j[B];if(w=B+1,D===S&&z++,z>=L)break}}if(k){for(var G=w,H=w;H<=b;H++)if(c[H]===d&&(G=H),c[H]===d||m.indexOf(H)!==-1||H===b)return G}else if(M){for(var K=w-1;K>=0;K--)if(s[K]===S||m.indexOf(K)!==-1||0===K)return K}else for(var Q=w;Q>=0;Q--)if(c[Q-1]===d||m.indexOf(Q)!==-1||0===Q)return Q}Object.defineProperty(r,"__esModule",{value:!0}),r.default=t;var n=[],o=""},function(e,r,t){"use strict";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(0,i.isArray)(r)){if(("undefined"==typeof r?"undefined":o(r))!==a.strFunction)throw new Error("Text-mask:conformToMask; The mask property must be an array.");r=r(e,t),r=(0,i.processCaretTraps)(r).maskWithoutCaretTraps}var n=t.guide,s=void 0===n||n,f=t.previousConformedValue,d=void 0===f?l:f,c=t.placeholderChar,p=void 0===c?a.placeholderChar:c,v=t.placeholder,h=void 0===v?(0,i.convertMaskToPlaceholder)(r,p):v,m=t.currentCaretPosition,y=t.keepCharPositions,g=s===!1&&void 0!==d,b=e.length,C=d.length,P=h.length,k=r.length,x=b-C,O=x>0,T=m+(O?-x:0),w=T+Math.abs(x);if(y===!0&&!O){for(var M=l,S=T;S<w;S++)h[S]===p&&(M+=p);e=e.slice(0,T)+M+e.slice(T,b)}for(var j=e.split(l).map(function(e,r){return{char:e,isNew:r>=T&&r<w}}),_=b-1;_>=0;_--){var V=j[_].char;if(V!==p){var A=_>=T&&C===k;V===h[A?_-x:_]&&j.splice(_,1)}}var N=l,E=!1;e:for(var F=0;F<P;F++){var R=h[F];if(R===p){if(j.length>0)for(;j.length>0;){var I=j.shift(),J=I.char,W=I.isNew;if(J===p&&g!==!0){N+=p;continue e}if(r[F].test(J)){if(y===!0&&W!==!1&&d!==l&&s!==!1&&O){for(var q=j.length,L=null,z=0;z<q;z++){var B=j[z];if(B.char!==p&&B.isNew===!1)break;if(B.char===p){L=z;break}}null!==L?(N+=J,j.splice(L,1)):F--}else N+=J;continue e}E=!0}g===!1&&(N+=h.substr(F,P));break}N+=R}if(g&&O===!1){for(var D=null,G=0;G<N.length;G++)h[G]===p&&(D=G);N=null!==D?N.substr(0,D+1):l}return{conformedValue:N,meta:{someCharsRejected:E}}}Object.defineProperty(r,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};r.default=n;var i=t(4),a=t(1),u=[],l=""},function(e,r,t){"use strict";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s.placeholderChar;if(!o(e))throw new Error("Text-mask:convertMaskToPlaceholder; The mask property must be an array.");if(e.indexOf(r)!==-1)throw new Error("Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\n\n"+("The placeholder character that was received is: "+JSON.stringify(r)+"\n\n")+("The mask that was received is: "+JSON.stringify(e)));return e.map(function(e){return e instanceof RegExp?r:e}).join("")}function o(e){return Array.isArray&&Array.isArray(e)||e instanceof Array}function i(e){return"string"==typeof e||e instanceof String}function a(e){return"number"==typeof e&&void 0===e.length&&!isNaN(e)}function u(e){return"undefined"==typeof e||null===e}function l(e){for(var r=[],t=void 0;t=e.indexOf(d),t!==-1;)r.push(t),e.splice(t,1);return{maskWithoutCaretTraps:e,indexes:r}}Object.defineProperty(r,"__esModule",{value:!0}),r.convertMaskToPlaceholder=n,r.isArray=o,r.isString=i,r.isNumber=a,r.isNil=u,r.processCaretTraps=l;var s=t(1),f=[],d="[]"},function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var r={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:r,update:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=n.inputElement,s=n.mask,d=n.guide,m=n.pipe,g=n.placeholderChar,b=void 0===g?v.placeholderChar:g,C=n.keepCharPositions,P=void 0!==C&&C,k=n.showMask,x=void 0!==k&&k;if("undefined"==typeof t&&(t=o.value),t!==r.previousConformedValue){("undefined"==typeof s?"undefined":l(s))===y&&void 0!==s.pipe&&void 0!==s.mask&&(m=s.pipe,s=s.mask);var O=void 0,T=void 0;if(s instanceof Array&&(O=(0,p.convertMaskToPlaceholder)(s,b)),s!==!1){var w=a(t),M=o.selectionEnd,S=r.previousConformedValue,j=r.previousPlaceholder,_=void 0;if(("undefined"==typeof s?"undefined":l(s))===v.strFunction){if(T=s(w,{currentCaretPosition:M,previousConformedValue:S,placeholderChar:b}),T===!1)return;var V=(0,p.processCaretTraps)(T),A=V.maskWithoutCaretTraps,N=V.indexes;T=A,_=N,O=(0,p.convertMaskToPlaceholder)(T,b)}else T=s;var E={previousConformedValue:S,guide:d,placeholderChar:b,pipe:m,placeholder:O,currentCaretPosition:M,keepCharPositions:P},F=(0,c.default)(w,T,E),R=F.conformedValue,I=("undefined"==typeof m?"undefined":l(m))===v.strFunction,J={};I&&(J=m(R,u({rawValue:w},E)),J===!1?J={value:S,rejected:!0}:(0,p.isString)(J)&&(J={value:J}));var W=I?J.value:R,q=(0,f.default)({previousConformedValue:S,previousPlaceholder:j,conformedValue:W,placeholder:O,rawValue:w,currentCaretPosition:M,placeholderChar:b,indexesOfPipedChars:J.indexesOfPipedChars,caretTrapIndexes:_}),L=W===O&&0===q,z=x?O:h,B=L?z:W;r.previousConformedValue=B,r.previousPlaceholder=O,o.value!==B&&(o.value=B,i(o,q))}}}}}function i(e,r){document.activeElement===e&&(g?b(function(){return e.setSelectionRange(r,r,m)},0):e.setSelectionRange(r,r,m))}function a(e){if((0,p.isString)(e))return e;if((0,p.isNumber)(e))return String(e);if(void 0===e||null===e)return h;throw new Error("The 'value' provided to Text Mask needs to be a string or a number. The value received was:\n\n "+JSON.stringify(e))}Object.defineProperty(r,"__esModule",{value:!0});var u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};r.default=o;var s=t(2),f=n(s),d=t(3),c=n(d),p=t(4),v=t(1),h="",m="none",y="object",g="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),b="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout}])});

/***/ })

}]);
//# sourceMappingURL=default-node_modules_ng-dynamic-forms_ui-ionic___ivy_ngcc___fesm2015_ui-ionic_js-es2015.js.map