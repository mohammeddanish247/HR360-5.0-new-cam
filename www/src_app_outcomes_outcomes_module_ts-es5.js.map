{"version":3,"mappings":"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","names":["routes","path","component","_outcomes_page__WEBPACK_IMPORTED_MODULE_0__","OutcomesPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","OutcomesPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_outcomes_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_outcomes_page__WEBPACK_IMPORTED_MODULE_1__","OutcomesPage","router","route","auth","queryParams","subscribe","getCurrentNavigation","extras","state","data","database","executeSql","then","console","log","res","rows","item","Outcomegasinstallation","Outcomegassupply","emergencycontrolvalveaccess","gastightnesstest","protectiveequipotentialbonding","COalarmFitted","COalarmtested","e","undefined","showToast","navigationExtras","navigate","JSON","stringify","_api_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/outcomes/outcomes-routing.module.ts","webpack:///src/app/outcomes/outcomes.module.ts","webpack:///src/app/outcomes/outcomes.page.ts","webpack:///src/app/outcomes/outcomes.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OutcomesPage } from './outcomes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OutcomesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OutcomesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OutcomesPageRoutingModule } from './outcomes-routing.module';\n\nimport { OutcomesPage } from './outcomes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OutcomesPageRoutingModule\n  ],\n  declarations: [OutcomesPage]\n})\nexport class OutcomesPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router , NavigationExtras} from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-outcomes',\n  templateUrl: './outcomes.page.html',\n  styleUrls: ['./outcomes.page.scss'],\n})\nexport class OutcomesPage implements OnInit {\n\n  data:any[];\n  Outcomegasinstallation: string='';\n  Outcomegassupply: string='';\n  emergencycontrolvalveaccess: string='';\n  gastightnesstest: string='';\n  protectiveequipotentialbonding: string='';\n  COalarmFitted: string='';\n  COalarmtested: string='';\n \n\n  constructor(private router:Router, private route:ActivatedRoute, private auth:ApiService) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data;\n      }\n      });\n\n      this.auth.database.executeSql('select * from certificate where JOBGUID=?',[this.data['JOBGUID']])\n      .then(res => {\n        console.log(\"@@\"+res.rows.item(0)['OGIns']+\",\"+res.rows.item(0)['OGSup']+\",\"+res.rows.item(0)['ECon']+\",\"+res.rows.item(0)['COTested']);\n        this.Outcomegasinstallation = res.rows.item(0)['OGIns'];\n        this.Outcomegassupply = res.rows.item(0)['OGSup'];\n        this.emergencycontrolvalveaccess = res.rows.item(0)['ECon'];\n        this.gastightnesstest = res.rows.item(0)['OGTight'];\n        this.protectiveequipotentialbonding = res.rows.item(0)['EquiBond'];\n        this.COalarmFitted = res.rows.item(0)['COFitted'];\n        this.COalarmtested = res.rows.item(0)['COTested'];\n        \n      }).catch(e=>{console.log(\"error getting saved certicate outcomes :\"+e);\n      })\n    \n  }\n  \n\n  OutComesDetailsClick(){\n  if(this.Outcomegasinstallation== undefined || this.Outcomegasinstallation==''){\n      this.auth.showToast('Please select an answer for Question:1','danger');\n    }else{\n      if(this.Outcomegassupply==undefined || this.Outcomegassupply==''){\n        this.auth.showToast('Please select an answer for Question:2','danger');\n      }else{\n        if(this.emergencycontrolvalveaccess==undefined ||this.emergencycontrolvalveaccess==''){\n          this.auth.showToast('Please select an answer for Question:3','danger');\n        }else{\n          if(this.gastightnesstest==undefined || this.gastightnesstest==''){\n            this.auth.showToast('Please select an answer for Question:4','danger');\n          }else{\n            if(this.protectiveequipotentialbonding==undefined || this.protectiveequipotentialbonding==''){\n              this.auth.showToast('Please select an answer for Question:5','danger');\n            }else{\n              if(this.COalarmFitted==undefined || this.COalarmFitted==''){\n                this.auth.showToast('Please select an answer for Question:6','danger');\n              }else{\n                if(this.COalarmtested==undefined || this.COalarmtested==''){\n                  this.auth.showToast('Please select an answer for Question:7','danger');\n                }else{\n                  this.auth.database.executeSql('update certificate set OGIns=?, OGSup=?, ECon=?, OGTight=?,EquiBond=?, COFitted=?, COTested=? where JOBGUID=?',[this.Outcomegasinstallation, this.Outcomegassupply, this.emergencycontrolvalveaccess, this.gastightnesstest, this.protectiveequipotentialbonding, this.COalarmFitted, this.COalarmtested, this.data['JOBGUID'] ])\n                  .then((res)=>{\n                   \n                     \n                  this.data['OGIns'] =  this.Outcomegasinstallation;\n                  this.data['OGSup'] =  this.Outcomegassupply;\n                  this.data['ECon'] =  this.emergencycontrolvalveaccess;\n                  this.data['OGTight'] =  this.gastightnesstest;\n                  this.data['EquiBond'] =  this.protectiveequipotentialbonding;\n                  this.data['COFitted'] =  this.COalarmFitted;\n                  this.data['COTested'] =  this.COalarmtested;\n                   \n                  const navigationExtras: NavigationExtras = {\n                    state: {\n                      data: this.data,\n                    }\n                  }\n                  this.router.navigate(['signaturecertificate'], navigationExtras);\n                  }).catch((e)=>{\n                      console.log('Error '+JSON.stringify(e));           \n                  });           \n                 \n                }\n              }\n            }\n          }\n        }\n      }\n      }    \n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Outcomes of Test</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card>\\n    <ion-radio-group allow-empty-selection [(ngModel)]=\\\"Outcomegasinstallation\\\" #gas='ngModel' >\\n     <ion-item lines=\\\"none\\\">\\n       <p>1.Outcome of gas installation pipework visual inspection?</p>\\n     </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Pass</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Pass\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Fail</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Fail\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>N/A</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"NA\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n    </ion-card>\\n  \\n    <ion-card>\\n    <ion-radio-group allow-empty-selection [(ngModel)]=\\\"Outcomegassupply\\\" #gaspipe='ngModel' >\\n       <ion-item lines=\\\"none\\\">\\n         <p>2.Outcome of gas supply pipework visual inspection?</p>\\n       </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>Pass</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Pass\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>Fail</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Fail\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>N/A</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"NA\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-radio-group allow-empty-selection [(ngModel)]=\\\"emergencycontrolvalveaccess\\\" #ecv='ngModel' >\\n       <ion-item lines=\\\"none\\\">\\n         <p>3.Is the emergency control valve access satisfactory?</p>\\n       </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>Yes</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Yes\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>No</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"No\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>N/A</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"NA\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-radio-group allow-empty-selection [(ngModel)]=\\\"gastightnesstest\\\" #gastight='ngModel' >\\n       <ion-item lines=\\\"none\\\">\\n         <p>4.Outcome of gas tightness test?</p>\\n       </ion-item>\\n       <ion-item lines=\\\"full\\\">\\n        <ion-label>Pass</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Pass\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>Fail</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Fail\\\"></ion-radio>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label>N/A</ion-label>\\n        <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"NA\\\"></ion-radio>\\n      </ion-item>\\n      </ion-radio-group>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-radio-group allow-empty-selection [(ngModel)]=\\\"protectiveequipotentialbonding\\\" #pebs='ngModel'  >\\n       <ion-item lines=\\\"none\\\">\\n         <p>5.Is the protective equipotential bonding satisfactory?</p>\\n       </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>Yes</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Yes\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>No</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"No\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>N/A</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"NA\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-radio-group allow-empty-selection [(ngModel)]=\\\"COalarmFitted\\\" #coalarmfit='ngModel' >\\n       <ion-item lines=\\\"none\\\">\\n         <p>6.CO alarm Fitted</p>\\n       </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>Yes</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Yes\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>No</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"No\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-radio-group allow-empty-selection [(ngModel)]=\\\"COalarmtested\\\" #coalarmtest='ngModel' >\\n       <ion-item lines=\\\"none\\\">\\n         <p>7.CO alarm tested</p>\\n       </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>Yes</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"Yes\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"full\\\">\\n          <ion-label>No</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"No\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-card>\\n\\n    <!-- <div style=\\\"margin-top: 3%;\\\">\\n      <ion-button expand=\\\"full\\\"  color=\\\"secondary\\\" (click)=\\\"OutComesDetailsClick()\\\">Save & Next</ion-button>\\n    </div> -->\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\"  color=\\\"secondary\\\" (click)=\\\"OutComesDetailsClick()\\\">Save & Next</ion-button>\\n</ion-footer>\";"]}