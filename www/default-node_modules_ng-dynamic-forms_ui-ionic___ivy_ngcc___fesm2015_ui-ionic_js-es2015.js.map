{"version":3,"file":"default-node_modules_ng-dynamic-forms_ui-ionic___ivy_ngcc___fesm2015_ui-ionic_js-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuP;AACxM;AACiB;AACtC;AAC2B;AACmF;AACzF;;AAEP;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,cAAc;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAA4C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAS;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,oDAAS;AAChD;AACA;AACA;AACA;;AAEA,wCAAwC,yDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G,SAAS;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,8CAA8C,sDAAe;AAClJ,oCAAoC,oEAAkB,GAAG,0DAA0D,uCAAuC,0DAAQ,oCAAoC,0DAA0D;AAChQ;AACA,MAAM,gCAAgC,MAAM,iDAAM,wCAAwC,IAAI,MAAM,mDAAQ,EAAE;AAC9G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,uCAAuC,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB;AAC1L,0CAA0C,+DAAwB,GAAG,4BAA4B;AACjG;AACA,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;AAE3C;AACA;AACA;AACA,4DAA4D,wBAAwB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAY;AAC3B;AACA;AACA;AACA;AACA,yBAAyB,wCAAE;AAC3B;AACA,iBAAiB,kDAAY;AAC7B,mCAAmC,mDAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA,CAAC,oFAAoF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,2CAA2C,+DAAwB,CAAC,sDAAkB;AACrK,8CAA8C,+DAAwB,GAAG,yHAAyH,wFAAwF;AAC1R;AACA,MAAM,MAAM,sDAAW;AACvB;AACA;AACA,cAAc,MAAM,gDAAK,EAAE;AAC3B,WAAW,MAAM,gDAAK,EAAE;AACxB,cAAc,MAAM,gDAAK,EAAE;AAC3B,gBAAgB,MAAM,gDAAK,EAAE;AAC7B,kBAAkB,MAAM,gDAAK,EAAE;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB,GAAG,aAAa,GAAG,SAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,iCAAiC,oEAAkB,GAAG,uDAAuD,wCAAwC,uDAAuD;;AAE5M,+BAA+B,yDAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yDAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAyB,mBAAmB;AACxD,0BAA0B,sDAAU;AACpC;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,+CAA+C,sDAAe,CAAC,yDAAa,MAAM,sDAAe,CAAC,+DAAmB,MAAM,sDAAe,yBAAyB,sDAAe;AACzQ,qCAAqC,oEAAkB,GAAG,2DAA2D,wCAAwC,0DAAQ,CAAC,yDAAa,MAAM,0DAAQ,CAAC,+DAAmB,MAAM,0DAAQ,yBAAyB,0DAAQ,uCAAuC,2DAA2D;AACtW;AACA,MAAM,4BAA4B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,SAAS,yDAAa,IAAI,GAAG;AAC/F,MAAM,4BAA4B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,SAAS,+DAAmB,IAAI,GAAG;AACrG,MAAM,0BAA0B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,+BAA+B,GAAG;AAClG,MAAM,gCAAgC,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,2CAA2C;AACjH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wCAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kDAAY;AAC7B,yCAAyC,mDAAG;AAC5C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,iDAAU;AACV;AACA,IAAI,iDAAU;AACd;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,iDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI,UAAU;AAC9B,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB,KAAK,iBAAiB,UAAU,MAAM,4DAAwB,EAAE,IAAI,mCAAmC,IAAI,UAAU;AACrH,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,sDAAkB,EAAE,IAAI,IAAI;AAClE,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS,GAAG,IAAI;AAChB,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B,uBAAuB,yDAAa;AACpC,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B,uBAAuB,+DAAmB;AAC1C,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA,mBAAmB,qDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,6CAA6C,uDAAW;AACxD;AACA,SAAS;AACT,mBAAmB,qDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,kCAAkC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,SAAS;AAChH;AACA,SAAS;AACT;AACA;AACA;AACA,mEAAmE,qCAAqC,sDAAe,+BAA+B,sDAAe;AACrK,2BAA2B,oEAAkB,GAAG,iDAAiD,8BAA8B,0DAAQ,+BAA+B,0DAAQ,kCAAkC,iDAAiD;AACjQ;AACA,MAAM,mCAAmC;AACzC,MAAM;AACN;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,mCAAmC,IAAI,oCAAoC,IAAI,UAAU;;AAEzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,uBAAuB,gBAAgB,MAAM;AACvI;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAW,8EAA8E,cAAc;AAC1I;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kEAAkE,yDAAS;AAC3E,oEAAoE,yDAAS;AAC7E,+BAA+B,4CAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mFAAmF,6CAA6C,sDAAe,uBAAuB,sDAAe,CAAC,mDAAe;AACrM,mCAAmC,oEAAkB,GAAG,yDAAyD,sCAAsC,0DAAQ,uBAAuB,0DAAQ,CAAC,mDAAQ,KAAK,yDAAyD;AACrQ;AACA,MAAM,4BAA4B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,6BAA6B,GAAG;AAClG,MAAM,MAAM,mDAAQ;AACpB;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI,MAAM,mDAAe,EAAE,IAAI,UAAU;;AAEziBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAA+D,EAAE,oDAAoD;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,uDAAuD,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,CAAC,mEAA+B,GAAG,+DAAwB,4BAA4B,+DAAwB,gCAAgC,+DAAwB,+BAA+B,+DAAwB;AACxc,0DAA0D,+DAAwB,GAAG,uDAAuD,kEAA2B,GAAG;AAC1K;AACA,MAAM,MAAM,4DAAiB,EAAE;AAC/B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AC;AAC7D,aAAa,mBAAO,CAAC,yBAAe;AACpC,cAAc,mBAAO,CAAC,0BAAgB;AACtC,yBAAyB,mBAAO,CAAC,sCAA2B;AAC5D,qBAAqB,mBAAO,CAAC,6CAAkC;AAC/D,aAAa,mBAAO,CAAC,yBAAe;AACpC;AACA;AACA;AACA;AACA,CAAC;AACD,sBAAsB;AACtB,kCAAkC;AAClC;AACA,iDAAiD,8BAA8B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,UAAU,yBAAyB;AACnC,UAAU,0BAA0B;AACpC,UAAU,gCAAgC,uBAAuB,IAAI,+DAA+D,IAAI;AACxI;AACA;AACA,6BAA6B,yCAAyC;AACtE;AACA,uEAAuE;AACvE,qEAAqE,mIAAmI;AACxM,oGAAoG,+CAA+C,oEAAoE,yBAAyB,4FAA4F,iCAAiC,8FAA8F,kDAAkD;AAC7f,OAAO,YAAY,gDAAgD,oIAAoI;AACvM,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,wBAAwB,IAAI,yBAAyB,IAAI;AACzF;AACA,aAAa;AACb;AACA;AACA,aAAa,GAAG,IAAI,IAAI;AACxB;AACA;AACA,SAAS,GAAG,IAAI;AAChB;AACA,CAAC;AACD,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,kDAAkD;AAClD,2DAA2D;AAC3D,8DAA8D,sBAAsB;AACpF,8DAA8D;AAC9D,eAAe;AACf;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,YAAY,UAAU;AAC5C,eAAe,+FAA+F,uEAAuE,IAAI;AACzL;AACA,CAAC;AACD,sBAAsB;AACtB,qBAAqB,mBAAO,CAAC,6CAAkC;AAC/D,qBAAqB;;;;;;;;;;;;AC5JrB;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kDAAkD;AAC3G;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,8BAA8B,gBAAgB,kBAAkB;AAChE;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,oCAAoC,wBAAwB,iBAAiB;AAC7E,oCAAoC,wBAAwB,IAAI;AAChE;AACA,wCAAwC;AACxC,wCAAwC,oBAAoB;AAC5D;AACA,wCAAwC;AACxC,wCAAwC,kBAAkwGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0BAA0B;AACluCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA,iBAAiB;AACjB,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,qDAAqD;AACrD,sDAAsD;AACtD,4DAA4D;AAC5D,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB;AAC/D;AACA;AACA,iBAAiB;AACjB,uDAAuD;AACvD,uDAAuD;AACvD,0DAA0D;AAC1D,oDAAoD;AACpD,mDAAmD;AACnD,qDAAqD;AACrD,sDAAsD;AACtD,4DAA4D;AAC5D,8DAA8D;AAC9D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yBAAyB;AACtF;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,0BAA0B;;;;;;;;;;;AC1mC3B,eAAe,KAAiD,oBAAoB,CAAuH,CAAC,iBAAiB,mBAAmB,cAAc,4BAA4B,YAAY,UAAU,iBAAiB,gEAAgE,SAAS,+BAA+B,kBAAkB,aAAa,cAAc,0BAA0B,WAAW,sCAAsC,SAAS,EAAE,WAAW,yCAAyC,6BAA6B,qBAAqB,EAAE,WAAW,+CAA+C,6BAA6B,qBAAqB,EAAE,WAAW,sDAAsD,6BAA6B,qBAAqB,EAAE,eAAe,aAAa,sCAAsC,SAAS,iDAAiD,eAAe,aAAa,cAAc,sRAAsR,6BAA6B,kFAAkF,cAAc,8CAA8C,WAAW,KAAK,wFAAwF,yBAAyB,EAAE,gBAAgB,uDAAuD,aAAa,4DAA4D,aAAa,mJAAmJ,+DAA+D,4BAA4B,YAAY,yBAAyB,aAAa,gCAAgC,aAAa,kEAAkE,uBAAuB,iCAAiC,IAAI,KAAK,WAAW,gCAAgC,MAAM,gBAAgB,KAAK,mEAAmE,WAAW,cAAc,KAAK,mDAAmD,iBAAiB,KAAK,qDAAqD,sCAAsC,SAAS,cAAc,cAAc,iBAAiB,aAAa,aAAa,sLAAsL,sBAAsB,sGAAsG,sCAAsC,4DAA4D,2VAA2V,eAAe,gBAAgB,IAAI,qBAAqB,8BAA8B,uCAAuC,OAAO,wBAAwB,QAAQ,KAAK,KAAK,gBAAgB,UAAU,kBAAkB,+BAA+B,aAAa,cAAc,IAAI,KAAK,WAAW,UAAU,mBAAmB,WAAW,EAAE,mCAAmC,kBAAkB,KAAK,WAAW,iBAAiB,qCAAqC,8BAA8B,IAAI,KAAK,WAAW,kCAAkC,eAAe,IAAI,OAAO,kCAAkC,UAAU,WAAW,KAAK,2BAA2B,MAAM,KAAK,cAAc,mBAAmB,WAAW,oBAAoB,6BAA6B,OAAO,uBAAuB,sBAAsB,sCAAsC,SAAS,EAAE,8EAA8E,gBAAgB,aAAa,qGAAqG,YAAY,4BAA4B,iBAAiB,aAAa,aAAa,0IAA0I,8DAA8D,sCAAsC,uUAAuU,yBAAyB,+BAA+B,WAAW,cAAc,2DAA2D,cAAc,8CAA8C,cAAc,uDAAuD,cAAc,sCAAsC,cAAc,sBAAsB,sBAAsB,yBAAyB,OAAO,mCAAmC,sCAAsC,SAAS,qGAAqG,uBAAuB,iBAAiB,aAAa,cAAc,0BAA0B,WAAW,cAAc,OAAO,0DAA0D,OAAO,2BAA2B,oOAAoO,oEAAoE,oGAAoG,sBAAsB,uEAAuE,wFAAwF,6DAA6D,UAAU,kEAAkE,gBAAgB,uEAAuE,8CAA8C,SAAS,OAAO,mHAAmH,2GAA2G,aAAa,WAAW,eAAe,oBAAoB,wBAAwB,QAAQ,GAAG,mCAAmC,+LAA+L,iCAAiC,uFAAuF,gBAAgB,4CAA4C,kCAAkC,gCAAgC,cAAc,8BAA8B,sCAAsC,iCAAiC,sIAAsI,sCAAsC,SAAS,EAAE,iCAAiC,YAAY,mBAAmB,KAAK,mBAAmB,sEAAsE,SAAS,2EAA2E,gBAAgB,aAAa,qGAAqG,YAAY,0NAA0N,GAAG","sources":["./node_modules/@ng-dynamic-forms/core/__ivy_ngcc__/fesm2015/core.js","./node_modules/@ng-dynamic-forms/ui-ionic/__ivy_ngcc__/fesm2015/ui-ionic.js","./node_modules/angular2-text-mask/__ivy_ngcc__/dist/angular2TextMask.js","./node_modules/reflect-metadata/Reflect.js","./node_modules/text-mask-core/dist/textMaskCore.js"],"sourcesContent":["import { QueryList, InjectionToken, ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, Optional, Directive, ChangeDetectorRef, TemplateRef, Input, INJECTOR, Injector, ComponentFactoryResolver, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { BehaviorSubject, isObservable, of, merge } from 'rxjs';\nimport 'reflect-metadata';\nimport { tap, map, startWith } from 'rxjs/operators';\nimport { Validators, NG_VALIDATORS, NG_ASYNC_VALIDATORS, FormArray, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\n// tslint:disable-next-line:ban-types\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n\nclass DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this._hasFocus = false;\n    }\n    get control() {\n        const control = this.group.get(this.model.id);\n        if (control === null) {\n            throw new Error(`form group does not contain an abstract control with id ${this.model.id}`);\n        }\n        return control;\n    }\n    get id() {\n        return this.layoutService.getElementId(this.model);\n    }\n    get hasFocus() {\n        return this._hasFocus;\n    }\n    get isInvalid() {\n        return this.control.invalid;\n    }\n    get isValid() {\n        return this.control.valid;\n    }\n    get errorMessages() {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n    get showErrorMessages() {\n        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n    }\n    getClass(context, place, model = this.model) {\n        var _a;\n        const controlLayout = model === this.model ? this.layout : (_a = this.layoutService.findByModel(model, this.formLayout)) !== null && _a !== void 0 ? _a : model.layout;\n        return this.layoutService.getClass(controlLayout, context, place);\n    }\n    onBlur($event) {\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n        this._hasFocus = false;\n        this.blur.emit($event);\n    }\n    onChange($event) {\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n        this.change.emit($event);\n    }\n    onCustomEvent($event, type = null, bypass = false) {\n        if (bypass) {\n            this.customEvent.emit($event);\n        }\n        else if (isString(type)) {\n            this.customEvent.emit({ customEvent: $event, customEventType: type });\n        }\n    }\n    onFocus($event) {\n        if ($event instanceof Event) {\n            $event.stopPropagation();\n        }\n        this._hasFocus = true;\n        this.focus.emit($event);\n    }\n}\n\nclass DynamicFormArrayComponent extends DynamicFormControlComponent {\n    get array() {\n        return this.control;\n    }\n    get startTemplate() {\n        return this.layoutService.getStartTemplate(this.model, this.templates);\n    }\n    get endTemplate() {\n        return this.layoutService.getEndTemplate(this.model, this.templates);\n    }\n    markForCheck() {\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n}\n\nclass DynamicFormGroupComponent extends DynamicFormControlComponent {\n    markForCheck() {\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n}\n\nconst DYNAMIC_FORM_CONTROL_MAP_FN = new InjectionToken(\"DYNAMIC_FORM_CONTROL_MAP_FN\");\nclass DynamicFormComponentService {\n    constructor(DYNAMIC_FORM_CONTROL_MAP_FN) {\n        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;\n        this.forms = [];\n        this.formControls = {};\n        this.DYNAMIC_FORM_CONTROL_MAP_FN = DYNAMIC_FORM_CONTROL_MAP_FN;\n    }\n    getForms() {\n        return this.forms.values();\n    }\n    registerForm(component) {\n        this.forms.push(component);\n    }\n    unregisterForm(component) {\n        const indexOf = this.forms.indexOf(component);\n        if (indexOf !== -1) {\n            this.forms.splice(indexOf, 1);\n        }\n    }\n    getFormControlRef(modelId, index) {\n        const ref = this.formControls[modelId];\n        if (isNumber(index)) {\n            return Array.isArray(ref) ? ref[index] : undefined;\n        }\n        else {\n            return ref;\n        }\n    }\n    registerFormControl(model, ref, index) {\n        if (isNumber(index)) { // threat model as array child\n            const arrayRef = this.formControls[model.id] || [];\n            if (Array.isArray(arrayRef)) {\n                arrayRef.splice(index, 0, ref);\n                this.formControls[model.id] = arrayRef;\n            }\n            else {\n                console.warn(`registerFormControlRef is called with index for a non-array form control: ${model.id}`);\n            }\n        }\n        else {\n            this.formControls[model.id] = ref;\n        }\n    }\n    unregisterFormControl(modelId, index) {\n        const componentRef = this.formControls[modelId];\n        if (isNumber(index)) {\n            if (Array.isArray(componentRef) && componentRef[index] !== undefined) {\n                componentRef.splice(index, 1);\n            }\n        }\n        else if (componentRef !== undefined) {\n            delete this.formControls[modelId];\n        }\n    }\n    getCustomComponentType(model) {\n        return isFunction(this.DYNAMIC_FORM_CONTROL_MAP_FN) ? this.DYNAMIC_FORM_CONTROL_MAP_FN(model) : null;\n    }\n}\nDynamicFormComponentService.ɵfac = function DynamicFormComponentService_Factory(t) { return new (t || DynamicFormComponentService)(ɵngcc0.ɵɵinject(DYNAMIC_FORM_CONTROL_MAP_FN, 8)); };\nDynamicFormComponentService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicFormComponentService_Factory() { return new DynamicFormComponentService(ɵɵinject(DYNAMIC_FORM_CONTROL_MAP_FN, 8)); }, token: DynamicFormComponentService, providedIn: \"root\" });\nDynamicFormComponentService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DYNAMIC_FORM_CONTROL_MAP_FN,] }, { type: Optional }] }\n];\n\nclass DynamicFormComponent {\n    constructor(changeDetectorRef, componentService) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.componentService = componentService;\n    }\n    ngOnInit() {\n        this.componentService.registerForm(this);\n    }\n    ngOnDestroy() {\n        this.componentService.unregisterForm(this);\n    }\n    trackByFn(_index, model) {\n        return model.id;\n    }\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n        if (this.components instanceof QueryList) {\n            this.components.forEach(component => component.markForCheck());\n        }\n    }\n    detectChanges() {\n        this.changeDetectorRef.detectChanges();\n    }\n    onBlur($event) {\n        this.blur.emit($event);\n    }\n    onChange($event) {\n        this.change.emit($event);\n    }\n    onFocus($event) {\n        this.focus.emit($event);\n    }\n    onCustomEvent($event, customEventEmitter) {\n        customEventEmitter.emit($event);\n    }\n}\nDynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) { return new (t || DynamicFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DynamicFormComponentService)); };\nDynamicFormComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicFormComponent });\nDynamicFormComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DynamicFormComponentService }\n];\n\nvar DynamicFormControlEventType;\n(function (DynamicFormControlEventType) {\n    DynamicFormControlEventType[\"Blur\"] = \"blur\";\n    DynamicFormControlEventType[\"Change\"] = \"change\";\n    DynamicFormControlEventType[\"Focus\"] = \"focus\";\n})(DynamicFormControlEventType || (DynamicFormControlEventType = {}));\nfunction isDynamicFormControlEvent($event) {\n    return isObject($event) && $event.hasOwnProperty(\"$event\");\n}\n\nvar DynamicFormHook;\n(function (DynamicFormHook) {\n    DynamicFormHook[\"Blur\"] = \"blur\";\n    DynamicFormHook[\"Change\"] = \"change\";\n    DynamicFormHook[\"Submit\"] = \"submit\";\n})(DynamicFormHook || (DynamicFormHook = {}));\n\nconst METADATA_KEY_SERIALIZABLE = \"SERIALIZABLE\";\nfunction serializable(name) {\n    return (target, key) => {\n        Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, { key, name: name || key }, target, key);\n    };\n}\nfunction getSerializables(target) {\n    const serializables = [];\n    for (const key in target) {\n        const metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);\n        if (metadata) {\n            serializables.push(metadata);\n        }\n    }\n    return serializables;\n}\nfunction serialize(target, prototype) {\n    return getSerializables(prototype || target).reduce((prev, prop) => {\n        prev[prop.name] = target[prop.key];\n        return prev;\n    }, {});\n}\n\nclass DynamicFormControlModel {\n    constructor(config, layout = null) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.parent = null;\n        this.asyncValidators = (_a = config.asyncValidators) !== null && _a !== void 0 ? _a : null;\n        this.errorMessages = (_b = config.errorMessages) !== null && _b !== void 0 ? _b : null;\n        this.hidden = isBoolean(config.hidden) ? config.hidden : false;\n        this.id = config.id;\n        this.label = (_c = config.label) !== null && _c !== void 0 ? _c : null;\n        this.labelTooltip = (_d = config.labelTooltip) !== null && _d !== void 0 ? _d : null;\n        this.controlTooltip = (_e = config.controlTooltip) !== null && _e !== void 0 ? _e : null;\n        this.layout = layout;\n        this.name = (_f = config.name) !== null && _f !== void 0 ? _f : config.id;\n        this.relations = Array.isArray(config.relations) ? config.relations : [];\n        this.updateOn = isString(config.updateOn) ? config.updateOn : null;\n        this.validators = (_g = config.validators) !== null && _g !== void 0 ? _g : null;\n        this.disabled$ = new BehaviorSubject(isBoolean(config.disabled) ? config.disabled : false);\n        this.disabled$.subscribe(disabled => this._disabled = disabled);\n        this.disabledChanges = this.disabled$.asObservable();\n    }\n    get disabled() {\n        return this.disabled$.getValue();\n    }\n    set disabled(disabled) {\n        this.disabled$.next(disabled);\n    }\n    get hasErrorMessages() {\n        return isObject(this.errorMessages);\n    }\n    toJSON() {\n        return serialize(this);\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormControlModel.prototype, \"asyncValidators\", void 0);\n__decorate([\n    serializable(\"disabled\"),\n    __metadata(\"design:type\", Boolean)\n], DynamicFormControlModel.prototype, \"_disabled\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormControlModel.prototype, \"errorMessages\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicFormControlModel.prototype, \"hidden\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormControlModel.prototype, \"id\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormControlModel.prototype, \"label\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormControlModel.prototype, \"labelTooltip\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormControlModel.prototype, \"controlTooltip\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormControlModel.prototype, \"layout\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormControlModel.prototype, \"name\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicFormControlModel.prototype, \"relations\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormControlModel.prototype, \"updateOn\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormControlModel.prototype, \"validators\", void 0);\n\nclass DynamicFormValueControlModel extends DynamicFormControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c;\n        super(config, layout);\n        this.additional = isObject(config.additional) ? config.additional : null;\n        this.hint = (_a = config.hint) !== null && _a !== void 0 ? _a : null;\n        this.required = isBoolean(config.required) ? config.required : false;\n        this.tabIndex = (_b = config.tabIndex) !== null && _b !== void 0 ? _b : null;\n        this.value$ = new BehaviorSubject((_c = config.value) !== null && _c !== void 0 ? _c : null);\n        this.value$.subscribe(value => this._value = value);\n        this.valueChanges = this.value$.asObservable();\n    }\n    get value() {\n        return this.value$.getValue();\n    }\n    set value(value) {\n        this.value$.next(value);\n    }\n    getAdditional(key, defaultValue) {\n        return this.additional !== null && this.additional.hasOwnProperty(key) ? this.additional[key] : defaultValue;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormValueControlModel.prototype, \"additional\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormValueControlModel.prototype, \"hint\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicFormValueControlModel.prototype, \"required\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicFormValueControlModel.prototype, \"tabIndex\", void 0);\n__decorate([\n    serializable(\"value\"),\n    __metadata(\"design:type\", Object)\n], DynamicFormValueControlModel.prototype, \"_value\", void 0);\n\nclass DynamicFormArrayGroupModel {\n    constructor(context, group = [], index = -1) {\n        this.$implicit = this;\n        this.context = context;\n        this.group = group;\n        this.index = index;\n    }\n    get parent() {\n        return this.context;\n    }\n    get(index) {\n        return this.group[index];\n    }\n    toJSON() {\n        return serialize(this);\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicFormArrayGroupModel.prototype, \"group\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicFormArrayGroupModel.prototype, \"index\", void 0);\nconst DYNAMIC_FORM_CONTROL_TYPE_ARRAY = \"ARRAY\";\nclass DynamicFormArrayModel extends DynamicFormControlModel {\n    constructor(config, layout) {\n        var _a, _b;\n        super(config, layout);\n        this.groups = [];\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_ARRAY;\n        if (isFunction(config.groupFactory)) {\n            this.groupFactory = config.groupFactory;\n        }\n        else {\n            throw new Error(\"group factory function must be specified for DynamicFormArrayModel\");\n        }\n        this.groupAsyncValidators = (_a = config.groupAsyncValidators) !== null && _a !== void 0 ? _a : null;\n        this.groupPrototype = this.groupFactory();\n        this.groupValidators = (_b = config.groupValidators) !== null && _b !== void 0 ? _b : null;\n        this.initialCount = isNumber(config.initialCount) ? config.initialCount : 1;\n        if (Array.isArray(config.groups)) {\n            config.groups.forEach((arrayGroup, index) => {\n                var _a;\n                this.groups.push(new DynamicFormArrayGroupModel(this, arrayGroup.group, (_a = arrayGroup.index) !== null && _a !== void 0 ? _a : index));\n            });\n        }\n        else {\n            for (let index = 0; index < this.initialCount; index++) {\n                this.addGroup();\n            }\n        }\n    }\n    updateGroupIndex() {\n        this.groups.forEach((group, index) => group.index = index);\n    }\n    get size() {\n        return this.groups.length;\n    }\n    get(index) {\n        return this.groups[index];\n    }\n    addGroup() {\n        return this.insertGroup(this.groups.length);\n    }\n    insertGroup(index) {\n        let group = new DynamicFormArrayGroupModel(this, this.groupFactory());\n        this.groups.splice(index, 0, group);\n        this.updateGroupIndex();\n        return group;\n    }\n    moveGroup(index, step) {\n        this.groups.splice(index + step, 0, ...this.groups.splice(index, 1));\n        this.updateGroupIndex();\n    }\n    removeGroup(index) {\n        this.groups.splice(index, 1);\n        this.updateGroupIndex();\n    }\n    clear() {\n        this.groups.splice(0);\n        this.updateGroupIndex();\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormArrayModel.prototype, \"groupAsyncValidators\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormArrayModel.prototype, \"groupValidators\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicFormArrayModel.prototype, \"groups\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicFormArrayModel.prototype, \"initialCount\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicFormArrayModel.prototype, \"groupPrototype\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormArrayModel.prototype, \"type\", void 0);\n\nclass DynamicCheckControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.labelPosition = (_a = config.labelPosition) !== null && _a !== void 0 ? _a : null;\n        this.checked = isBoolean(this.value) ? this.value : false;\n    }\n    get checked() {\n        return this.value;\n    }\n    set checked(checked) {\n        this.value = checked;\n    }\n    toggle() {\n        this.checked = !this.checked;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicCheckControlModel.prototype, \"labelPosition\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX = \"CHECKBOX\";\nclass DynamicCheckboxModel extends DynamicCheckControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n        this.indeterminate = isBoolean(config.indeterminate) ? config.indeterminate : false;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicCheckboxModel.prototype, \"indeterminate\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicCheckboxModel.prototype, \"type\", void 0);\n\nclass DynamicInputControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c, _d;\n        super(config, layout);\n        this.autoComplete = (_a = config.autoComplete) !== null && _a !== void 0 ? _a : \"on\";\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;\n        this.minLength = isNumber(config.minLength) ? config.minLength : null;\n        this.placeholder = (_b = config.placeholder) !== null && _b !== void 0 ? _b : \"\";\n        this.prefix = (_c = config.prefix) !== null && _c !== void 0 ? _c : null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;\n        this.suffix = (_d = config.suffix) !== null && _d !== void 0 ? _d : null;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputControlModel.prototype, \"autoComplete\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicInputControlModel.prototype, \"autoFocus\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicInputControlModel.prototype, \"maxLength\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicInputControlModel.prototype, \"minLength\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputControlModel.prototype, \"placeholder\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputControlModel.prototype, \"prefix\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicInputControlModel.prototype, \"readOnly\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicInputControlModel.prototype, \"spellCheck\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputControlModel.prototype, \"suffix\", void 0);\n\nfunction maskToString(mask) {\n    if (isString(mask)) {\n        return mask;\n    }\n    else if (mask instanceof RegExp) {\n        return mask.toString();\n    }\n    else if (Array.isArray(mask)) {\n        return mask.map(value => maskToString(value));\n    }\n    return null;\n}\nfunction maskFromString(mask) {\n    if (isString(mask)) {\n        const isRegExp = mask.startsWith(\"/\") && mask.endsWith(\"/\");\n        return isRegExp ? new RegExp(mask.slice(1, mask.length - 1)) : mask;\n    }\n    else if (Array.isArray(mask)) {\n        return mask.map(value => maskFromString(value));\n    }\n    return null;\n}\nfunction parseReviver(_key, value) {\n    const regexDateISO = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|([+\\-])([\\d|:]*))?$/;\n    return isString(value) && regexDateISO.test(value) ? new Date(value) : value;\n}\n\nconst DYNAMIC_FORM_CONTROL_TYPE_INPUT = \"INPUT\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = \"color\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE = \"date\";\n//export const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = \"datetime\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = \"datetime-local\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = \"email\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = \"file\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = \"month\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = \"number\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = \"password\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = \"range\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = \"search\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = \"tel\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = \"text\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = \"time\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = \"url\";\nconst DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = \"week\";\nclass DynamicInputModel extends DynamicInputControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c, _d;\n        super(config, layout);\n        this.files = null;\n        this.list$ = null;\n        this._list = null;\n        this._listId = null;\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_INPUT;\n        this.accept = (_a = config.accept) !== null && _a !== void 0 ? _a : null;\n        this.inputType = (_b = config.inputType) !== null && _b !== void 0 ? _b : DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT;\n        this.mask = (_c = config.mask) !== null && _c !== void 0 ? _c : null;\n        this.max = config.max !== undefined ? config.max : null;\n        this.min = config.min !== undefined ? config.min : null;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : null;\n        this.pattern = (_d = config.pattern) !== null && _d !== void 0 ? _d : null;\n        this.step = isNumber(config.step) ? config.step : null;\n        if (config.list !== undefined) {\n            this.list = config.list;\n            this._listId = `${this.id}List`;\n        }\n    }\n    get listId() {\n        return this._listId;\n    }\n    get hasList() {\n        return isObservable(this.list$);\n    }\n    set list(list) {\n        if (Array.isArray(list)) {\n            this._list = list;\n            this.list$ = of(this._list);\n        }\n        else if (isObservable(list)) {\n            this.list$ = list.pipe(tap(list => this._list = list));\n        }\n        else {\n            this._list = null;\n            this.list$ = null;\n        }\n    }\n    toJSON() {\n        const json = super.toJSON();\n        if (this.mask !== null) {\n            json.mask = isFunction(this.mask) ? this.mask : maskToString(this.mask);\n        }\n        return json;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputModel.prototype, \"accept\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputModel.prototype, \"inputType\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicInputModel.prototype, \"mask\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicInputModel.prototype, \"max\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicInputModel.prototype, \"min\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicInputModel.prototype, \"multiple\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputModel.prototype, \"pattern\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicInputModel.prototype, \"step\", void 0);\n__decorate([\n    serializable(\"list\"),\n    __metadata(\"design:type\", Array)\n], DynamicInputModel.prototype, \"_list\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicInputModel.prototype, \"type\", void 0);\n\nvar DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT;\n(function (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT) {\n    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT[\"Start\"] = \"START\";\n    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT[\"End\"] = \"END\";\n})(DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT || (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT = {}));\nclass DynamicTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this.align = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;\n        this.as = null;\n    }\n}\nDynamicTemplateDirective.ɵfac = function DynamicTemplateDirective_Factory(t) { return new (t || DynamicTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDynamicTemplateDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicTemplateDirective, selectors: [[\"ng-template\", \"modelId\", \"\"], [\"ng-template\", \"modelType\", \"\"]], inputs: { align: \"align\", as: \"as\", index: \"index\", modelId: \"modelId\", modelType: \"modelType\" } });\nDynamicTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nDynamicTemplateDirective.propDecorators = {\n    align: [{ type: Input }],\n    as: [{ type: Input }],\n    index: [{ type: Input }],\n    modelId: [{ type: Input }],\n    modelType: [{ type: Input }]\n};\n\nclass DynamicFormLayoutService {\n    findById(id, formLayout) {\n        if (isObject(formLayout)) {\n            for (const key of Object.keys(formLayout)) {\n                if (key === id) {\n                    return formLayout[key];\n                }\n            }\n        }\n        return null;\n    }\n    findByModel(model, formLayout) {\n        let controlLayout = null;\n        if (isObject(formLayout)) {\n            for (const key of Object.keys(formLayout)) {\n                key.split(\",\").forEach(substring => {\n                    const selector = substring.trim();\n                    if (selector === model.id || selector === model.type) {\n                        controlLayout = formLayout[key];\n                    }\n                });\n            }\n        }\n        return controlLayout;\n    }\n    filterTemplatesByModel(model, templates) {\n        const filterCallback = (template) => {\n            return template.modelId === model.id || template.modelType === model.type;\n        };\n        if (templates instanceof QueryList) {\n            return templates.filter(filterCallback);\n        }\n        else if (Array.isArray(templates)) {\n            return templates.filter(filterCallback);\n        }\n        return [];\n    }\n    getAlignedTemplate(model, templates, alignment) {\n        return this.filterTemplatesByModel(model, templates)\n            .find(template => template.as === null && template.align === alignment);\n    }\n    /*\n    getIndexedTemplates(model: DynamicFormControlModel, templates: DynamicFormControlTemplates): DynamicTemplateDirective[] | undefined {\n        return this.filterTemplatesByModel(model, templates).filter(template => template.as === null);\n    }\n    */\n    getStartTemplate(model, templates) {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.Start);\n    }\n    getEndTemplate(model, templates) {\n        return this.getAlignedTemplate(model, templates, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End);\n    }\n    getClass(layout, context, place) {\n        if (isObject(layout) && layout.hasOwnProperty(context)) {\n            const config = layout[context];\n            if (config.hasOwnProperty(place)) {\n                return config[place];\n            }\n        }\n        return \"\";\n    }\n    getHostClass(layout) {\n        const keys = [\"element\", \"grid\"];\n        let cls = \"\";\n        if (isObject(layout)) {\n            keys.forEach(key => {\n                if (isObject(layout[key]) && isString(layout[key].host)) {\n                    cls = cls + ` ${layout[key].host}`;\n                }\n            });\n        }\n        return cls;\n    }\n    getElementId(model) {\n        let id = model.id;\n        let parent = model.parent;\n        while (parent !== null) {\n            if (parent instanceof DynamicFormArrayGroupModel) {\n                id = `${parent.context.id}-${parent.index}-${model.id}`;\n                break;\n            }\n            parent = parent.parent;\n        }\n        return id;\n    }\n}\nDynamicFormLayoutService.ɵfac = function DynamicFormLayoutService_Factory(t) { return new (t || DynamicFormLayoutService)(); };\nDynamicFormLayoutService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicFormLayoutService_Factory() { return new DynamicFormLayoutService(); }, token: DynamicFormLayoutService, providedIn: \"root\" });\n\nconst DYNAMIC_VALIDATORS = new InjectionToken(\"DYNAMIC_VALIDATORS\");\n\nconst DEFAULT_ERROR_STATE_MATCHER = (control, model, hasFocus) => {\n    return control.touched && !hasFocus;\n};\nconst CHANGE_ERROR_STATE_MATCHER = (control, model, hasFocus) => {\n    return (model.updateOn === DynamicFormHook.Change || model.updateOn === null) ? control.dirty : control.touched && !hasFocus;\n};\nconst DYNAMIC_ERROR_MESSAGES_MATCHER = new InjectionToken(\"DYNAMIC_ERROR_MESSAGES_MATCHER\");\n\nclass DynamicFormValidationService {\n    constructor(_NG_VALIDATORS, _NG_ASYNC_VALIDATORS, _DYNAMIC_VALIDATORS, _DYNAMIC_ERROR_MESSAGES_MATCHER) {\n        this._NG_VALIDATORS = _NG_VALIDATORS;\n        this._NG_ASYNC_VALIDATORS = _NG_ASYNC_VALIDATORS;\n        this._DYNAMIC_VALIDATORS = _DYNAMIC_VALIDATORS;\n        this._DYNAMIC_ERROR_MESSAGES_MATCHER = _DYNAMIC_ERROR_MESSAGES_MATCHER;\n    }\n    getValidatorFn(validatorName, validatorArgs = null, validatorsToken = this._NG_VALIDATORS) {\n        let validatorFn;\n        if (Validators.hasOwnProperty(validatorName)) { // Built-in Angular Validators\n            validatorFn = Validators[validatorName];\n        }\n        else { // Custom Validators\n            if (this._DYNAMIC_VALIDATORS && this._DYNAMIC_VALIDATORS.has(validatorName)) {\n                validatorFn = this._DYNAMIC_VALIDATORS.get(validatorName);\n            }\n            else if (validatorsToken) {\n                validatorFn = validatorsToken.find(validator => validator.name === validatorName);\n            }\n        }\n        if (validatorFn === undefined) { // throw when no validator could be resolved\n            throw new Error(`validator \"${validatorName}\" is not provided via NG_VALIDATORS, NG_ASYNC_VALIDATORS or DYNAMIC_FORM_VALIDATORS`);\n        }\n        if (validatorArgs !== null) {\n            return validatorFn(validatorArgs);\n        }\n        return validatorFn;\n    }\n    getValidatorFns(validatorsConfig, validatorsToken = this._NG_VALIDATORS) {\n        let validatorFns = [];\n        if (isObject(validatorsConfig)) {\n            validatorFns = Object.keys(validatorsConfig).map(validatorConfigKey => {\n                const validatorConfigValue = validatorsConfig[validatorConfigKey];\n                if (this.isValidatorDescriptor(validatorConfigValue)) {\n                    const descriptor = validatorConfigValue;\n                    return this.getValidatorFn(descriptor.name, descriptor.args, validatorsToken);\n                }\n                return this.getValidatorFn(validatorConfigKey, validatorConfigValue, validatorsToken);\n            });\n        }\n        return validatorFns;\n    }\n    getValidator(validatorName, validatorArgs = null) {\n        return this.getValidatorFn(validatorName, validatorArgs);\n    }\n    getAsyncValidator(validatorName, validatorArgs = null) {\n        return this.getValidatorFn(validatorName, validatorArgs, this._NG_ASYNC_VALIDATORS);\n    }\n    getValidators(validatorsConfig) {\n        return this.getValidatorFns(validatorsConfig);\n    }\n    getAsyncValidators(asyncValidatorsConfig) {\n        return this.getValidatorFns(asyncValidatorsConfig, this._NG_ASYNC_VALIDATORS);\n    }\n    updateValidators(validatorsConfig, control, model) {\n        model.validators = validatorsConfig;\n        if (validatorsConfig === null) {\n            control.clearValidators();\n        }\n        else {\n            control.setValidators(this.getValidators(validatorsConfig));\n        }\n        control.updateValueAndValidity();\n    }\n    updateAsyncValidators(asyncValidatorsConfig, control, model) {\n        model.asyncValidators = asyncValidatorsConfig;\n        if (asyncValidatorsConfig === null) {\n            control.clearAsyncValidators();\n        }\n        else {\n            control.setAsyncValidators(this.getAsyncValidators(asyncValidatorsConfig));\n        }\n        control.updateValueAndValidity();\n    }\n    showErrorMessages(control, model, hasFocus) {\n        const precondition = control.invalid && model.hasErrorMessages;\n        const matcher = this._DYNAMIC_ERROR_MESSAGES_MATCHER ? this._DYNAMIC_ERROR_MESSAGES_MATCHER(control, model, hasFocus) :\n            DEFAULT_ERROR_STATE_MATCHER(control, model, hasFocus);\n        return precondition && matcher;\n    }\n    parseErrorMessageConfig(template, model, error = null) {\n        return template.replace(/{{\\s*(.+?)\\s*}}/mg, (_match, expression) => {\n            let propertySource = model;\n            let propertyName = expression;\n            if (expression.indexOf(\"validator.\") >= 0 && error) {\n                propertySource = error;\n                propertyName = expression.replace(\"validator.\", \"\");\n            }\n            return propertySource[propertyName] !== null && propertySource[propertyName] !== undefined ?\n                propertySource[propertyName] : null;\n        });\n    }\n    createErrorMessages(control, model) {\n        const messages = [];\n        if (model.hasErrorMessages) {\n            const messagesConfig = model.errorMessages;\n            Object.keys(control.errors || {}).forEach(validationErrorKey => {\n                let messageKey = validationErrorKey;\n                if (validationErrorKey === \"minlength\" || validationErrorKey === \"maxlength\") {\n                    messageKey = messageKey.replace(\"length\", \"Length\");\n                }\n                if (messagesConfig.hasOwnProperty(messageKey)) {\n                    const validationError = control.getError(validationErrorKey);\n                    const messageTemplate = messagesConfig[messageKey];\n                    messages.push(this.parseErrorMessageConfig(messageTemplate, model, validationError));\n                }\n            });\n        }\n        return messages;\n    }\n    isFormHook(value) {\n        return isString(value) && Object.values(DynamicFormHook).includes(value);\n    }\n    isValidatorDescriptor(value) {\n        if (isObject(value)) {\n            return value.hasOwnProperty(\"name\") && value.hasOwnProperty(\"args\");\n        }\n        return false;\n    }\n}\nDynamicFormValidationService.ɵfac = function DynamicFormValidationService_Factory(t) { return new (t || DynamicFormValidationService)(ɵngcc0.ɵɵinject(NG_VALIDATORS, 8), ɵngcc0.ɵɵinject(NG_ASYNC_VALIDATORS, 8), ɵngcc0.ɵɵinject(DYNAMIC_VALIDATORS, 8), ɵngcc0.ɵɵinject(DYNAMIC_ERROR_MESSAGES_MATCHER, 8)); };\nDynamicFormValidationService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicFormValidationService_Factory() { return new DynamicFormValidationService(ɵɵinject(NG_VALIDATORS, 8), ɵɵinject(NG_ASYNC_VALIDATORS, 8), ɵɵinject(DYNAMIC_VALIDATORS, 8), ɵɵinject(DYNAMIC_ERROR_MESSAGES_MATCHER, 8)); }, token: DynamicFormValidationService, providedIn: \"root\" });\nDynamicFormValidationService.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Map, decorators: [{ type: Optional }, { type: Inject, args: [DYNAMIC_VALIDATORS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DYNAMIC_ERROR_MESSAGES_MATCHER,] }] }\n];\n\nconst DYNAMIC_FORM_CONTROL_TYPE_GROUP = \"GROUP\";\nclass DynamicFormGroupModel extends DynamicFormControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.group = [];\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;\n        this.group = Array.isArray(config.group) ? config.group : [];\n        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;\n    }\n    get(index) {\n        return this.group[index];\n    }\n    set(index, controlModel) {\n        this.group[index] = controlModel;\n    }\n    add(controlModel) {\n        this.group.push(controlModel);\n    }\n    insert(index, controlModel) {\n        this.group.splice(index, 0, controlModel);\n    }\n    move(index, step) {\n        this.group.splice(index + step, 0, ...this.group.splice(index, 1));\n    }\n    remove(index) {\n        this.group.splice(index, 1);\n    }\n    size() {\n        return this.group.length;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicFormGroupModel.prototype, \"group\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormGroupModel.prototype, \"legend\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = \"CHECKBOX_GROUP\";\nclass DynamicCheckboxGroupModel extends DynamicFormGroupModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;\n    }\n    check(...indices) {\n        indices.forEach(index => this.group[index].checked = true);\n    }\n    uncheck(...indices) {\n        indices.forEach(index => this.group[index].checked = false);\n    }\n    checkAll() {\n        this.group.forEach(model => model.checked = true);\n    }\n    uncheckAll() {\n        this.group.forEach(model => model.checked = false);\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicCheckboxGroupModel.prototype, \"group\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicCheckboxGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER = \"COLORPICKER\";\nclass DynamicColorPickerModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER;\n        this.format = isString(config.format) ? config.format : null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicColorPickerModel.prototype, \"format\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicColorPickerModel.prototype, \"inline\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicColorPickerModel.prototype, \"type\", void 0);\n\nclass DynamicDateControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c, _d;\n        super(config, layout);\n        this.format = (_a = config.format) !== null && _a !== void 0 ? _a : null;\n        this.max = (_b = config.max) !== null && _b !== void 0 ? _b : null;\n        this.min = (_c = config.min) !== null && _c !== void 0 ? _c : null;\n        this.placeholder = (_d = config.placeholder) !== null && _d !== void 0 ? _d : null;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDateControlModel.prototype, \"format\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicDateControlModel.prototype, \"max\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicDateControlModel.prototype, \"min\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDateControlModel.prototype, \"placeholder\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER = \"DATEPICKER\";\nclass DynamicDatePickerModel extends DynamicDateControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER;\n        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;\n        this.focusedDate = (_a = config.focusedDate) !== null && _a !== void 0 ? _a : null;\n        this.inline = isBoolean(config.inline) ? config.inline : false;\n        this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;\n        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;\n        this.toggleIcon = isString(config.toggleIcon) ? config.toggleIcon : null;\n        this.toggleLabel = isString(config.toggleLabel) ? config.toggleLabel : null;\n        this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicDatePickerModel.prototype, \"autoFocus\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicDatePickerModel.prototype, \"focusedDate\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicDatePickerModel.prototype, \"inline\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDatePickerModel.prototype, \"prefix\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicDatePickerModel.prototype, \"readOnly\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDatePickerModel.prototype, \"suffix\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDatePickerModel.prototype, \"toggleIcon\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDatePickerModel.prototype, \"toggleLabel\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicDatePickerModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_EDITOR = \"EDITOR\";\nclass DynamicEditorModel extends DynamicInputControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_EDITOR;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicEditorModel.prototype, \"type\", void 0);\n\nclass DynamicFileControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicFileControlModel.prototype, \"multiple\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD = \"FILE_UPLOAD\";\nclass DynamicFileUploadModel extends DynamicFileControlModel {\n    constructor(config, layout) {\n        var _a, _b;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD;\n        this.accept = Array.isArray(config.accept) ? config.accept : null;\n        this.autoUpload = isBoolean(config.autoUpload) ? config.autoUpload : true;\n        this.maxSize = isNumber(config.maxSize) ? config.maxSize : null;\n        this.minSize = isNumber(config.minSize) ? config.minSize : null;\n        this.removeUrl = (_a = config.removeUrl) !== null && _a !== void 0 ? _a : null;\n        this.showFileList = isBoolean(config.showFileList) ? config.showFileList : true;\n        this.url = (_b = config.url) !== null && _b !== void 0 ? _b : null;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Array)\n], DynamicFileUploadModel.prototype, \"accept\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicFileUploadModel.prototype, \"autoUpload\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicFileUploadModel.prototype, \"maxSize\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicFileUploadModel.prototype, \"minSize\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFileUploadModel.prototype, \"removeUrl\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicFileUploadModel.prototype, \"showFileList\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFileUploadModel.prototype, \"url\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFileUploadModel.prototype, \"type\", void 0);\n\nclass DynamicFormOption {\n    constructor(config) {\n        var _a;\n        this.disabled = isBoolean(config.disabled) ? config.disabled : false;\n        this.label = (_a = config.label) !== null && _a !== void 0 ? _a : null;\n        this.value = config.value;\n    }\n    get text() {\n        return this.label;\n    }\n    set text(text) {\n        this.label = text;\n    }\n    toJSON() {\n        return serialize(this);\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicFormOption.prototype, \"disabled\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicFormOption.prototype, \"label\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Object)\n], DynamicFormOption.prototype, \"value\", void 0);\nclass DynamicOptionControlModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this._options = [];\n        this.options = config.options;\n    }\n    updateOptions$() {\n        this.options$ = of(this.options);\n    }\n    set options(options) {\n        if (Array.isArray(options)) {\n            this._options = options.map(optionConfig => new DynamicFormOption(optionConfig));\n            this.updateOptions$();\n        }\n        else if (isObservable(options)) {\n            this.options$ = options.pipe(map(optionsConfig => {\n                this._options = optionsConfig.map(optionConfig => new DynamicFormOption(optionConfig));\n                return this._options;\n            }));\n        }\n        else {\n            this.updateOptions$();\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    add(optionConfig) {\n        return this.insert(this.options.length, optionConfig);\n    }\n    get(index) {\n        return this.options[index];\n    }\n    insert(index, optionConfig) {\n        const option = new DynamicFormOption(optionConfig);\n        this.options.splice(index, 0, option);\n        this.updateOptions$();\n        return option;\n    }\n    remove(...indices) {\n        indices.forEach(index => this.options.splice(index, 1));\n        this.updateOptions$();\n    }\n}\n__decorate([\n    serializable(\"options\"),\n    __metadata(\"design:type\", Array)\n], DynamicOptionControlModel.prototype, \"_options\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP = \"RADIO_GROUP\";\nclass DynamicRadioGroupModel extends DynamicOptionControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP;\n        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;\n    }\n    select(index) {\n        this.value = this.get(index).value;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicRadioGroupModel.prototype, \"legend\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicRadioGroupModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_RATING = \"RATING\";\nclass DynamicRatingModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_RATING;\n        this.max = isNumber(config.max) ? config.max : 10;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicRatingModel.prototype, \"max\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicRatingModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SELECT = \"SELECT\";\nclass DynamicSelectModel extends DynamicOptionControlModel {\n    constructor(config, layout) {\n        var _a, _b, _c;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_SELECT;\n        this.compareWithFn = isFunction(config.compareWithFn) ? config.compareWithFn : Object.is;\n        this.filterable = isBoolean(config.filterable) ? config.filterable : false;\n        this.multiple = isBoolean(config.multiple) ? config.multiple : false;\n        this.placeholder = (_a = config.placeholder) !== null && _a !== void 0 ? _a : \"\";\n        this.prefix = (_b = config.prefix) !== null && _b !== void 0 ? _b : null;\n        this.suffix = (_c = config.suffix) !== null && _c !== void 0 ? _c : null;\n    }\n    select(...indices) {\n        this.value = this.multiple ? indices.map(index => this.get(index).value) : this.get(indices[0]).value;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicSelectModel.prototype, \"filterable\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicSelectModel.prototype, \"multiple\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSelectModel.prototype, \"placeholder\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSelectModel.prototype, \"prefix\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSelectModel.prototype, \"suffix\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSelectModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SLIDER = \"SLIDER\";\nclass DynamicSliderModel extends DynamicFormValueControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;\n        this.max = isNumber(config.max) ? config.max : 10;\n        this.min = isNumber(config.min) ? config.min : 0;\n        this.step = isNumber(config.step) ? config.step : 1;\n        this.vertical = isBoolean(config.vertical) ? config.vertical : false;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicSliderModel.prototype, \"max\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicSliderModel.prototype, \"min\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicSliderModel.prototype, \"step\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicSliderModel.prototype, \"vertical\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSliderModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_SWITCH = \"SWITCH\";\nclass DynamicSwitchModel extends DynamicCheckControlModel {\n    constructor(config, layout) {\n        var _a, _b;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_SWITCH;\n        this.offLabel = (_a = config.offLabel) !== null && _a !== void 0 ? _a : null;\n        this.onLabel = (_b = config.onLabel) !== null && _b !== void 0 ? _b : null;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSwitchModel.prototype, \"offLabel\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSwitchModel.prototype, \"onLabel\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicSwitchModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA = \"TEXTAREA\";\nconst DYNAMIC_FORM_TEXTAREA_WRAP_HARD = \"hard\";\nconst DYNAMIC_FORM_TEXTAREA_WRAP_SOFT = \"soft\";\nclass DynamicTextAreaModel extends DynamicInputControlModel {\n    constructor(config, layout) {\n        var _a;\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA;\n        this.cols = isNumber(config.cols) ? config.cols : 20;\n        this.rows = isNumber(config.rows) ? config.rows : 2;\n        this.wrap = (_a = config.wrap) !== null && _a !== void 0 ? _a : DYNAMIC_FORM_TEXTAREA_WRAP_SOFT;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicTextAreaModel.prototype, \"cols\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Number)\n], DynamicTextAreaModel.prototype, \"rows\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicTextAreaModel.prototype, \"wrap\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicTextAreaModel.prototype, \"type\", void 0);\n\nconst DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER = \"TIMEPICKER\";\nclass DynamicTimePickerModel extends DynamicDateControlModel {\n    constructor(config, layout) {\n        super(config, layout);\n        this.type = DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER;\n        this.meridian = isBoolean(config.meridian) ? config.meridian : false;\n        this.showSeconds = isBoolean(config.showSeconds) ? config.showSeconds : false;\n    }\n}\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicTimePickerModel.prototype, \"meridian\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", Boolean)\n], DynamicTimePickerModel.prototype, \"showSeconds\", void 0);\n__decorate([\n    serializable(),\n    __metadata(\"design:type\", String)\n], DynamicTimePickerModel.prototype, \"type\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormComponentService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DYNAMIC_FORM_CONTROL_MAP_FN]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormComponent, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: DynamicFormComponentService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicTemplateDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"ng-template[modelId],ng-template[modelType]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { align: [{\n            type: Input\n        }], as: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], modelId: [{\n            type: Input\n        }], modelType: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormLayoutService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], null, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormValidationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Map, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DYNAMIC_VALIDATORS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DYNAMIC_ERROR_MESSAGES_MATCHER]\n            }] }]; }, null); })();\n\nclass DynamicFormService {\n    constructor(componentService, validationService) {\n        this.componentService = componentService;\n        this.validationService = validationService;\n    }\n    createAbstractControlOptions(validatorsConfig = null, asyncValidatorsConfig = null, updateOn = null) {\n        return {\n            asyncValidators: asyncValidatorsConfig !== null ? this.validationService.getAsyncValidators(asyncValidatorsConfig) : null,\n            validators: validatorsConfig !== null ? this.validationService.getValidators(validatorsConfig) : null,\n            updateOn: updateOn !== null && this.validationService.isFormHook(updateOn) ? updateOn : DynamicFormHook.Change\n        };\n    }\n    createFormArray(formArrayModel) {\n        const controls = [];\n        const options = this.createAbstractControlOptions(formArrayModel.validators, formArrayModel.asyncValidators, formArrayModel.updateOn);\n        for (let index = 0; index < formArrayModel.size; index++) {\n            const groupModel = formArrayModel.get(index);\n            const groupOptions = this.createAbstractControlOptions(formArrayModel.groupValidators, formArrayModel.groupAsyncValidators, formArrayModel.updateOn);\n            controls.push(this.createFormGroup(groupModel.group, groupOptions, groupModel));\n        }\n        return new FormArray(controls, options);\n    }\n    createFormGroup(formModel, options = null, parent = null) {\n        const controls = {};\n        formModel.forEach(model => {\n            model.parent = parent;\n            switch (model.type) {\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    controls[model.id] = this.createFormArray(model);\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    const groupModel = model;\n                    const groupOptions = this.createAbstractControlOptions(groupModel.validators, groupModel.asyncValidators, groupModel.updateOn);\n                    controls[model.id] = this.createFormGroup(groupModel.group, groupOptions, groupModel);\n                    break;\n                default:\n                    const controlModel = model;\n                    const controlState = { value: controlModel.value, disabled: controlModel.disabled };\n                    const controlOptions = this.createAbstractControlOptions(controlModel.validators, controlModel.asyncValidators, controlModel.updateOn);\n                    controls[model.id] = new FormControl(controlState, controlOptions);\n            }\n        });\n        return new FormGroup(controls, options);\n    }\n    getPathSegment(model) {\n        return model instanceof DynamicFormArrayGroupModel ? model.index.toString() : model.id;\n    }\n    getPath(model, join = false) {\n        const path = [this.getPathSegment(model)];\n        let parent = model.parent;\n        while (parent) {\n            path.unshift(this.getPathSegment(parent));\n            parent = parent.parent;\n        }\n        return join ? path.join(\".\") : path;\n    }\n    addFormGroupControl(formGroup, formModel, ...models) {\n        if (formModel instanceof DynamicFormGroupModel) {\n            this.insertFormGroupControl(formModel.size(), formGroup, formModel, ...models);\n        }\n        else {\n            const model = formModel;\n            this.insertFormGroupControl(model.length, formGroup, model, ...models);\n        }\n    }\n    moveFormGroupControl(index, step, formModel) {\n        if (formModel instanceof DynamicFormGroupModel) {\n            formModel.move(index, step);\n        }\n        else {\n            const model = formModel;\n            model.splice(index + step, 0, ...model.splice(index, 1));\n        }\n    }\n    insertFormGroupControl(index, formGroup, formModel, ...models) {\n        const parent = formModel instanceof DynamicFormGroupModel ? formModel : null;\n        const controls = this.createFormGroup(models, null, parent).controls;\n        Object.keys(controls).forEach((controlName, idx) => {\n            const controlModel = models[idx];\n            if (formModel instanceof DynamicFormGroupModel) {\n                formModel.insert(index, controlModel);\n            }\n            else {\n                formModel.splice(index, 0, controlModel);\n            }\n            formGroup.addControl(controlName, controls[controlName]);\n        });\n    }\n    removeFormGroupControl(index, formGroup, formModel) {\n        if (formModel instanceof DynamicFormGroupModel) {\n            formGroup.removeControl(formModel.get(index).id);\n            formModel.remove(index);\n        }\n        else {\n            formGroup.removeControl(formModel[index].id);\n            formModel.splice(index, 1);\n        }\n    }\n    addFormArrayGroup(formArray, formArrayModel) {\n        const groupModel = formArrayModel.addGroup();\n        formArray.push(this.createFormGroup(groupModel.group, null, groupModel));\n    }\n    insertFormArrayGroup(index, formArray, formArrayModel) {\n        const groupModel = formArrayModel.insertGroup(index);\n        formArray.insert(index, this.createFormGroup(groupModel.group, null, groupModel));\n    }\n    moveFormArrayGroup(index, step, formArray, formArrayModel) {\n        const newIndex = index + step;\n        const moveUp = step >= 0;\n        if ((index >= 0 && index < formArrayModel.size) && (newIndex >= 0 && newIndex < formArrayModel.size)) {\n            const movingGroups = [];\n            for (let i = moveUp ? index : newIndex; i <= (moveUp ? newIndex : index); i++) {\n                movingGroups.push(formArray.at(i));\n            }\n            movingGroups.forEach((formControl, idx) => {\n                let position;\n                if (moveUp) {\n                    position = idx === 0 ? newIndex : index + idx - 1;\n                }\n                else {\n                    position = idx === movingGroups.length - 1 ? newIndex : newIndex + idx + 1;\n                }\n                formArray.setControl(position, formControl);\n            });\n            formArrayModel.moveGroup(index, step);\n        }\n        else {\n            throw new Error(`form array group cannot be moved due to index or new index being out of bounds`);\n        }\n    }\n    removeFormArrayGroup(index, formArray, formArrayModel) {\n        formArray.removeAt(index);\n        formArrayModel.removeGroup(index);\n    }\n    clearFormArray(formArray, formArrayModel) {\n        formArray.clear();\n        formArrayModel.clear();\n    }\n    findById(id, formModel) {\n        let result = null;\n        const findByIdFn = (modelId, groupModel) => {\n            for (const controlModel of groupModel) {\n                if (controlModel.id === modelId) {\n                    result = controlModel;\n                    break;\n                }\n                if (controlModel instanceof DynamicFormGroupModel) {\n                    findByIdFn(modelId, controlModel.group);\n                }\n            }\n        };\n        findByIdFn(id, formModel);\n        return result;\n    }\n    findModelById(id, formModel) {\n        return this.findById(id, formModel);\n    }\n    findControlByModel(model, group) {\n        return group.root.get(this.getPath(model, true));\n    }\n    detectChanges(formComponent) {\n        if (formComponent instanceof DynamicFormComponent) {\n            formComponent.markForCheck();\n            formComponent.detectChanges();\n        }\n        else {\n            for (const form of this.componentService.getForms()) {\n                form.markForCheck();\n                form.detectChanges();\n            }\n        }\n    }\n    fromJSON(json) {\n        const formModelJSON = isString(json) ? JSON.parse(json, parseReviver) : json;\n        const formModel = [];\n        formModelJSON.forEach((model) => {\n            var _a;\n            const layout = (_a = model.layout) !== null && _a !== void 0 ? _a : null;\n            switch (model.type) {\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    const formArrayModel = model;\n                    if (Array.isArray(formArrayModel.groups)) {\n                        formArrayModel.groups.forEach((groupModel) => {\n                            groupModel.group = this.fromJSON(groupModel.group);\n                        });\n                    }\n                    formArrayModel.groupFactory = () => {\n                        return this.fromJSON(formArrayModel.groupPrototype);\n                    };\n                    formModel.push(new DynamicFormArrayModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                    formModel.push(new DynamicCheckboxModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    model.group = this.fromJSON(model.group);\n                    formModel.push(new DynamicCheckboxGroupModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER:\n                    formModel.push(new DynamicColorPickerModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n                    formModel.push(new DynamicDatePickerModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:\n                    formModel.push(new DynamicEditorModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD:\n                    model.value = null;\n                    formModel.push(new DynamicFileUploadModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                    model.group = this.fromJSON(model.group);\n                    formModel.push(new DynamicFormGroupModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                    const inputModel = model;\n                    if (inputModel.mask !== null) {\n                        if (!(inputModel.mask instanceof Function)) {\n                            inputModel.mask = maskFromString(inputModel.mask);\n                        }\n                    }\n                    formModel.push(new DynamicInputModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                    formModel.push(new DynamicRadioGroupModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_RATING:\n                    formModel.push(new DynamicRatingModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                    formModel.push(new DynamicSelectModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n                    formModel.push(new DynamicSliderModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n                    formModel.push(new DynamicSwitchModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                    formModel.push(new DynamicTextAreaModel(model, layout));\n                    break;\n                case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n                    formModel.push(new DynamicTimePickerModel(model, layout));\n                    break;\n                default:\n                    throw new Error(`unknown form control model type defined on JSON object with id \"${model.id}\"`);\n            }\n        });\n        return formModel;\n    }\n}\nDynamicFormService.ɵfac = function DynamicFormService_Factory(t) { return new (t || DynamicFormService)(ɵngcc0.ɵɵinject(DynamicFormComponentService), ɵngcc0.ɵɵinject(DynamicFormValidationService)); };\nDynamicFormService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicFormService_Factory() { return new DynamicFormService(ɵɵinject(DynamicFormComponentService), ɵɵinject(DynamicFormValidationService)); }, token: DynamicFormService, providedIn: \"root\" });\nDynamicFormService.ctorParameters = () => [\n    { type: DynamicFormComponentService },\n    { type: DynamicFormValidationService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: DynamicFormComponentService }, { type: DynamicFormValidationService }]; }, null); })();\n\nconst MATCH_DISABLED = \"DISABLED\";\nconst MATCH_ENABLED = \"ENABLED\";\nconst MATCH_HIDDEN = \"HIDDEN\";\nconst MATCH_OPTIONAL = \"OPTIONAL\";\nconst MATCH_REQUIRED = \"REQUIRED\";\nconst MATCH_VISIBLE = \"VISIBLE\";\nconst AND_OPERATOR = \"AND\";\nconst OR_OPERATOR = \"OR\";\nconst DYNAMIC_MATCHERS = new InjectionToken(\"DYNAMIC_MATCHERS\");\nconst DISABLED_MATCHER = {\n    match: MATCH_DISABLED,\n    opposingMatch: MATCH_ENABLED,\n    onChange(hasMatch, model) {\n        model.disabled = hasMatch;\n    }\n};\nconst HIDDEN_MATCHER = {\n    match: MATCH_HIDDEN,\n    opposingMatch: MATCH_VISIBLE,\n    onChange(hasMatch, model) {\n        model.hidden = hasMatch;\n    }\n};\nconst REQUIRED_MATCHER = {\n    match: MATCH_REQUIRED,\n    opposingMatch: MATCH_OPTIONAL,\n    onChange(hasMatch, model, control, injector) {\n        let validatorsConfig = null;\n        if (hasMatch) {\n            validatorsConfig = isObject(model.validators) ? Object.assign(Object.assign({}, model.validators), { required: null }) : { required: null };\n        }\n        else {\n            if (isObject(model.validators)) {\n                delete model.validators.required;\n                validatorsConfig = Object.assign({}, model.validators);\n            }\n        }\n        injector.get(DynamicFormValidationService).updateValidators(validatorsConfig, control, model);\n        injector.get(DynamicFormService).detectChanges();\n    }\n};\nconst DISABLED_MATCHER_PROVIDER = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: DISABLED_MATCHER,\n    multi: true\n};\nconst HIDDEN_MATCHER_PROVIDER = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: HIDDEN_MATCHER,\n    multi: true\n};\nconst REQUIRED_MATCHER_PROVIDER = {\n    provide: DYNAMIC_MATCHERS,\n    useValue: REQUIRED_MATCHER,\n    multi: true\n};\nconst DYNAMIC_MATCHER_PROVIDERS = [DISABLED_MATCHER_PROVIDER, HIDDEN_MATCHER_PROVIDER, REQUIRED_MATCHER_PROVIDER];\n\nclass DynamicFormRelationService {\n    constructor(MATCHERS, injector) {\n        this.MATCHERS = MATCHERS;\n        this.injector = injector;\n    }\n    getRelatedFormControls(model, group) {\n        const conditionReducer = (controls, condition) => {\n            var _a;\n            const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;\n            if (!controls.hasOwnProperty(path)) {\n                const control = condition.rootPath ? group.root.get(condition.rootPath) : group.get(condition.id);\n                control instanceof FormControl ? controls[path] = control : console.warn(`No related form control with id ${condition.id} could be found`);\n            }\n            return controls;\n        };\n        const relationReducer = (controls, relation) => relation.when.reduce(conditionReducer, controls);\n        return model.relations.reduce(relationReducer, {});\n    }\n    findRelationByMatcher(relations, matcher) {\n        return relations.find(relation => [matcher.match, matcher.opposingMatch].includes(relation.match));\n    }\n    matchesCondition(relation, relatedFormControls, matcher) {\n        var _a;\n        const operator = (_a = relation.operator) !== null && _a !== void 0 ? _a : OR_OPERATOR;\n        return relation.when.reduce((hasAlreadyMatched, condition, index) => {\n            var _a;\n            const path = (_a = condition.rootPath) !== null && _a !== void 0 ? _a : condition.id;\n            let relatedFormControl;\n            for (const [key, control] of Object.entries(relatedFormControls)) {\n                if (key === path) {\n                    relatedFormControl = control;\n                    break;\n                }\n            }\n            if (relatedFormControl && relation.match === matcher.match) {\n                if (index > 0 && operator === AND_OPERATOR && !hasAlreadyMatched) {\n                    return false;\n                }\n                if (index > 0 && operator === OR_OPERATOR && hasAlreadyMatched) {\n                    return true;\n                }\n                return condition.value === relatedFormControl.value || condition.status === relatedFormControl.status;\n            }\n            if (relatedFormControl && relation.match === matcher.opposingMatch) {\n                if (index > 0 && operator === AND_OPERATOR && hasAlreadyMatched) {\n                    return true;\n                }\n                if (index > 0 && operator === OR_OPERATOR && !hasAlreadyMatched) {\n                    return false;\n                }\n                return !(condition.value === relatedFormControl.value || condition.status === relatedFormControl.status);\n            }\n            return false;\n        }, false);\n    }\n    subscribeRelations(model, group, control) {\n        const relatedFormControls = this.getRelatedFormControls(model, group);\n        const subscriptions = [];\n        Object.values(relatedFormControls).forEach(relatedControl => {\n            const valueChanges = relatedControl.valueChanges.pipe(startWith(relatedControl.value));\n            const statusChanges = relatedControl.statusChanges.pipe(startWith(relatedControl.status));\n            subscriptions.push(merge(valueChanges, statusChanges).subscribe(() => {\n                this.MATCHERS.forEach(matcher => {\n                    const relation = this.findRelationByMatcher(model.relations, matcher);\n                    if (relation !== undefined) {\n                        const hasMatch = this.matchesCondition(relation, relatedFormControls, matcher);\n                        matcher.onChange(hasMatch, model, control, this.injector);\n                    }\n                });\n            }));\n        });\n        return subscriptions;\n    }\n}\nDynamicFormRelationService.ɵfac = function DynamicFormRelationService_Factory(t) { return new (t || DynamicFormRelationService)(ɵngcc0.ɵɵinject(DYNAMIC_MATCHERS, 8), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nDynamicFormRelationService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicFormRelationService_Factory() { return new DynamicFormRelationService(ɵɵinject(DYNAMIC_MATCHERS, 8), ɵɵinject(INJECTOR)); }, token: DynamicFormRelationService, providedIn: \"root\" });\nDynamicFormRelationService.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [DYNAMIC_MATCHERS,] }] },\n    { type: Injector }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormRelationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DYNAMIC_MATCHERS]\n            }] }, { type: ɵngcc0.Injector }]; }, null); })();\n\nclass DynamicFormControlContainerComponent {\n    constructor(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.componentService = componentService;\n        this.relationService = relationService;\n        this._hasFocus = false;\n        this.context = null;\n        this.componentSubscriptions = [];\n        this.subscriptions = [];\n    }\n    ngOnChanges(changes) {\n        const groupChange = changes.group;\n        const layoutChange = changes.layout;\n        const modelChange = changes.model;\n        if (layoutChange || modelChange) {\n            this.onLayoutOrModelChange();\n        }\n        if (modelChange) {\n            this.onModelChange();\n        }\n        if (groupChange || modelChange) {\n            this.onGroupOrModelChange();\n        }\n    }\n    ngOnDestroy() {\n        this.destroyFormControlComponent();\n        this.unsubscribe();\n    }\n    get id() {\n        return this.layoutService.getElementId(this.model);\n    }\n    get hasFocus() {\n        return this._hasFocus;\n    }\n    get isInvalid() {\n        return this.control.invalid;\n    }\n    get isValid() {\n        return this.control.valid;\n    }\n    get errorMessages() {\n        return this.validationService.createErrorMessages(this.control, this.model);\n    }\n    get showErrorMessages() {\n        return this.validationService.showErrorMessages(this.control, this.model, this.hasFocus);\n    }\n    get hasLabel() {\n        return isString(this.model.label);\n    }\n    get hasHint() {\n        return isString(this.model.hint);\n    }\n    get hint() {\n        var _a;\n        return (_a = this.model.hint) !== null && _a !== void 0 ? _a : null;\n    }\n    get isCheckbox() {\n        return this.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX;\n    }\n    get templates() {\n        return this.inputTemplateList !== undefined ? this.inputTemplateList : this.contentTemplateList;\n    }\n    get startTemplate() {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getStartTemplate(this.model, this.templates) : undefined;\n    }\n    get endTemplate() {\n        return this.model.type !== DYNAMIC_FORM_CONTROL_TYPE_ARRAY ?\n            this.layoutService.getEndTemplate(this.model, this.templates) : undefined;\n    }\n    getClass(context, place) {\n        return this.layoutService.getClass(this.controlLayout, context, place);\n    }\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n        const component = this.componentRef && this.componentRef.instance;\n        if (component && (component instanceof DynamicFormGroupComponent || component instanceof DynamicFormArrayComponent)) {\n            component.markForCheck();\n        }\n    }\n    createFormControlComponent() {\n        const componentType = this.componentType;\n        if (componentType !== null) {\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            this.componentViewContainerRef.clear();\n            this.componentRef = this.componentViewContainerRef.createComponent(componentFactory);\n            const component = this.componentRef.instance;\n            component.formLayout = this.layout;\n            component.group = this.group;\n            component.layout = this.controlLayout;\n            component.model = this.model;\n            if (this.templates) {\n                component.templates = this.templates;\n            }\n            this.componentSubscriptions.push(component.blur.subscribe(($event) => this.onBlur($event)));\n            this.componentSubscriptions.push(component.change.subscribe(($event) => this.onChange($event)));\n            this.componentSubscriptions.push(component.focus.subscribe(($event) => this.onFocus($event)));\n            if (component.customEvent !== undefined) {\n                this.componentSubscriptions.push(component.customEvent.subscribe(($event) => this.onCustomEvent($event)));\n            }\n            this.registerFormControlComponentRef(this.componentRef);\n        }\n    }\n    destroyFormControlComponent() {\n        if (this.componentRef) {\n            this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n            this.componentSubscriptions = [];\n            this.unregisterFormControlComponentRef();\n            this.componentRef.destroy();\n        }\n    }\n    createDynamicFormControlEvent($event, type) {\n        return { $event, context: this.context, control: this.control, group: this.group, model: this.model, type };\n    }\n    unsubscribe() {\n        // this.componentSubscriptions.forEach(subscription => subscription.unsubscribe());\n        // this.componentSubscriptions = [];\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n    onControlValueChanges(value) {\n        if (this.model instanceof DynamicFormValueControlModel && this.model.value !== value) {\n            this.model.value = value;\n        }\n    }\n    onModelValueUpdates(value) {\n        if (this.control.value !== value) {\n            this.control.setValue(value);\n        }\n    }\n    onModelDisabledUpdates(disabled) {\n        disabled ? this.control.disable() : this.control.enable();\n    }\n    onLayoutOrModelChange() {\n        var _a;\n        this.controlLayout = (_a = this.layoutService.findByModel(this.model, this.layout)) !== null && _a !== void 0 ? _a : this.model.layout;\n        this.klass = `${Array.isArray(this.hostClass) ? this.hostClass.join(\" \") : \"\"} ${this.layoutService.getHostClass(this.controlLayout)}`;\n    }\n    onModelChange() {\n        this.destroyFormControlComponent();\n        this.createFormControlComponent();\n    }\n    onGroupOrModelChange() {\n        if (this.model) {\n            this.unsubscribe();\n            if (this.group) {\n                this.control = this.group.get(this.model.id);\n                this.subscriptions.push(this.control.valueChanges.subscribe(value => this.onControlValueChanges(value)));\n            }\n            this.subscriptions.push(this.model.disabledChanges.subscribe(value => this.onModelDisabledUpdates(value)));\n            if (this.model instanceof DynamicFormValueControlModel) {\n                const model = this.model;\n                this.subscriptions.push(model.valueChanges.subscribe(value => this.onModelValueUpdates(value)));\n            }\n            if (this.model.relations.length > 0) {\n                this.subscriptions.push(...this.relationService.subscribeRelations(this.model, this.group, this.control));\n            }\n        }\n    }\n    onChange($event) {\n        var _a;\n        if ($event instanceof Event) { // native HTML5 change event\n            if (this.model.type === DYNAMIC_FORM_CONTROL_TYPE_INPUT) {\n                const model = this.model;\n                if (model.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE) {\n                    const inputElement = (_a = $event.target) !== null && _a !== void 0 ? _a : $event.srcElement;\n                    model.files = inputElement.files;\n                }\n            }\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n        }\n        else if (isDynamicFormControlEvent($event)) { // event bypass\n            this.change.emit($event);\n        }\n        else { // custom library value change event\n            this.change.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Change));\n        }\n    }\n    onBlur($event) {\n        if (isDynamicFormControlEvent($event)) { // event bypass\n            this.blur.emit($event);\n        }\n        else { // native HTML 5 or UI library blur event\n            this._hasFocus = false;\n            this.blur.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Blur));\n        }\n    }\n    onFocus($event) {\n        if (isDynamicFormControlEvent($event)) { // event bypass\n            this.focus.emit($event);\n        }\n        else { // native HTML 5 or UI library focus event\n            this._hasFocus = true;\n            this.focus.emit(this.createDynamicFormControlEvent($event, DynamicFormControlEventType.Focus));\n        }\n    }\n    onCustomEvent($event) {\n        const emitter = this.customEvent;\n        if (isDynamicFormControlEvent($event)) { // child event bypass\n            emitter.emit($event);\n        }\n        else { // native UI library custom event\n            emitter.emit(this.createDynamicFormControlEvent($event.customEvent, $event.customEventType));\n        }\n    }\n    registerFormControlComponentRef(ref) {\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n            this.componentService.registerFormControl(this.model, ref, this.context.index);\n        }\n        else {\n            this.componentService.registerFormControl(this.model, ref);\n        }\n    }\n    unregisterFormControlComponentRef() {\n        if (this.context instanceof DynamicFormArrayGroupModel) {\n            this.componentService.unregisterFormControl(this.model.id, this.context.index);\n        }\n        else {\n            this.componentService.unregisterFormControl(this.model.id);\n        }\n    }\n}\nDynamicFormControlContainerComponent.ɵfac = function DynamicFormControlContainerComponent_Factory(t) { return new (t || DynamicFormControlContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(DynamicFormValidationService), ɵngcc0.ɵɵdirectiveInject(DynamicFormComponentService), ɵngcc0.ɵɵdirectiveInject(DynamicFormRelationService)); };\nDynamicFormControlContainerComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicFormControlContainerComponent, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nDynamicFormControlContainerComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ComponentFactoryResolver },\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService },\n    { type: DynamicFormComponentService },\n    { type: DynamicFormRelationService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormControlContainerComponent, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: DynamicFormLayoutService }, { type: DynamicFormValidationService }, { type: DynamicFormComponentService }, { type: DynamicFormRelationService }]; }, null); })();\n\nclass DynamicFormControlWithTemplateComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n    }\n    ngAfterViewInit() {\n        this.layoutService\n            .filterTemplatesByModel(this.model, this.templates)\n            .forEach(template => this.bindTemplate(template));\n    }\n    bindTemplate(template) {\n        if (isString(template.as) && this.templateDirectives.has(template.as)) {\n            const property = this.templateDirectives.get(template.as);\n            this.viewChild[property] = this.mapTemplate(template);\n        }\n    }\n}\nDynamicFormControlWithTemplateComponent.ɵfac = function DynamicFormControlWithTemplateComponent_Factory(t) { return new (t || DynamicFormControlWithTemplateComponent)(ɵngcc0.ɵɵdirectiveInject(DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(DynamicFormValidationService)); };\nDynamicFormControlWithTemplateComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicFormControlWithTemplateComponent, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nDynamicFormControlWithTemplateComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormControlWithTemplateComponent, [{\n        type: Directive\n    }], function () { return [{ type: DynamicFormLayoutService }, { type: DynamicFormValidationService }]; }, null); })();\n\nclass DynamicListDirective {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n        if (isString(this.listId)) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, \"list\", this.listId);\n        }\n    }\n}\nDynamicListDirective.ɵfac = function DynamicListDirective_Factory(t) { return new (t || DynamicListDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nDynamicListDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicListDirective, selectors: [[\"\", \"dynamicList\", \"\"]], inputs: { listId: [\"dynamicList\", \"listId\"] } });\nDynamicListDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nDynamicListDirective.propDecorators = {\n    listId: [{ type: Input, args: [\"dynamicList\",] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicListDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[dynamicList]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { listId: [{\n            type: Input,\n            args: [\"dynamicList\"]\n        }] }); })();\n\nconst AUTOCOMPLETE_OFF = \"off\";\nconst AUTOCOMPLETE_ON = \"on\";\nconst AUTOFILL_TOKEN_BILLING = \"billing\";\nconst AUTOFILL_TOKEN_SHIPPING = \"shipping\";\nconst AUTOFILL_TOKENS_ADDRESS = [AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_SHIPPING];\nconst AUTOFILL_TOKEN_HOME = \"home\";\nconst AUTOFILL_TOKEN_WORK = \"work\";\nconst AUTOFILL_TOKEN_MOBILE = \"mobile\";\nconst AUTOFILL_TOKEN_FAX = \"fax\";\nconst AUTOFILL_TOKEN_PAGER = \"pager\";\nconst AUTOFILL_TOKENS_CONTACT = [\n    AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_WORK\n];\nconst AUTOFILL_FIELD_STREET_ADDRESS = \"street-address\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_1 = \"address-line1\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_2 = \"address-line2\";\nconst AUTOFILL_FIELD_ADDRESS_LINE_3 = \"address-line3\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_4 = \"address-level4\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_3 = \"address-level3\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_2 = \"address-level2\";\nconst AUTOFILL_FIELD_ADDRESS_LEVEL_1 = \"address-level1\";\nconst AUTOFILL_FIELD_NAME = \"name\";\nconst AUTOFILL_FIELD_HONORIFIC_PREFIX = \"honorific-prefix\";\nconst AUTOFILL_FIELD_GIVEN_NAME = \"given-name\";\nconst AUTOFILL_FIELD_ADDITIONAL_NAME = \"additional-name\";\nconst AUTOFILL_FIELD_FAMILY_NAME = \"family-name\";\nconst AUTOFILL_FIELD_HONORIFIC_SUFFIX = \"honorific-suffix\";\nconst AUTOFILL_FIELD_NICKNAME = \"nickname\";\nconst AUTOFILL_FIELD_USERNAME = \"username\";\nconst AUTOFILL_FIELD_NEW_PASSWORD = \"new-password\";\nconst AUTOFILL_FIELD_CURRENT_PASSWORD = \"current-password\";\nconst AUTOFILL_FIELD_ORGANIZATION_TITLE = \"organization-title\";\nconst AUTOFILL_FIELD_ORGANIZATION = \"organization\";\nconst AUTOFILL_FIELD_COUNTRY = \"country\";\nconst AUTOFILL_FIELD_COUNTRY_NAME = \"country-name\";\nconst AUTOFILL_FIELD_POSTAL_CODE = \"postal-code\";\nconst AUTOFILL_FIELD_CC_NAME = \"cc-name\";\nconst AUTOFILL_FIELD_CC_GIVEN_NAME = \"cc-given-name\";\nconst AUTOFILL_FIELD_CC_ADDITIONAL_NAME = \"cc-additional-name\";\nconst AUTOFILL_FIELD_CC_FAMILY_NAME = \"cc-family-name\";\nconst AUTOFILL_FIELD_CC_NUMBER = \"cc-number\";\nconst AUTOFILL_FIELD_CC_EXP = \"cc-exp\";\nconst AUTOFILL_FIELD_CC_EXP_MONTH = \"cc-exp-month\";\nconst AUTOFILL_FIELD_CC_EXP_YEAR = \"cc-exp-year\";\nconst AUTOFILL_FIELD_CC_CSC = \"cc-csc\";\nconst AUTOFILL_FIELD_CC_TYPE = \"cc-type\";\nconst AUTOFILL_FIELD_TRANSACTION_CURRENCY = \"transaction-currency\";\nconst AUTOFILL_FIELD_TRANSACTION_AMOUNT = \"transaction-amount\";\nconst AUTOFILL_FIELD_LANGUAGE = \"language\";\nconst AUTOFILL_FIELD_BDAY = \"bday\";\nconst AUTOFILL_FIELD_BDAY_DAY = \"bday-day\";\nconst AUTOFILL_FIELD_BDAY_MONTH = \"bday-month\";\nconst AUTOFILL_FIELD_BDAY_YEAR = \"bday-year\";\nconst AUTOFILL_FIELD_SEX = \"sex\";\nconst AUTOFILL_FIELD_URL = \"url\";\nconst AUTOFILL_FIELD_PHOTO = \"photo\";\nconst AUTOFILL_FIELDS = [\n    AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2,\n    AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LEVEL_3,\n    AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_NAME,\n    AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_USERNAME,\n    AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_ORGANIZATION_TITLE,\n    AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_POSTAL_CODE,\n    AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_ADDITIONAL_NAME,\n    AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH,\n    AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_TRANSACTION_CURRENCY,\n    AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY,\n    AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_PHOTO\n];\nconst AUTOFILL_FIELD_TEL = \"tel\";\nconst AUTOFILL_FIELD_TEL_COUNTRY_CODE = \"tel-country-code\";\nconst AUTOFILL_FIELD_TEL_NATIONAL = \"tel-national\";\nconst AUTOFILL_FIELD_TEL_AREA_CODE = \"tel-area-code\";\nconst AUTOFILL_FIELD_TEL_LOCAL = \"tel-local\";\nconst AUTOFILL_FIELD_TEL_LOCAL_PREFIX = \"tel-local-prefix\";\nconst AUTOFILL_FIELD_TEL_LOCAL_SUFFIX = \"tel-local-suffix\";\nconst AUTOFILL_FIELD_TEL_LOCAL_EXTENSION = \"tel-extension\";\nconst AUTOFILL_FIELD_EMAIL = \"email\";\nconst AUTOFILL_FIELD_IMPP = \"impp\";\nconst AUTOFILL_FIELDS_CONTACT = [\n    AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TEL_AREA_CODE,\n    AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX,\n    AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_IMPP\n];\nfunction isAddressToken(token) {\n    return AUTOFILL_TOKENS_ADDRESS.indexOf(token) > -1;\n}\nfunction isContactField(token) {\n    return AUTOFILL_FIELDS_CONTACT.indexOf(token) > -1;\n}\nfunction isContactToken(token) {\n    return AUTOFILL_TOKENS_CONTACT.indexOf(token) > -1;\n}\nfunction isField(token) {\n    return AUTOFILL_FIELDS.indexOf(token) > -1;\n}\nfunction isSectionToken(token) {\n    return token.startsWith(\"section-\");\n}\nfunction validate(tokens) {\n    const toExpression = (total, currentValue) => `${total}|${currentValue}`;\n    const tokensAddress = AUTOFILL_TOKENS_ADDRESS.reduce(toExpression);\n    const tokensContact = AUTOFILL_TOKENS_CONTACT.reduce(toExpression);\n    const fields = AUTOFILL_FIELDS.reduce(toExpression);\n    const fieldsContact = AUTOFILL_FIELDS_CONTACT.reduce(toExpression);\n    const regex = new RegExp(`^(section-\\\\w+\\\\s{1})?((${tokensAddress}){1}\\\\s)?((${fields}){1}|((${tokensContact}){1}\\\\s{1}(${fieldsContact})))$`);\n    return regex.test(tokens);\n}\n\nclass DynamicFormsCoreModule {\n    /*@deprecated*/\n    static forRoot() {\n        return {\n            ngModule: DynamicFormsCoreModule,\n            providers: [\n                DynamicFormService,\n                DynamicFormLayoutService,\n                DynamicFormValidationService,\n                DynamicFormComponentService,\n                DynamicFormRelationService\n            ]\n        };\n    }\n}\nDynamicFormsCoreModule.ɵfac = function DynamicFormsCoreModule_Factory(t) { return new (t || DynamicFormsCoreModule)(); };\nDynamicFormsCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicFormsCoreModule });\nDynamicFormsCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormsCoreModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [\n                    DynamicListDirective,\n                    DynamicTemplateDirective\n                ],\n                exports: [\n                    DynamicListDirective,\n                    DynamicTemplateDirective\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicFormsCoreModule, { declarations: function () { return [DynamicListDirective, DynamicTemplateDirective]; }, imports: function () { return [CommonModule,\n        ReactiveFormsModule]; }, exports: function () { return [DynamicListDirective, DynamicTemplateDirective]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AND_OPERATOR, AUTOCOMPLETE_OFF, AUTOCOMPLETE_ON, AUTOFILL_FIELDS, AUTOFILL_FIELDS_CONTACT, AUTOFILL_FIELD_ADDITIONAL_NAME, AUTOFILL_FIELD_ADDRESS_LEVEL_1, AUTOFILL_FIELD_ADDRESS_LEVEL_2, AUTOFILL_FIELD_ADDRESS_LEVEL_3, AUTOFILL_FIELD_ADDRESS_LEVEL_4, AUTOFILL_FIELD_ADDRESS_LINE_1, AUTOFILL_FIELD_ADDRESS_LINE_2, AUTOFILL_FIELD_ADDRESS_LINE_3, AUTOFILL_FIELD_BDAY, AUTOFILL_FIELD_BDAY_DAY, AUTOFILL_FIELD_BDAY_MONTH, AUTOFILL_FIELD_BDAY_YEAR, AUTOFILL_FIELD_CC_ADDITIONAL_NAME, AUTOFILL_FIELD_CC_CSC, AUTOFILL_FIELD_CC_EXP, AUTOFILL_FIELD_CC_EXP_MONTH, AUTOFILL_FIELD_CC_EXP_YEAR, AUTOFILL_FIELD_CC_FAMILY_NAME, AUTOFILL_FIELD_CC_GIVEN_NAME, AUTOFILL_FIELD_CC_NAME, AUTOFILL_FIELD_CC_NUMBER, AUTOFILL_FIELD_CC_TYPE, AUTOFILL_FIELD_COUNTRY, AUTOFILL_FIELD_COUNTRY_NAME, AUTOFILL_FIELD_CURRENT_PASSWORD, AUTOFILL_FIELD_EMAIL, AUTOFILL_FIELD_FAMILY_NAME, AUTOFILL_FIELD_GIVEN_NAME, AUTOFILL_FIELD_HONORIFIC_PREFIX, AUTOFILL_FIELD_HONORIFIC_SUFFIX, AUTOFILL_FIELD_IMPP, AUTOFILL_FIELD_LANGUAGE, AUTOFILL_FIELD_NAME, AUTOFILL_FIELD_NEW_PASSWORD, AUTOFILL_FIELD_NICKNAME, AUTOFILL_FIELD_ORGANIZATION, AUTOFILL_FIELD_ORGANIZATION_TITLE, AUTOFILL_FIELD_PHOTO, AUTOFILL_FIELD_POSTAL_CODE, AUTOFILL_FIELD_SEX, AUTOFILL_FIELD_STREET_ADDRESS, AUTOFILL_FIELD_TEL, AUTOFILL_FIELD_TEL_AREA_CODE, AUTOFILL_FIELD_TEL_COUNTRY_CODE, AUTOFILL_FIELD_TEL_LOCAL, AUTOFILL_FIELD_TEL_LOCAL_EXTENSION, AUTOFILL_FIELD_TEL_LOCAL_PREFIX, AUTOFILL_FIELD_TEL_LOCAL_SUFFIX, AUTOFILL_FIELD_TEL_NATIONAL, AUTOFILL_FIELD_TRANSACTION_AMOUNT, AUTOFILL_FIELD_TRANSACTION_CURRENCY, AUTOFILL_FIELD_URL, AUTOFILL_FIELD_USERNAME, AUTOFILL_TOKENS_ADDRESS, AUTOFILL_TOKENS_CONTACT, AUTOFILL_TOKEN_BILLING, AUTOFILL_TOKEN_FAX, AUTOFILL_TOKEN_HOME, AUTOFILL_TOKEN_MOBILE, AUTOFILL_TOKEN_PAGER, AUTOFILL_TOKEN_SHIPPING, AUTOFILL_TOKEN_WORK, CHANGE_ERROR_STATE_MATCHER, DEFAULT_ERROR_STATE_MATCHER, DISABLED_MATCHER, DISABLED_MATCHER_PROVIDER, DYNAMIC_ERROR_MESSAGES_MATCHER, DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR, DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH, DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER, DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD, DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE, DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT, DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME, DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL, DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK, DYNAMIC_FORM_CONTROL_MAP_FN, DYNAMIC_FORM_CONTROL_TYPE_ARRAY, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP, DYNAMIC_FORM_CONTROL_TYPE_COLORPICKER, DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER, DYNAMIC_FORM_CONTROL_TYPE_EDITOR, DYNAMIC_FORM_CONTROL_TYPE_FILE_UPLOAD, DYNAMIC_FORM_CONTROL_TYPE_GROUP, DYNAMIC_FORM_CONTROL_TYPE_INPUT, DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP, DYNAMIC_FORM_CONTROL_TYPE_RATING, DYNAMIC_FORM_CONTROL_TYPE_SELECT, DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER, DYNAMIC_FORM_TEXTAREA_WRAP_HARD, DYNAMIC_FORM_TEXTAREA_WRAP_SOFT, DYNAMIC_MATCHERS, DYNAMIC_MATCHER_PROVIDERS, DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT, DYNAMIC_VALIDATORS, DynamicCheckControlModel, DynamicCheckboxGroupModel, DynamicCheckboxModel, DynamicColorPickerModel, DynamicDateControlModel, DynamicDatePickerModel, DynamicEditorModel, DynamicFileControlModel, DynamicFileUploadModel, DynamicFormArrayComponent, DynamicFormArrayGroupModel, DynamicFormArrayModel, DynamicFormComponent, DynamicFormComponentService, DynamicFormControlComponent, DynamicFormControlContainerComponent, DynamicFormControlEventType, DynamicFormControlModel, DynamicFormControlWithTemplateComponent, DynamicFormGroupComponent, DynamicFormGroupModel, DynamicFormHook, DynamicFormLayoutService, DynamicFormOption, DynamicFormRelationService, DynamicFormService, DynamicFormValidationService, DynamicFormValueControlModel, DynamicFormsCoreModule, DynamicInputControlModel, DynamicInputModel, DynamicListDirective, DynamicOptionControlModel, DynamicRadioGroupModel, DynamicRatingModel, DynamicSelectModel, DynamicSliderModel, DynamicSwitchModel, DynamicTemplateDirective, DynamicTextAreaModel, DynamicTimePickerModel, HIDDEN_MATCHER, HIDDEN_MATCHER_PROVIDER, MATCH_DISABLED, MATCH_ENABLED, MATCH_HIDDEN, MATCH_OPTIONAL, MATCH_REQUIRED, MATCH_VISIBLE, METADATA_KEY_SERIALIZABLE, OR_OPERATOR, REQUIRED_MATCHER, REQUIRED_MATCHER_PROVIDER, getSerializables, isAddressToken, isBoolean, isContactField, isContactToken, isDynamicFormControlEvent, isField, isFunction, isNumber, isObject, isSectionToken, isString, maskFromString, maskToString, parseReviver, serializable, serialize, validate };\n\n","import { EventEmitter, Component, Input, Output, ViewChild, ViewChildren, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef, ComponentFactoryResolver, ContentChildren, HostBinding, ViewContainerRef, NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicFormControlComponent, DynamicFormLayoutService, DynamicFormValidationService, DynamicFormGroupComponent, DynamicFormControlContainerComponent, DynamicFormComponentService, DynamicFormRelationService, DynamicTemplateDirective, DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER, DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DYNAMIC_FORM_CONTROL_TYPE_SELECT, DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP, DYNAMIC_FORM_CONTROL_TYPE_INPUT, DYNAMIC_FORM_CONTROL_TYPE_GROUP, DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DYNAMIC_FORM_CONTROL_TYPE_ARRAY, DynamicFormArrayComponent, DynamicFormComponent, DynamicFormsCoreModule } from '@ng-dynamic-forms/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ng-dynamic-forms/core';\nimport * as ɵngcc2 from '@ionic/angular';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"ionCheckbox\"];\nconst _c1 = function (a0, a1) { return [a0, a1]; };\nfunction DynamicIonicCheckboxComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nconst _c2 = [\"ionDatetime\"];\nfunction DynamicIonicDateTimeComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nfunction DynamicIonicFormGroupComponent_legend_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"legend\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.legend, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"dynamic-ionic-form-control\", 5);\n    ɵngcc0.ɵɵlistener(\"blur\", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onBlur($event); })(\"change\", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onChange($event); })(\"focus\", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onFocus($event); })(\"ionEvent\", function DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template_dynamic_ionic_form_control_ionEvent_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onCustomEvent($event, null, true); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _model_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"group\", ctx_r1.control)(\"hidden\", _model_r2.hidden)(\"layout\", ctx_r1.formLayout)(\"model\", _model_r2)(\"templates\", ctx_r1.templates)(\"hostClass\", ɵngcc0.ɵɵpureFunction2(6, _c1, ctx_r1.getClass(\"element\", \"children\"), ctx_r1.getClass(\"grid\", \"children\")));\n} }\nconst _c3 = [\"ionInput\"];\nfunction DynamicIonicInputComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nconst _c4 = [\"ionRadioGroup\"];\nfunction DynamicIonicRadioGroupComponent_ion_list_header_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ion-list-header\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.model.label);\n} }\nfunction DynamicIonicRadioGroupComponent_ion_item_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ion-item\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"ion-label\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"ion-radio\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.getClass(\"element\", \"option\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(option_r3.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", option_r3.value);\n} }\nconst _c5 = [\"ionRange\"];\nfunction DynamicIonicRangeComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nconst _c6 = [\"ionSelect\"];\nfunction DynamicIonicSelectComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nfunction DynamicIonicSelectComponent_ion_select_option_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ion-select-option\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", option_r3.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(option_r3.label);\n} }\nconst _c7 = [\"ionToggle\"];\nfunction DynamicIonicToggleComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nconst _c8 = [\"ionTextArea\"];\nfunction DynamicIonicTextAreaComponent_ion_label_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ion-label\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.model.label, ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.getClass(\"element\", \"label\"), ctx_r0.getClass(\"grid\", \"label\")));\n} }\nconst _c9 = [\"componentViewContainer\"];\nfunction DynamicIonicFormControlContainerComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction DynamicIonicFormControlContainerComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nconst _c10 = function (a0, a1, a2) { return [a0, a1, a2]; };\nconst _c11 = [\"*\"];\nfunction DynamicIonicFormArrayComponent_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"dynamic-ionic-form-control\", 6);\n    ɵngcc0.ɵɵlistener(\"blur\", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onBlur($event); })(\"change\", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.onChange($event); })(\"focus\", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.onFocus($event); })(\"ionEvent\", function DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template_dynamic_ionic_form_control_ionEvent_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onCustomEvent($event, null, true); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _model_r6 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    const groupModel_r1 = ctx_r12.$implicit;\n    const idx_r2 = ctx_r12.index;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"context\", groupModel_r1)(\"group\", ctx_r4.array.at(idx_r2))(\"hidden\", _model_r6.hidden)(\"layout\", ctx_r4.formLayout)(\"model\", _model_r6)(\"templates\", ctx_r4.templates)(\"hostClass\", ɵngcc0.ɵɵpureFunction2(7, _c1, ctx_r4.getClass(\"element\", \"children\"), ctx_r4.getClass(\"grid\", \"children\")));\n} }\nfunction DynamicIonicFormArrayComponent_div_2_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction DynamicIonicFormArrayComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, DynamicIonicFormArrayComponent_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, DynamicIonicFormArrayComponent_div_2_dynamic_ionic_form_control_2_Template, 1, 10, \"dynamic-ionic-form-control\", 5);\n    ɵngcc0.ɵɵtemplate(3, DynamicIonicFormArrayComponent_div_2_ng_container_3_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const groupModel_r1 = ctx.$implicit;\n    const idx_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"formGroupName\", idx_r2)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(7, _c1, ctx_r0.getClass(\"element\", \"group\"), ctx_r0.getClass(\"grid\", \"group\")));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.startTemplate == null ? null : ctx_r0.startTemplate.templateRef)(\"ngTemplateOutletContext\", groupModel_r1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", groupModel_r1.group);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.endTemplate == null ? null : ctx_r0.endTemplate.templateRef)(\"ngTemplateOutletContext\", groupModel_r1);\n} }\nfunction DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"dynamic-ionic-form-control\", 1);\n    ɵngcc0.ɵɵlistener(\"blur\", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onBlur($event); })(\"change\", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onChange($event); })(\"focus\", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onFocus($event); })(\"ionEvent\", function DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template_dynamic_ionic_form_control_ionEvent_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onCustomEvent($event, ctx_r6.ionEvent); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const controlModel_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"group\", ctx_r0.group)(\"hidden\", controlModel_r1.hidden)(\"layout\", ctx_r0.layout)(\"model\", controlModel_r1)(\"templates\", ctx_r0.templates);\n} }\nclass DynamicIonicCheckboxComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicCheckboxComponent.ɵfac = function DynamicIonicCheckboxComponent_Factory(t) { return new (t || DynamicIonicCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicCheckboxComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicCheckboxComponent, selectors: [[\"dynamic-ionic-checkbox\"]], viewQuery: function DynamicIonicCheckboxComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionCheckbox = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 7, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [3, \"checked\", \"color\", \"formControlName\", \"id\", \"ngClass\", \"ionBlur\", \"ionChange\", \"ionFocus\"], [\"ionCheckbox\", \"\"], [3, \"innerHTML\", \"ngClass\"]], template: function DynamicIonicCheckboxComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicCheckboxComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-checkbox\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicCheckboxComponent_Template_ion_checkbox_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionChange\", function DynamicIonicCheckboxComponent_Template_ion_checkbox_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicCheckboxComponent_Template_ion_checkbox_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"checked\", ctx.model.checked)(\"color\", ctx.model.getAdditional(\"color\", undefined))(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"ngClass\", ctx.getClass(\"element\", \"control\"));\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonCheckbox, ɵngcc2.BooleanValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc2.IonLabel], encapsulation: 2 });\nDynamicIonicCheckboxComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicCheckboxComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionCheckbox: [{ type: ViewChild, args: [\"ionCheckbox\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicCheckboxComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-checkbox\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-checkbox #ionCheckbox\\n                  [checked]=\\\"model.checked\\\"\\n                  [color]=\\\"model.getAdditional('color', undefined)\\\"\\n                  [formControlName]=\\\"model.id\\\"\\n                  [id]=\\\"id\\\"\\n                  [ngClass]=\\\"getClass('element', 'control')\\\"\\n                  (ionBlur)=\\\"onBlur($event)\\\"\\n                  (ionChange)=\\\"onChange($event)\\\"\\n                  (ionFocus)=\\\"onFocus($event)\\\"></ion-checkbox>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionCheckbox: [{\n            type: ViewChild,\n            args: [\"ionCheckbox\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicDateTimeComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.customEvent = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicDateTimeComponent.ɵfac = function DynamicIonicDateTimeComponent_Factory(t) { return new (t || DynamicIonicDateTimeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicDateTimeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicDateTimeComponent, selectors: [[\"dynamic-ionic-datetime\"]], viewQuery: function DynamicIonicDateTimeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionDatetime = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", customEvent: \"customEvent\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 22, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [3, \"cancelText\", \"dayNames\", \"dayShortNames\", \"dayValues\", \"displayFormat\", \"doneText\", \"formControlName\", \"hourValues\", \"id\", \"max\", \"min\", \"minuteValues\", \"monthNames\", \"monthShortNames\", \"monthValues\", \"ngClass\", \"pickerFormat\", \"pickerOptions\", \"placeholder\", \"yearValues\", \"ionBlur\", \"ionCancel\", \"ionChange\", \"ionFocus\"], [\"ionDatetime\", \"\"], [3, \"innerHTML\", \"ngClass\"]], template: function DynamicIonicDateTimeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicDateTimeComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-datetime\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionCancel\", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionCancel_2_listener($event) { return ctx.onCustomEvent($event, \"ionCancel\"); })(\"ionChange\", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicDateTimeComponent_Template_ion_datetime_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cancelText\", ctx.model.getAdditional(\"cancelText\", \"Cancel\"))(\"dayNames\", ctx.model.getAdditional(\"dayNames\", undefined))(\"dayShortNames\", ctx.model.getAdditional(\"dayShortNames\", undefined))(\"dayValues\", ctx.model.getAdditional(\"dayValues\", undefined))(\"displayFormat\", ctx.model.format || \"MMM D, YYYY\")(\"doneText\", ctx.model.getAdditional(\"doneText\", \"Done\"))(\"formControlName\", ctx.model.id)(\"hourValues\", ctx.model.getAdditional(\"hourValues\", undefined))(\"id\", ctx.id)(\"max\", ctx.model.max || undefined)(\"min\", ctx.model.min || undefined)(\"minuteValues\", ctx.model.getAdditional(\"minuteValues\", undefined))(\"monthNames\", ctx.model.getAdditional(\"monthNames\", undefined))(\"monthShortNames\", ctx.model.getAdditional(\"monthShortNames\", undefined))(\"monthValues\", ctx.model.getAdditional(\"monthValues\", undefined))(\"ngClass\", ctx.getClass(\"element\", \"control\"))(\"pickerFormat\", ctx.model.getAdditional(\"pickerFormat\", \"MMM D, YYYY\"))(\"pickerOptions\", ctx.model.getAdditional(\"pickerOptions\", undefined))(\"placeholder\", ctx.model.placeholder)(\"yearValues\", ctx.model.getAdditional(\"yearValues\", undefined));\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonDatetime, ɵngcc2.SelectValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc2.IonLabel], encapsulation: 2 });\nDynamicIonicDateTimeComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicDateTimeComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    customEvent: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionDatetime: [{ type: ViewChild, args: [\"ionDatetime\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicDateTimeComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-datetime\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-datetime #ionDatetime\\n                  [cancelText]=\\\"model.getAdditional('cancelText', 'Cancel')\\\"\\n                  [dayNames]=\\\"model.getAdditional('dayNames', undefined)\\\"\\n                  [dayShortNames]=\\\"model.getAdditional('dayShortNames', undefined)\\\"\\n                  [dayValues]=\\\"model.getAdditional('dayValues', undefined)\\\"\\n                  [displayFormat]=\\\"model.format || 'MMM D, YYYY'\\\"\\n                  [doneText]=\\\"model.getAdditional('doneText', 'Done')\\\"\\n                  [formControlName]=\\\"model.id\\\"\\n                  [hourValues]=\\\"model.getAdditional('hourValues', undefined)\\\"\\n                  [id]=\\\"id\\\"\\n                  [max]=\\\"model.max || undefined\\\"\\n                  [min]=\\\"model.min || undefined\\\"\\n                  [minuteValues]=\\\"model.getAdditional('minuteValues', undefined)\\\"\\n                  [monthNames]=\\\"model.getAdditional('monthNames', undefined)\\\"\\n                  [monthShortNames]=\\\"model.getAdditional('monthShortNames', undefined)\\\"\\n                  [monthValues]=\\\"model.getAdditional('monthValues', undefined)\\\"\\n                  [ngClass]=\\\"getClass('element', 'control')\\\"\\n                  [pickerFormat]=\\\"model.getAdditional('pickerFormat', 'MMM D, YYYY')\\\"\\n                  [pickerOptions]=\\\"model.getAdditional('pickerOptions', undefined)\\\"\\n                  [placeholder]=\\\"model.placeholder\\\"\\n                  [yearValues]=\\\"model.getAdditional('yearValues', undefined)\\\"\\n                  (ionBlur)=\\\"onBlur($event)\\\"\\n                  (ionCancel)=\\\"onCustomEvent($event, 'ionCancel')\\\"\\n                  (ionChange)=\\\"onChange($event)\\\"\\n                  (ionFocus)=\\\"onFocus($event)\\\"></ion-datetime>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], customEvent: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionDatetime: [{\n            type: ViewChild,\n            args: [\"ionDatetime\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicFormGroupComponent extends DynamicFormGroupComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.customEvent = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicFormGroupComponent.ɵfac = function DynamicIonicFormGroupComponent_Factory(t) { return new (t || DynamicIonicFormGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicFormGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicFormGroupComponent, selectors: [[\"dynamic-ionic-form-group\"]], viewQuery: function DynamicIonicFormGroupComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DynamicIonicFormControlContainerComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.components = _t);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\", templates: \"templates\" }, outputs: { blur: \"blur\", change: \"change\", customEvent: \"customEvent\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 7, consts: [[3, \"formGroup\"], [3, \"formGroupName\", \"id\", \"name\", \"ngClass\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"group\", \"hidden\", \"layout\", \"model\", \"templates\", \"hostClass\", \"blur\", \"change\", \"focus\", \"ionEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\"], [3, \"group\", \"hidden\", \"layout\", \"model\", \"templates\", \"hostClass\", \"blur\", \"change\", \"focus\", \"ionEvent\"]], template: function DynamicIonicFormGroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵelementStart(1, \"fieldset\", 1);\n        ɵngcc0.ɵɵtemplate(2, DynamicIonicFormGroupComponent_legend_2_Template, 1, 1, \"legend\", 2);\n        ɵngcc0.ɵɵtemplate(3, DynamicIonicFormGroupComponent_dynamic_ionic_form_control_3_Template, 1, 9, \"dynamic-ionic-form-control\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"formGroupName\", ctx.model.id)(\"id\", ctx.id)(\"name\", ctx.model.name)(\"ngClass\", ctx.getClass(\"element\", \"control\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.legend);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.model.group);\n    } }, directives: function () { return [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc3.FormGroupName, ɵngcc4.NgClass, ɵngcc4.NgIf, ɵngcc4.NgForOf, DynamicIonicFormControlContainerComponent]; }, encapsulation: 2 });\nDynamicIonicFormGroupComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicFormGroupComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    templates: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    customEvent: [{ type: Output }],\n    focus: [{ type: Output }],\n    components: [{ type: ViewChildren, args: [forwardRef(() => DynamicIonicFormControlContainerComponent),] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicFormGroupComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-form-group\",\n                template: \"<ng-container [formGroup]=\\\"group\\\">\\n\\n    <fieldset [formGroupName]=\\\"model.id\\\"\\n              [id]=\\\"id\\\"\\n              [name]=\\\"model.name\\\"\\n              [ngClass]=\\\"getClass('element', 'control')\\\">\\n\\n        <legend *ngIf=\\\"model.legend\\\" [innerHTML]=\\\"model.legend\\\"></legend>\\n\\n        <dynamic-ionic-form-control *ngFor=\\\"let _model of model.group\\\"\\n                                    [group]=\\\"control\\\"\\n                                    [hidden]=\\\"_model.hidden\\\"\\n                                    [layout]=\\\"formLayout\\\"\\n                                    [model]=\\\"_model\\\"\\n                                    [templates]=\\\"templates\\\"\\n                                    [hostClass]=\\\"[getClass('element','children'), getClass('grid','children')]\\\"\\n                                    (blur)=\\\"onBlur($event)\\\"\\n                                    (change)=\\\"onChange($event)\\\"\\n                                    (focus)=\\\"onFocus($event)\\\"\\n                                    (ionEvent)=\\\"onCustomEvent($event, null, true)\\\"></dynamic-ionic-form-control>\\n    </fieldset>\\n\\n</ng-container>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], customEvent: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], templates: [{\n            type: Input\n        }], components: [{\n            type: ViewChildren,\n            args: [forwardRef(() => DynamicIonicFormControlContainerComponent)]\n        }] }); })();\n\nclass DynamicIonicInputComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicInputComponent.ɵfac = function DynamicIonicInputComponent_Factory(t) { return new (t || DynamicIonicInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicInputComponent, selectors: [[\"dynamic-ionic-input\"]], viewQuery: function DynamicIonicInputComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionInput = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 21, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [3, \"accept\", \"autocapitalize\", \"autocomplete\", \"autocorrect\", \"clearInput\", \"clearOnEdit\", \"debounce\", \"formControlName\", \"id\", \"max\", \"min\", \"ngClass\", \"pattern\", \"placeholder\", \"readonly\", \"size\", \"spellcheck\", \"step\", \"type\", \"ionBlur\", \"ionChange\", \"ionFocus\"], [\"ionInput\", \"\"], [3, \"innerHTML\", \"ngClass\"]], template: function DynamicIonicInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicInputComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-input\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicInputComponent_Template_ion_input_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionChange\", function DynamicIonicInputComponent_Template_ion_input_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicInputComponent_Template_ion_input_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"accept\", ctx.model.accept || undefined)(\"autocapitalize\", ctx.model.getAdditional(\"autocapitalize\", \"off\"))(\"autocomplete\", ctx.model.autoComplete)(\"autocorrect\", ctx.model.getAdditional(\"autocorrect\", \"off\"))(\"clearInput\", ctx.model.getAdditional(\"clearInput\", true))(\"clearOnEdit\", ctx.model.getAdditional(\"clearOnEdit\", false))(\"debounce\", ctx.model.getAdditional(\"debounce\", 0))(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"max\", ctx.model.max)(\"min\", ctx.model.min)(\"ngClass\", ctx.getClass(\"element\", \"control\"))(\"pattern\", ctx.model.pattern)(\"placeholder\", ctx.model.placeholder)(\"readonly\", ctx.model.readOnly)(\"size\", ctx.model.getAdditional(\"size\", undefined))(\"spellcheck\", ctx.model.spellCheck)(\"step\", ctx.model.step)(\"type\", ctx.model.inputType);\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonInput, ɵngcc2.TextValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc3.PatternValidator, ɵngcc2.IonLabel], encapsulation: 2 });\nDynamicIonicInputComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicInputComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionInput: [{ type: ViewChild, args: [\"ionInput\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicInputComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-input\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-input #ionInput\\n               [accept]=\\\"model.accept || undefined\\\"\\n               [autocapitalize]=\\\"model.getAdditional('autocapitalize', 'off')\\\"\\n               [autocomplete]=\\\"model.autoComplete\\\"\\n               [autocorrect]=\\\"model.getAdditional('autocorrect', 'off')\\\"\\n               [clearInput]=\\\"model.getAdditional('clearInput', true)\\\"\\n               [clearOnEdit]=\\\"model.getAdditional('clearOnEdit', false)\\\"\\n               [debounce]=\\\"model.getAdditional('debounce', 0)\\\"\\n               [formControlName]=\\\"model.id\\\"\\n               [id]=\\\"id\\\"\\n               [max]=\\\"model.max\\\"\\n               [min]=\\\"model.min\\\"\\n               [ngClass]=\\\"getClass('element', 'control')\\\"\\n               [pattern]=\\\"model.pattern\\\"\\n               [placeholder]=\\\"model.placeholder\\\"\\n               [readonly]=\\\"model.readOnly\\\"\\n               [size]=\\\"model.getAdditional('size', undefined)\\\"\\n               [spellcheck]=\\\"model.spellCheck\\\"\\n               [step]=\\\"model.step\\\"\\n               [type]=\\\"model.inputType\\\"\\n               (ionBlur)=\\\"onBlur($event)\\\"\\n               (ionChange)=\\\"onChange($event)\\\"\\n               (ionFocus)=\\\"onFocus($event)\\\"></ion-input>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionInput: [{\n            type: ViewChild,\n            args: [\"ionInput\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicRadioGroupComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicRadioGroupComponent.ɵfac = function DynamicIonicRadioGroupComponent_Factory(t) { return new (t || DynamicIonicRadioGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicRadioGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicRadioGroupComponent, selectors: [[\"dynamic-ionic-radio-group\"]], viewQuery: function DynamicIonicRadioGroupComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionRadioGroup = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 8, consts: [[3, \"formGroup\"], [3, \"formControlName\", \"id\", \"ngClass\", \"ionChange\"], [\"ionRadioGroup\", \"\"], [4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"value\"]], template: function DynamicIonicRadioGroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵelementStart(1, \"ion-list\");\n        ɵngcc0.ɵɵelementStart(2, \"ion-radio-group\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ionChange\", function DynamicIonicRadioGroupComponent_Template_ion_radio_group_ionChange_2_listener($event) { return ctx.onChange($event); });\n        ɵngcc0.ɵɵtemplate(4, DynamicIonicRadioGroupComponent_ion_list_header_4_Template, 2, 1, \"ion-list-header\", 3);\n        ɵngcc0.ɵɵtemplate(5, DynamicIonicRadioGroupComponent_ion_item_5_Template, 4, 3, \"ion-item\", 4);\n        ɵngcc0.ɵɵpipe(6, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"ngClass\", ctx.getClass(\"element\", \"control\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(6, 6, ctx.model.options$));\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc2.IonList, ɵngcc2.IonRadioGroup, ɵngcc2.SelectValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc4.NgIf, ɵngcc4.NgForOf, ɵngcc2.IonListHeader, ɵngcc2.IonItem, ɵngcc2.IonLabel, ɵngcc2.IonRadio, ɵngcc2.RadioValueAccessor], pipes: [ɵngcc4.AsyncPipe], encapsulation: 2 });\nDynamicIonicRadioGroupComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicRadioGroupComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionRadioGroup: [{ type: ViewChild, args: [\"ionRadioGroup\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicRadioGroupComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-radio-group\",\n                template: \"<ng-container [formGroup]=\\\"group\\\">\\n\\n    <ion-list>\\n\\n        <ion-radio-group #ionRadioGroup\\n                         [formControlName]=\\\"model.id\\\"\\n                         [id]=\\\"id\\\"\\n                         [ngClass]=\\\"getClass('element', 'control')\\\"\\n                         (ionChange)=\\\"onChange($event)\\\">\\n\\n            <ion-list-header *ngIf=\\\"model.label !== null\\\">{{ model.label }}</ion-list-header>\\n\\n            <ion-item *ngFor=\\\"let option of model.options$ | async\\\" [ngClass]=\\\"getClass('element', 'option')\\\">\\n\\n                <ion-label>{{ option.label }}</ion-label>\\n\\n                <ion-radio [value]=\\\"option.value\\\"></ion-radio>\\n\\n            </ion-item>\\n\\n        </ion-radio-group>\\n\\n    </ion-list>\\n\\n</ng-container>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionRadioGroup: [{\n            type: ViewChild,\n            args: [\"ionRadioGroup\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicRangeComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicRangeComponent.ɵfac = function DynamicIonicRangeComponent_Factory(t) { return new (t || DynamicIonicRangeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicRangeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicRangeComponent, selectors: [[\"dynamic-ionic-range\"]], viewQuery: function DynamicIonicRangeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionRange = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 13, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [3, \"color\", \"debounce\", \"dualKnobs\", \"formControlName\", \"id\", \"max\", \"min\", \"ngClass\", \"pin\", \"snaps\", \"step\", \"ionBlur\", \"ionChange\", \"ionFocus\"], [\"ionRange\", \"\"], [3, \"innerHTML\", \"ngClass\"]], template: function DynamicIonicRangeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicRangeComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-range\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicRangeComponent_Template_ion_range_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionChange\", function DynamicIonicRangeComponent_Template_ion_range_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicRangeComponent_Template_ion_range_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.model.getAdditional(\"color\", undefined))(\"debounce\", ctx.model.getAdditional(\"debounce\", 0))(\"dualKnobs\", ctx.model.getAdditional(\"dualKnobs\", false))(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"max\", ctx.model.max)(\"min\", ctx.model.min)(\"ngClass\", ctx.getClass(\"element\", \"control\"))(\"pin\", ctx.model.getAdditional(\"pin\", true))(\"snaps\", ctx.model.getAdditional(\"snaps\", true))(\"step\", ctx.model.step);\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonRange, ɵngcc2.SelectValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc2.IonLabel], encapsulation: 2 });\nDynamicIonicRangeComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicRangeComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionRange: [{ type: ViewChild, args: [\"ionRange\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicRangeComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-range\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-range #ionRange\\n               [color]=\\\"model.getAdditional('color', undefined)\\\"\\n               [debounce]=\\\"model.getAdditional('debounce', 0)\\\"\\n               [dualKnobs]=\\\"model.getAdditional('dualKnobs', false)\\\"\\n               [formControlName]=\\\"model.id\\\"\\n               [id]=\\\"id\\\"\\n               [max]=\\\"model.max\\\"\\n               [min]=\\\"model.min\\\"\\n               [ngClass]=\\\"getClass('element', 'control')\\\"\\n               [pin]=\\\"model.getAdditional('pin', true)\\\"\\n               [snaps]=\\\"model.getAdditional('snaps', true)\\\"\\n               [step]=\\\"model.step\\\"\\n               (ionBlur)=\\\"onBlur($event)\\\"\\n               (ionChange)=\\\"onChange($event)\\\"\\n               (ionFocus)=\\\"onFocus($event)\\\"></ion-range>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionRange: [{\n            type: ViewChild,\n            args: [\"ionRange\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicSelectComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicSelectComponent.ɵfac = function DynamicIonicSelectComponent_Factory(t) { return new (t || DynamicIonicSelectComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicSelectComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicSelectComponent, selectors: [[\"dynamic-ionic-select\"]], viewQuery: function DynamicIonicSelectComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionSelect = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 14, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [3, \"cancelText\", \"formControlName\", \"id\", \"interface\", \"multiple\", \"ngClass\", \"okText\", \"placeholder\", \"selectedText\", \"ionBlur\", \"ionChange\", \"ionFocus\"], [\"ionSelect\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\", \"ngClass\"], [3, \"value\"]], template: function DynamicIonicSelectComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicSelectComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-select\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicSelectComponent_Template_ion_select_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionChange\", function DynamicIonicSelectComponent_Template_ion_select_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicSelectComponent_Template_ion_select_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵtemplate(4, DynamicIonicSelectComponent_ion_select_option_4_Template, 2, 2, \"ion-select-option\", 4);\n        ɵngcc0.ɵɵpipe(5, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cancelText\", ctx.model.getAdditional(\"cancelText\", \"Cancel\"))(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"interface\", ctx.model.getAdditional(\"interface\", \"alert\"))(\"multiple\", ctx.model.multiple)(\"ngClass\", ctx.getClass(\"element\", \"control\"))(\"okText\", ctx.model.getAdditional(\"okText\", \"OK\"))(\"placeholder\", ctx.model.placeholder)(\"selectedText\", ctx.model.getAdditional(\"selectedText\", null));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(5, 12, ctx.model.options$));\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonSelect, ɵngcc2.SelectValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc4.NgForOf, ɵngcc2.IonLabel, ɵngcc2.IonSelectOption], pipes: [ɵngcc4.AsyncPipe], encapsulation: 2 });\nDynamicIonicSelectComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicSelectComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionSelect: [{ type: ViewChild, args: [\"ionSelect\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicSelectComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-select\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-select #ionSelect\\n                [cancelText]=\\\"model.getAdditional('cancelText', 'Cancel')\\\"\\n                [formControlName]=\\\"model.id\\\"\\n                [id]=\\\"id\\\"\\n                [interface]=\\\"model.getAdditional('interface', 'alert')\\\"\\n                [multiple]=\\\"model.multiple\\\"\\n                [ngClass]=\\\"getClass('element', 'control')\\\"\\n                [okText]=\\\"model.getAdditional('okText', 'OK')\\\"\\n                [placeholder]=\\\"model.placeholder\\\"\\n                [selectedText]=\\\"model.getAdditional('selectedText', null)\\\"\\n                (ionBlur)=\\\"onBlur($event)\\\"\\n                (ionChange)=\\\"onChange($event)\\\"\\n                (ionFocus)=\\\"onFocus($event)\\\">\\n\\n        <ion-select-option *ngFor=\\\"let option of model.options$ | async\\\"\\n                           [value]=\\\"option.value\\\">{{ option.label }}</ion-select-option>\\n\\n    </ion-select>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionSelect: [{\n            type: ViewChild,\n            args: [\"ionSelect\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicToggleComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicToggleComponent.ɵfac = function DynamicIonicToggleComponent_Factory(t) { return new (t || DynamicIonicToggleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicToggleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicToggleComponent, selectors: [[\"dynamic-ionic-toggle\"]], viewQuery: function DynamicIonicToggleComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionToggle = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 7, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [3, \"checked\", \"color\", \"formControlName\", \"id\", \"ngClass\", \"ionBlur\", \"ionChange\", \"ionFocus\"], [\"ionToggle\", \"\"], [3, \"innerHTML\", \"ngClass\"]], template: function DynamicIonicToggleComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicToggleComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-toggle\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicToggleComponent_Template_ion_toggle_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionChange\", function DynamicIonicToggleComponent_Template_ion_toggle_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicToggleComponent_Template_ion_toggle_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"checked\", ctx.model.checked)(\"color\", ctx.model.getAdditional(\"color\", undefined))(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"ngClass\", ctx.getClass(\"element\", \"control\"));\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonToggle, ɵngcc2.BooleanValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc2.IonLabel], encapsulation: 2 });\nDynamicIonicToggleComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicToggleComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionToggle: [{ type: ViewChild, args: [\"ionToggle\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicToggleComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-toggle\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-toggle #ionToggle\\n                [checked]=\\\"model.checked\\\"\\n                [color]=\\\"model.getAdditional('color', undefined)\\\"\\n                [formControlName]=\\\"model.id\\\"\\n                [id]=\\\"id\\\"\\n                [ngClass]=\\\"getClass('element', 'control')\\\"\\n                (ionBlur)=\\\"onBlur($event)\\\"\\n                (ionChange)=\\\"onChange($event)\\\"\\n                (ionFocus)=\\\"onFocus($event)\\\"></ion-toggle>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionToggle: [{\n            type: ViewChild,\n            args: [\"ionToggle\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicTextAreaComponent extends DynamicFormControlComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicTextAreaComponent.ɵfac = function DynamicIonicTextAreaComponent_Factory(t) { return new (t || DynamicIonicTextAreaComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicTextAreaComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicTextAreaComponent, selectors: [[\"dynamic-ionic-textarea\"]], viewQuery: function DynamicIonicTextAreaComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c8, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ionTextArea = _t.first);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 7, consts: [[3, \"formGroup\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngIf\"], [\"clearInput\", \"true\", 3, \"formControlName\", \"id\", \"ngClass\", \"placeholder\", \"readonly\", \"ionBlur\", \"ionChange\", \"ionFocus\"], [\"ionTextArea\", \"\"], [3, \"innerHTML\", \"ngClass\"]], template: function DynamicIonicTextAreaComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ion-item\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicTextAreaComponent_ion_label_1_Template, 1, 5, \"ion-label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"ion-textarea\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ionBlur\", function DynamicIonicTextAreaComponent_Template_ion_textarea_ionBlur_2_listener($event) { return ctx.onBlur($event); })(\"ionChange\", function DynamicIonicTextAreaComponent_Template_ion_textarea_ionChange_2_listener($event) { return ctx.onChange($event); })(\"ionFocus\", function DynamicIonicTextAreaComponent_Template_ion_textarea_ionFocus_2_listener($event) { return ctx.onFocus($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.model.label !== null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"formControlName\", ctx.model.id)(\"id\", ctx.id)(\"ngClass\", ctx.getClass(\"element\", \"control\"))(\"placeholder\", ctx.model.placeholder)(\"readonly\", ctx.model.readOnly);\n    } }, directives: [ɵngcc2.IonItem, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, ɵngcc2.IonTextarea, ɵngcc2.TextValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.NgClass, ɵngcc2.IonLabel], encapsulation: 2 });\nDynamicIonicTextAreaComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicTextAreaComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionTextArea: [{ type: ViewChild, args: [\"ionTextArea\", { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicTextAreaComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-textarea\",\n                template: \"<ion-item [formGroup]=\\\"group\\\">\\n\\n    <ion-label *ngIf=\\\"model.label !== null\\\"\\n               [innerHTML]=\\\"model.label\\\"\\n               [ngClass]=\\\"[getClass('element', 'label'), getClass('grid', 'label')]\\\"></ion-label>\\n\\n    <ion-textarea #ionTextArea clearInput=\\\"true\\\"\\n                  [formControlName]=\\\"model.id\\\"\\n                  [id]=\\\"id\\\"\\n                  [ngClass]=\\\"getClass('element', 'control')\\\"\\n                  [placeholder]=\\\"model.placeholder\\\"\\n                  [readonly]=\\\"model.readOnly\\\"\\n                  (ionBlur)=\\\"onBlur($event)\\\"\\n                  (ionChange)=\\\"onChange($event)\\\"\\n                  (ionFocus)=\\\"onFocus($event)\\\"></ion-textarea>\\n\\n</ion-item>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], ionTextArea: [{\n            type: ViewChild,\n            args: [\"ionTextArea\", { static: true }]\n        }] }); })();\n\nclass DynamicIonicFormControlContainerComponent extends DynamicFormControlContainerComponent {\n    constructor(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService) {\n        super(changeDetectorRef, componentFactoryResolver, layoutService, validationService, componentService, relationService);\n        this.changeDetectorRef = changeDetectorRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.componentService = componentService;\n        this.relationService = relationService;\n        this.context = null;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.customEvent = new EventEmitter();\n    }\n    get componentType() {\n        return this.componentService.getCustomComponentType(this.model) || ionicUIFormControlMapFn(this.model);\n    }\n}\nDynamicIonicFormControlContainerComponent.ɵfac = function DynamicIonicFormControlContainerComponent_Factory(t) { return new (t || DynamicIonicFormControlContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormComponentService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormRelationService)); };\nDynamicIonicFormControlContainerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicFormControlContainerComponent, selectors: [[\"dynamic-ionic-form-control\"]], contentQueries: function DynamicIonicFormControlContainerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DynamicTemplateDirective, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplateList = _t);\n    } }, viewQuery: function DynamicIonicFormControlContainerComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c9, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.componentViewContainerRef = _t.first);\n    } }, hostVars: 2, hostBindings: function DynamicIonicFormControlContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.klass);\n    } }, inputs: { context: \"context\", group: \"group\", hostClass: \"hostClass\", inputTemplateList: [\"templates\", \"inputTemplateList\"], layout: \"layout\", model: \"model\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\", customEvent: \"ionEvent\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c11, decls: 6, vars: 10, consts: [[3, \"formGroup\", \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"componentViewContainer\", \"\"]], template: function DynamicIonicFormControlContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicIonicFormControlContainerComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementContainer(2, null, 2);\n        ɵngcc0.ɵɵtemplate(4, DynamicIonicFormControlContainerComponent_ng_container_4_Template, 1, 0, \"ng-container\", 1);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group)(\"ngClass\", ɵngcc0.ɵɵpureFunction3(6, _c10, \"ng-dynamic-forms-\" + ctx.model.type.toLowerCase(), ctx.getClass(\"element\", \"container\"), ctx.getClass(\"grid\", \"container\")));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.startTemplate == null ? null : ctx.startTemplate.templateRef)(\"ngTemplateOutletContext\", ctx.model);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.endTemplate == null ? null : ctx.endTemplate.templateRef)(\"ngTemplateOutletContext\", ctx.model);\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgClass, ɵngcc4.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\nDynamicIonicFormControlContainerComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ComponentFactoryResolver },\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService },\n    { type: DynamicFormComponentService },\n    { type: DynamicFormRelationService }\n];\nDynamicIonicFormControlContainerComponent.propDecorators = {\n    contentTemplateList: [{ type: ContentChildren, args: [DynamicTemplateDirective,] }],\n    klass: [{ type: HostBinding, args: [\"class\",] }],\n    context: [{ type: Input }],\n    group: [{ type: Input }],\n    hostClass: [{ type: Input }],\n    inputTemplateList: [{ type: Input, args: [\"templates\",] }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    customEvent: [{ type: Output, args: [\"ionEvent\",] }],\n    componentViewContainerRef: [{ type: ViewChild, args: [\"componentViewContainer\", { read: ViewContainerRef, static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicFormControlContainerComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-form-control\",\n                template: \"<div [formGroup]=\\\"group\\\"\\n     [ngClass]=\\\"['ng-dynamic-forms-'+model.type.toLowerCase(), getClass('element', 'container'), getClass('grid', 'container')]\\\">\\n\\n    <ng-container *ngTemplateOutlet=\\\"startTemplate?.templateRef; context: model\\\"></ng-container>\\n\\n    <ng-container #componentViewContainer></ng-container>\\n\\n    <ng-container *ngTemplateOutlet=\\\"endTemplate?.templateRef; context: model\\\"></ng-container>\\n\\n    <ng-content></ng-content>\\n\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }, { type: ɵngcc1.DynamicFormComponentService }, { type: ɵngcc1.DynamicFormRelationService }]; }, { context: [{\n            type: Input\n        }], blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], customEvent: [{\n            type: Output,\n            args: [\"ionEvent\"]\n        }], contentTemplateList: [{\n            type: ContentChildren,\n            args: [DynamicTemplateDirective]\n        }], klass: [{\n            type: HostBinding,\n            args: [\"class\"]\n        }], group: [{\n            type: Input\n        }], hostClass: [{\n            type: Input\n        }], inputTemplateList: [{\n            type: Input,\n            args: [\"templates\"]\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], componentViewContainerRef: [{\n            type: ViewChild,\n            args: [\"componentViewContainer\", { read: ViewContainerRef, static: true }]\n        }] }); })();\nfunction ionicUIFormControlMapFn(model) {\n    switch (model.type) {\n        case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n            return DynamicIonicFormArrayComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n            return DynamicIonicCheckboxComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n            return DynamicIonicFormGroupComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n            return DynamicIonicDateTimeComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n            return DynamicIonicFormGroupComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n            return DynamicIonicInputComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n            return DynamicIonicRadioGroupComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n            return DynamicIonicSelectComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n            return DynamicIonicRangeComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n            return DynamicIonicToggleComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n            return DynamicIonicTextAreaComponent;\n        case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n            return DynamicIonicDateTimeComponent;\n        default:\n            return null;\n    }\n}\n\nclass DynamicIonicFormArrayComponent extends DynamicFormArrayComponent {\n    constructor(layoutService, validationService) {\n        super(layoutService, validationService);\n        this.layoutService = layoutService;\n        this.validationService = validationService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.customEvent = new EventEmitter();\n        this.focus = new EventEmitter();\n    }\n}\nDynamicIonicFormArrayComponent.ɵfac = function DynamicIonicFormArrayComponent_Factory(t) { return new (t || DynamicIonicFormArrayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormLayoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormValidationService)); };\nDynamicIonicFormArrayComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicFormArrayComponent, selectors: [[\"dynamic-ionic-form-array\"]], viewQuery: function DynamicIonicFormArrayComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DynamicIonicFormControlContainerComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.components = _t);\n    } }, inputs: { formLayout: \"formLayout\", group: \"group\", layout: \"layout\", model: \"model\", templates: \"templates\" }, outputs: { blur: \"blur\", change: \"change\", customEvent: \"customEvent\", focus: \"focus\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 5, consts: [[3, \"formGroup\"], [3, \"formArrayName\", \"id\", \"ngClass\"], [\"role\", \"group\", 3, \"formGroupName\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"group\", 3, \"formGroupName\", \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"context\", \"group\", \"hidden\", \"layout\", \"model\", \"templates\", \"hostClass\", \"blur\", \"change\", \"focus\", \"ionEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"context\", \"group\", \"hidden\", \"layout\", \"model\", \"templates\", \"hostClass\", \"blur\", \"change\", \"focus\", \"ionEvent\"]], template: function DynamicIonicFormArrayComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, DynamicIonicFormArrayComponent_div_2_Template, 4, 10, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"formArrayName\", ctx.model.id)(\"id\", ctx.id)(\"ngClass\", ctx.getClass(\"element\", \"control\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.model.groups);\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc3.FormArrayName, ɵngcc4.NgClass, ɵngcc4.NgForOf, ɵngcc3.FormGroupName, ɵngcc4.NgTemplateOutlet, DynamicIonicFormControlContainerComponent], encapsulation: 2 });\nDynamicIonicFormArrayComponent.ctorParameters = () => [\n    { type: DynamicFormLayoutService },\n    { type: DynamicFormValidationService }\n];\nDynamicIonicFormArrayComponent.propDecorators = {\n    formLayout: [{ type: Input }],\n    group: [{ type: Input }],\n    layout: [{ type: Input }],\n    model: [{ type: Input }],\n    templates: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    customEvent: [{ type: Output }],\n    focus: [{ type: Output }],\n    components: [{ type: ViewChildren, args: [forwardRef(() => DynamicIonicFormControlContainerComponent),] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicFormArrayComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-form-array\",\n                template: \"<ng-container [formGroup]=\\\"group\\\">\\n\\n    <div [formArrayName]=\\\"model.id\\\" [id]=\\\"id\\\" [ngClass]=\\\"getClass('element', 'control')\\\">\\n\\n        <div *ngFor=\\\"let groupModel of model.groups; let idx = index\\\" role=\\\"group\\\"\\n             [formGroupName]=\\\"idx\\\" [ngClass]=\\\"[getClass('element', 'group'), getClass('grid', 'group')]\\\">\\n\\n            <ng-container *ngTemplateOutlet=\\\"startTemplate?.templateRef; context: groupModel\\\"></ng-container>\\n\\n            <dynamic-ionic-form-control *ngFor=\\\"let _model of groupModel.group\\\"\\n                                        [context]=\\\"groupModel\\\"\\n                                        [group]=\\\"array.at(idx)\\\"\\n                                        [hidden]=\\\"_model.hidden\\\"\\n                                        [layout]=\\\"formLayout\\\"\\n                                        [model]=\\\"_model\\\"\\n                                        [templates]=\\\"templates\\\"\\n                                        [hostClass]=\\\"[getClass('element','children'), getClass('grid','children')]\\\"\\n                                        (blur)=\\\"onBlur($event)\\\"\\n                                        (change)=\\\"onChange($event)\\\"\\n                                        (focus)=\\\"onFocus($event)\\\"\\n                                        (ionEvent)=\\\"onCustomEvent($event, null, true)\\\"></dynamic-ionic-form-control>\\n\\n            <ng-container *ngTemplateOutlet=\\\"endTemplate?.templateRef; context: groupModel\\\"></ng-container>\\n\\n        </div>\\n\\n    </div>\\n\\n</ng-container>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc1.DynamicFormLayoutService }, { type: ɵngcc1.DynamicFormValidationService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], customEvent: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], formLayout: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], templates: [{\n            type: Input\n        }], components: [{\n            type: ViewChildren,\n            args: [forwardRef(() => DynamicIonicFormControlContainerComponent)]\n        }] }); })();\n\nclass DynamicIonicFormComponent extends DynamicFormComponent {\n    constructor(changeDetectorRef, componentService) {\n        super(changeDetectorRef, componentService);\n        this.changeDetectorRef = changeDetectorRef;\n        this.componentService = componentService;\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ionEvent = new EventEmitter();\n    }\n}\nDynamicIonicFormComponent.ɵfac = function DynamicIonicFormComponent_Factory(t) { return new (t || DynamicIonicFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DynamicFormComponentService)); };\nDynamicIonicFormComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicIonicFormComponent, selectors: [[\"dynamic-ionic-form\"]], contentQueries: function DynamicIonicFormComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DynamicTemplateDirective, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    } }, viewQuery: function DynamicIonicFormComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DynamicIonicFormControlContainerComponent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.components = _t);\n    } }, inputs: { group: \"group\", model: \"model\", layout: \"layout\" }, outputs: { blur: \"blur\", change: \"change\", focus: \"focus\", ionEvent: \"ionEvent\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 2, consts: [[3, \"group\", \"hidden\", \"layout\", \"model\", \"templates\", \"blur\", \"change\", \"focus\", \"ionEvent\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"group\", \"hidden\", \"layout\", \"model\", \"templates\", \"blur\", \"change\", \"focus\", \"ionEvent\"]], template: function DynamicIonicFormComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DynamicIonicFormComponent_dynamic_ionic_form_control_0_Template, 1, 5, \"dynamic-ionic-form-control\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.model)(\"ngForTrackBy\", ctx.trackByFn);\n    } }, directives: [ɵngcc4.NgForOf, DynamicIonicFormControlContainerComponent], encapsulation: 2, changeDetection: 0 });\nDynamicIonicFormComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DynamicFormComponentService }\n];\nDynamicIonicFormComponent.propDecorators = {\n    group: [{ type: Input }],\n    model: [{ type: Input }],\n    layout: [{ type: Input }],\n    blur: [{ type: Output }],\n    change: [{ type: Output }],\n    focus: [{ type: Output }],\n    ionEvent: [{ type: Output }],\n    templates: [{ type: ContentChildren, args: [DynamicTemplateDirective,] }],\n    components: [{ type: ViewChildren, args: [DynamicIonicFormControlContainerComponent,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIonicFormComponent, [{\n        type: Component,\n        args: [{\n                selector: \"dynamic-ionic-form\",\n                template: \"<dynamic-ionic-form-control *ngFor=\\\"let controlModel of model; trackBy: trackByFn\\\"\\n                            [group]=\\\"group\\\"\\n                            [hidden]=\\\"controlModel.hidden\\\"\\n                            [layout]=\\\"layout\\\"\\n                            [model]=\\\"controlModel\\\"\\n                            [templates]=\\\"templates\\\"\\n                            (blur)=\\\"onBlur($event)\\\"\\n                            (change)=\\\"onChange($event)\\\"\\n                            (focus)=\\\"onFocus($event)\\\"\\n                            (ionEvent)=\\\"onCustomEvent($event, ionEvent)\\\"></dynamic-ionic-form-control>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.DynamicFormComponentService }]; }, { blur: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], ionEvent: [{\n            type: Output\n        }], group: [{\n            type: Input\n        }], model: [{\n            type: Input\n        }], layout: [{\n            type: Input\n        }], templates: [{\n            type: ContentChildren,\n            args: [DynamicTemplateDirective]\n        }], components: [{\n            type: ViewChildren,\n            args: [DynamicIonicFormControlContainerComponent]\n        }] }); })();\n\nclass DynamicFormsIonicUIModule {\n}\nDynamicFormsIonicUIModule.ɵfac = function DynamicFormsIonicUIModule_Factory(t) { return new (t || DynamicFormsIonicUIModule)(); };\nDynamicFormsIonicUIModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicFormsIonicUIModule });\nDynamicFormsIonicUIModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            IonicModule,\n            TextMaskModule,\n            DynamicFormsCoreModule\n        ], DynamicFormsCoreModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormsIonicUIModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    ReactiveFormsModule,\n                    IonicModule,\n                    TextMaskModule,\n                    DynamicFormsCoreModule\n                ],\n                declarations: [\n                    DynamicIonicCheckboxComponent,\n                    DynamicIonicDateTimeComponent,\n                    DynamicIonicFormArrayComponent,\n                    DynamicIonicFormComponent,\n                    DynamicIonicFormControlContainerComponent,\n                    DynamicIonicFormGroupComponent,\n                    DynamicIonicInputComponent,\n                    DynamicIonicRadioGroupComponent,\n                    DynamicIonicRangeComponent,\n                    DynamicIonicSelectComponent,\n                    DynamicIonicTextAreaComponent,\n                    DynamicIonicToggleComponent\n                ],\n                entryComponents: [\n                    DynamicIonicCheckboxComponent,\n                    DynamicIonicDateTimeComponent,\n                    DynamicIonicFormArrayComponent,\n                    DynamicIonicFormGroupComponent,\n                    DynamicIonicInputComponent,\n                    DynamicIonicRadioGroupComponent,\n                    DynamicIonicRangeComponent,\n                    DynamicIonicSelectComponent,\n                    DynamicIonicTextAreaComponent,\n                    DynamicIonicToggleComponent\n                ],\n                exports: [\n                    DynamicFormsCoreModule,\n                    DynamicIonicCheckboxComponent,\n                    DynamicIonicDateTimeComponent,\n                    DynamicIonicFormArrayComponent,\n                    DynamicIonicFormComponent,\n                    DynamicIonicFormControlContainerComponent,\n                    DynamicIonicFormGroupComponent,\n                    DynamicIonicInputComponent,\n                    DynamicIonicRadioGroupComponent,\n                    DynamicIonicRangeComponent,\n                    DynamicIonicSelectComponent,\n                    DynamicIonicTextAreaComponent,\n                    DynamicIonicToggleComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicFormsIonicUIModule, { declarations: function () { return [DynamicIonicCheckboxComponent, DynamicIonicDateTimeComponent, DynamicIonicFormArrayComponent, DynamicIonicFormComponent, DynamicIonicFormControlContainerComponent, DynamicIonicFormGroupComponent, DynamicIonicInputComponent, DynamicIonicRadioGroupComponent, DynamicIonicRangeComponent, DynamicIonicSelectComponent, DynamicIonicTextAreaComponent, DynamicIonicToggleComponent]; }, imports: function () { return [CommonModule,\n        ReactiveFormsModule,\n        IonicModule,\n        TextMaskModule,\n        DynamicFormsCoreModule]; }, exports: function () { return [DynamicFormsCoreModule, DynamicIonicCheckboxComponent, DynamicIonicDateTimeComponent, DynamicIonicFormArrayComponent, DynamicIonicFormComponent, DynamicIonicFormControlContainerComponent, DynamicIonicFormGroupComponent, DynamicIonicInputComponent, DynamicIonicRadioGroupComponent, DynamicIonicRangeComponent, DynamicIonicSelectComponent, DynamicIonicTextAreaComponent, DynamicIonicToggleComponent]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DynamicFormsIonicUIModule, DynamicIonicCheckboxComponent, DynamicIonicDateTimeComponent, DynamicIonicFormArrayComponent, DynamicIonicFormComponent, DynamicIonicFormControlContainerComponent, DynamicIonicFormGroupComponent, DynamicIonicInputComponent, DynamicIonicRadioGroupComponent, DynamicIonicRangeComponent, DynamicIonicSelectComponent, DynamicIonicTextAreaComponent, DynamicIonicToggleComponent, ionicUIFormControlMapFn };\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar textMaskCore_1 = require(\"text-mask-core/dist/textMaskCore\");\nvar ɵngcc0 = require('@angular/core');\nvar TextMaskConfig = /** @class */ (function () {\n    function TextMaskConfig() {\n    }\n    return TextMaskConfig;\n}());\nexports.TextMaskConfig = TextMaskConfig;\nexports.MASKEDINPUT_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return MaskedInputDirective; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    var userAgent = platform_browser_1.ɵgetDOM() ? platform_browser_1.ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\nvar MaskedInputDirective = /** @class */ (function () {\n    function MaskedInputDirective(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.textMaskConfig = {\n            mask: [],\n            guide: true,\n            placeholderChar: '_',\n            pipe: undefined,\n            keepCharPositions: false,\n        };\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    MaskedInputDirective.prototype.ngOnChanges = function (changes) {\n        this._setupMask(true);\n        if (this.textMaskInputElement !== undefined) {\n            this.textMaskInputElement.update(this.inputElement.value);\n        }\n    };\n    MaskedInputDirective.prototype.writeValue = function (value) {\n        this._setupMask();\n        // set the initial value for cases where the mask is disabled\n        var normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this.inputElement, 'value', normalizedValue);\n        if (this.textMaskInputElement !== undefined) {\n            this.textMaskInputElement.update(value);\n        }\n    };\n    MaskedInputDirective.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    MaskedInputDirective.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    MaskedInputDirective.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    MaskedInputDirective.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this._setupMask();\n            if (this.textMaskInputElement !== undefined) {\n                this.textMaskInputElement.update(value);\n                // get the updated value\n                value = this.inputElement.value;\n                this.onChange(value);\n            }\n        }\n    };\n    MaskedInputDirective.prototype._setupMask = function (create) {\n        if (create === void 0) { create = false; }\n        if (!this.inputElement) {\n            if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n                // `textMask` directive is used directly on an input element\n                this.inputElement = this._elementRef.nativeElement;\n            }\n            else {\n                // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n                this.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0];\n            }\n        }\n        if (this.inputElement && create) {\n            this.textMaskInputElement = textMaskCore_1.createTextMaskInputElement(Object.assign({ inputElement: this.inputElement }, this.textMaskConfig));\n        }\n    };\n    MaskedInputDirective.prototype._compositionStart = function () { this._composing = true; };\n    MaskedInputDirective.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this._handleInput(value);\n    };\n    /** @nocollapse */\n    MaskedInputDirective.ctorParameters = function () { return [\n        { type: core_1.Renderer2, },\n        { type: core_1.ElementRef, },\n        { type: undefined, decorators: [{ type: core_1.Optional }, { type: core_1.Inject, args: [forms_1.COMPOSITION_BUFFER_MODE,] },] },\n    ]; };\n    MaskedInputDirective.propDecorators = {\n        'textMaskConfig': [{ type: core_1.Input, args: ['textMask',] },],\n    };\nMaskedInputDirective.ɵfac = function MaskedInputDirective_Factory(t) { return new (t || MaskedInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(forms_1.COMPOSITION_BUFFER_MODE, 8)); };\nMaskedInputDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaskedInputDirective, selectors: [[\"\", \"textMask\", \"\"]], hostBindings: function MaskedInputDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MaskedInputDirective_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function MaskedInputDirective_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function MaskedInputDirective_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function MaskedInputDirective_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, inputs: { textMaskConfig: [\"textMask\", \"textMaskConfig\"] }, exportAs: [\"textMask\"], features: [ɵngcc0.ɵɵProvidersFeature([exports.MASKEDINPUT_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskedInputDirective, [{\n        type: core_1.Directive,\n        args: [{\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                selector: '[textMask]',\n                exportAs: 'textMask',\n                providers: [exports.MASKEDINPUT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: core_1.Optional\n            }, {\n                type: core_1.Inject,\n                args: [forms_1.COMPOSITION_BUFFER_MODE]\n            }] }]; }, { textMaskConfig: [{\n            type: core_1.Input,\n            args: ['textMask']\n        }] }); })();\n    return MaskedInputDirective;\n}());\nexports.MaskedInputDirective = MaskedInputDirective;\nvar TextMaskModule = /** @class */ (function () {\n    function TextMaskModule() {\n    }\n    /** @nocollapse */\n    TextMaskModule.ctorParameters = function () { return []; };\nTextMaskModule.ɵfac = function TextMaskModule_Factory(t) { return new (t || TextMaskModule)(); };\nTextMaskModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextMaskModule });\nTextMaskModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextMaskModule, [{\n        type: core_1.NgModule,\n        args: [{\n                declarations: [MaskedInputDirective],\n                exports: [MaskedInputDirective]\n            }]\n    }], function () { return []; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextMaskModule, { declarations: [MaskedInputDirective], exports: [MaskedInputDirective] }); })();\n    return TextMaskModule;\n}());\nexports.TextMaskModule = TextMaskModule;\nvar textMaskCore_2 = require(\"text-mask-core/dist/textMaskCore\");\nexports.conformToMask = textMaskCore_2.conformToMask;\n\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define([],r):\"object\"==typeof exports?exports.textMaskCore=r():e.textMaskCore=r()}(this,function(){return function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p=\"\",r(0)}([function(e,r,t){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,\"__esModule\",{value:!0});var o=t(3);Object.defineProperty(r,\"conformToMask\",{enumerable:!0,get:function(){return n(o).default}});var i=t(2);Object.defineProperty(r,\"adjustCaretPosition\",{enumerable:!0,get:function(){return n(i).default}});var a=t(5);Object.defineProperty(r,\"createTextMaskInputElement\",{enumerable:!0,get:function(){return n(a).default}})},function(e,r){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.placeholderChar=\"_\",r.strFunction=\"function\"},function(e,r){\"use strict\";function t(e){var r=e.previousConformedValue,t=void 0===r?o:r,i=e.previousPlaceholder,a=void 0===i?o:i,u=e.currentCaretPosition,l=void 0===u?0:u,s=e.conformedValue,f=e.rawValue,d=e.placeholderChar,c=e.placeholder,p=e.indexesOfPipedChars,v=void 0===p?n:p,h=e.caretTrapIndexes,m=void 0===h?n:h;if(0===l||!f.length)return 0;var y=f.length,g=t.length,b=c.length,C=s.length,P=y-g,k=P>0,x=0===g,O=P>1&&!k&&!x;if(O)return l;var T=k&&(t===s||s===c),w=0,M=void 0,S=void 0;if(T)w=l-P;else{var j=s.toLowerCase(),_=f.toLowerCase(),V=_.substr(0,l).split(o),A=V.filter(function(e){return j.indexOf(e)!==-1});S=A[A.length-1];var N=a.substr(0,A.length).split(o).filter(function(e){return e!==d}).length,E=c.substr(0,A.length).split(o).filter(function(e){return e!==d}).length,F=E!==N,R=void 0!==a[A.length-1]&&void 0!==c[A.length-2]&&a[A.length-1]!==d&&a[A.length-1]!==c[A.length-1]&&a[A.length-1]===c[A.length-2];!k&&(F||R)&&N>0&&c.indexOf(S)>-1&&void 0!==f[l]&&(M=!0,S=f[l]);for(var I=v.map(function(e){return j[e]}),J=I.filter(function(e){return e===S}).length,W=A.filter(function(e){return e===S}).length,q=c.substr(0,c.indexOf(d)).split(o).filter(function(e,r){return e===S&&f[r]!==e}).length,L=q+W+J+(M?1:0),z=0,B=0;B<C;B++){var D=j[B];if(w=B+1,D===S&&z++,z>=L)break}}if(k){for(var G=w,H=w;H<=b;H++)if(c[H]===d&&(G=H),c[H]===d||m.indexOf(H)!==-1||H===b)return G}else if(M){for(var K=w-1;K>=0;K--)if(s[K]===S||m.indexOf(K)!==-1||0===K)return K}else for(var Q=w;Q>=0;Q--)if(c[Q-1]===d||m.indexOf(Q)!==-1||0===Q)return Q}Object.defineProperty(r,\"__esModule\",{value:!0}),r.default=t;var n=[],o=\"\"},function(e,r,t){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(0,i.isArray)(r)){if((\"undefined\"==typeof r?\"undefined\":o(r))!==a.strFunction)throw new Error(\"Text-mask:conformToMask; The mask property must be an array.\");r=r(e,t),r=(0,i.processCaretTraps)(r).maskWithoutCaretTraps}var n=t.guide,s=void 0===n||n,f=t.previousConformedValue,d=void 0===f?l:f,c=t.placeholderChar,p=void 0===c?a.placeholderChar:c,v=t.placeholder,h=void 0===v?(0,i.convertMaskToPlaceholder)(r,p):v,m=t.currentCaretPosition,y=t.keepCharPositions,g=s===!1&&void 0!==d,b=e.length,C=d.length,P=h.length,k=r.length,x=b-C,O=x>0,T=m+(O?-x:0),w=T+Math.abs(x);if(y===!0&&!O){for(var M=l,S=T;S<w;S++)h[S]===p&&(M+=p);e=e.slice(0,T)+M+e.slice(T,b)}for(var j=e.split(l).map(function(e,r){return{char:e,isNew:r>=T&&r<w}}),_=b-1;_>=0;_--){var V=j[_].char;if(V!==p){var A=_>=T&&C===k;V===h[A?_-x:_]&&j.splice(_,1)}}var N=l,E=!1;e:for(var F=0;F<P;F++){var R=h[F];if(R===p){if(j.length>0)for(;j.length>0;){var I=j.shift(),J=I.char,W=I.isNew;if(J===p&&g!==!0){N+=p;continue e}if(r[F].test(J)){if(y===!0&&W!==!1&&d!==l&&s!==!1&&O){for(var q=j.length,L=null,z=0;z<q;z++){var B=j[z];if(B.char!==p&&B.isNew===!1)break;if(B.char===p){L=z;break}}null!==L?(N+=J,j.splice(L,1)):F--}else N+=J;continue e}E=!0}g===!1&&(N+=h.substr(F,P));break}N+=R}if(g&&O===!1){for(var D=null,G=0;G<N.length;G++)h[G]===p&&(D=G);N=null!==D?N.substr(0,D+1):l}return{conformedValue:N,meta:{someCharsRejected:E}}}Object.defineProperty(r,\"__esModule\",{value:!0});var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};r.default=n;var i=t(4),a=t(1),u=[],l=\"\"},function(e,r,t){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s.placeholderChar;if(!o(e))throw new Error(\"Text-mask:convertMaskToPlaceholder; The mask property must be an array.\");if(e.indexOf(r)!==-1)throw new Error(\"Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\\n\\n\"+(\"The placeholder character that was received is: \"+JSON.stringify(r)+\"\\n\\n\")+(\"The mask that was received is: \"+JSON.stringify(e)));return e.map(function(e){return e instanceof RegExp?r:e}).join(\"\")}function o(e){return Array.isArray&&Array.isArray(e)||e instanceof Array}function i(e){return\"string\"==typeof e||e instanceof String}function a(e){return\"number\"==typeof e&&void 0===e.length&&!isNaN(e)}function u(e){return\"undefined\"==typeof e||null===e}function l(e){for(var r=[],t=void 0;t=e.indexOf(d),t!==-1;)r.push(t),e.splice(t,1);return{maskWithoutCaretTraps:e,indexes:r}}Object.defineProperty(r,\"__esModule\",{value:!0}),r.convertMaskToPlaceholder=n,r.isArray=o,r.isString=i,r.isNumber=a,r.isNil=u,r.processCaretTraps=l;var s=t(1),f=[],d=\"[]\"},function(e,r,t){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var r={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:r,update:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=n.inputElement,s=n.mask,d=n.guide,m=n.pipe,g=n.placeholderChar,b=void 0===g?v.placeholderChar:g,C=n.keepCharPositions,P=void 0!==C&&C,k=n.showMask,x=void 0!==k&&k;if(\"undefined\"==typeof t&&(t=o.value),t!==r.previousConformedValue){(\"undefined\"==typeof s?\"undefined\":l(s))===y&&void 0!==s.pipe&&void 0!==s.mask&&(m=s.pipe,s=s.mask);var O=void 0,T=void 0;if(s instanceof Array&&(O=(0,p.convertMaskToPlaceholder)(s,b)),s!==!1){var w=a(t),M=o.selectionEnd,S=r.previousConformedValue,j=r.previousPlaceholder,_=void 0;if((\"undefined\"==typeof s?\"undefined\":l(s))===v.strFunction){if(T=s(w,{currentCaretPosition:M,previousConformedValue:S,placeholderChar:b}),T===!1)return;var V=(0,p.processCaretTraps)(T),A=V.maskWithoutCaretTraps,N=V.indexes;T=A,_=N,O=(0,p.convertMaskToPlaceholder)(T,b)}else T=s;var E={previousConformedValue:S,guide:d,placeholderChar:b,pipe:m,placeholder:O,currentCaretPosition:M,keepCharPositions:P},F=(0,c.default)(w,T,E),R=F.conformedValue,I=(\"undefined\"==typeof m?\"undefined\":l(m))===v.strFunction,J={};I&&(J=m(R,u({rawValue:w},E)),J===!1?J={value:S,rejected:!0}:(0,p.isString)(J)&&(J={value:J}));var W=I?J.value:R,q=(0,f.default)({previousConformedValue:S,previousPlaceholder:j,conformedValue:W,placeholder:O,rawValue:w,currentCaretPosition:M,placeholderChar:b,indexesOfPipedChars:J.indexesOfPipedChars,caretTrapIndexes:_}),L=W===O&&0===q,z=x?O:h,B=L?z:W;r.previousConformedValue=B,r.previousPlaceholder=O,o.value!==B&&(o.value=B,i(o,q))}}}}}function i(e,r){document.activeElement===e&&(g?b(function(){return e.setSelectionRange(r,r,m)},0):e.setSelectionRange(r,r,m))}function a(e){if((0,p.isString)(e))return e;if((0,p.isNumber)(e))return String(e);if(void 0===e||null===e)return h;throw new Error(\"The 'value' provided to Text Mask needs to be a string or a number. The value received was:\\n\\n \"+JSON.stringify(e))}Object.defineProperty(r,\"__esModule\",{value:!0});var u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};r.default=o;var s=t(2),f=n(s),d=t(3),c=n(d),p=t(4),v=t(1),h=\"\",m=\"none\",y=\"object\",g=\"undefined\"!=typeof navigator&&/Android/i.test(navigator.userAgent),b=\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout}])});"],"names":[],"sourceRoot":"webpack:///"}