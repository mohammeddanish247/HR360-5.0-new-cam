{"version":3,"mappings":"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","names":["ButtonComponent","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selector","template","IconButtonComponent","InputComponent","event","value","target","console","log","focused","error","SharedModule","declarations","_input_input_component__WEBPACK_IMPORTED_MODULE_0__","_button_button_component__WEBPACK_IMPORTED_MODULE_1__","_icon_button_icon_button_component__WEBPACK_IMPORTED_MODULE_2__","imports","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","exports","routes","path","component","_login_page__WEBPACK_IMPORTED_MODULE_0__","LoginPageRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","LoginPageModule","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_login_routing_module__WEBPACK_IMPORTED_MODULE_0__","_components_shared_module__WEBPACK_IMPORTED_MODULE_2__","_login_page__WEBPACK_IMPORTED_MODULE_1__","LoginPage","storage","androidPermission","navCtrl","auth","router","route","platform","splashscreen","iab","themeService","params","subscribe","val","ngOnInit","get","then","res","enableDebugMode","enableLiveMode","ready","da","checkNetwork","isChecked","un","pw","username","password","focused2","error2","checkPermission","PERMISSION","WRITE_EXTERNAL_STORAGE","result","hasPermission","requestPermission","alert","err","browser","create","Promise","resolve","reject","database","executeSql","e","form","a","connected","undefined","showToast","loginService","set","firmwareUpdateCheck","presentLoading","_angular_common_http__WEBPACK_IMPORTED_MODULE_8__","httpSend","resLogin","dismissLoading","gotoTabs","setTimeout","message","name","createEngineerInfoTable","createAllTables","navigate","succ","rows","length","createJobTable","createOnRouteTable","createArrivedTable","createJobsStatusTable","createAbandonTable","createAuthorizationTable","createCompleteClaimTable","createCompleteServiceTable","newApplianceTable","certificateTable","boilerInstallTable","boilerInstallPicsTable","boilerInstallSignTable","completedjobsTable","enggPicsTable","siteSurveyTable","siteSurveyPics","siteSurveySign","createmakemodel","createErrorLogTable","createFirmwareUrl","JSON","stringify","_ionic_storage__WEBPACK_IMPORTED_MODULE_9__","_awesome_cordova_plugins_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_10__","_api_service__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_11__","_ionic_native_splash_screen_ngx__WEBPACK_IMPORTED_MODULE_3__","_ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_5__","_themes_service__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__"],"sources":["webpack:///src/app/components/button/button.component.ts","webpack:///src/app/components/icon-button/icon-button.component.ts","webpack:///src/app/components/input/input.component.ts","webpack:///src/app/components/shared.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.ts","webpack:///src/app/components/button/button.component.html","webpack:///src/app/components/icon-button/icon-button.component.html","webpack:///src/app/components/input/input.component.html","webpack:///src/app/login/login.page.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @Input() label: string;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss'],\n})\nexport class IconButtonComponent {\n  @Input() label: string;\n  @Input() icon: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent {\n  @Input() label: string;\n  @Input() type = 'text'; // set default type be text\n\n  focused: boolean;\n  error : boolean;\n\n  onBlur(event: any) {\n    const value = event.target.value;\nconsole.log(\"Danish\"+value);\n\n    if (!value) {\n      this.focused = false;\n      this.error = true\n    }else{\n      this.error = false\n    }\n   \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { InputComponent } from './input/input.component';\nimport { ButtonComponent } from './button/button.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\n\n@NgModule({\n  declarations: [InputComponent, ButtonComponent, IconButtonComponent],\n  imports: [CommonModule, IonicModule],\n  exports: [InputComponent, ButtonComponent, IconButtonComponent],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TabsPage } from '../tabs/tabs.page';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from '../components/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Form, NgForm } from \"@angular/forms\";\nimport { ApiService } from \"../api.service\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Platform, NavController } from \"@ionic/angular\";\nimport { SplashScreen } from \"@ionic-native/splash-screen/ngx\";\nimport { AndroidPermissions } from '@awesome-cordova-plugins/android-permissions/ngx';\nimport { Storage } from \"@ionic/storage\";\nimport { InAppBrowser } from \"@ionic-native/in-app-browser/ngx\";\nimport { ThemesService } from \"../themes.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.page.html\",\n  styleUrls: [\"./login.page.scss\"],\n})\nexport class LoginPage implements OnInit {\n  isChecked: boolean;\n\n  constructor(\n    private storage: Storage,\n    private androidPermission: AndroidPermissions,\n    public navCtrl: NavController,\n    private auth: ApiService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private platform: Platform,\n    private splashscreen: SplashScreen,\n    private iab: InAppBrowser,\n    private themeService : ThemesService\n  ) {\n    route.params.subscribe((val) => {\n      this.ngOnInit();\n    });\n  }\n\n  ngOnInit() {\n    this.storage.get(\"debugmode\").then((res) => {\n      if (res == \"true\") {\n        this.themeService.enableDebugMode();\n      } else {\n        this.themeService.enableLiveMode();\n      }\n    });\n    this.platform.ready().then((da) => {\n      this.auth.checkNetwork();    \n      this.storage\n      .get(\"updateFirmware\").then((res) => {\n        console.log(\"Danish\"+res);        \n        if (res == \"true\") {\n          console.log(\"Danish\"+res);\n          this.themeService.enableDebugMode();\n        } else {\n          this.themeService.enableLiveMode();\n        }\n      });\n    });\n    this.storage.get('isChecked').then(res=>{\n      this.isChecked = res;\n      if (res) {\n        this.storage.get('username').then(un=>{\n          this.storage.get('password').then(pw=>{\n            console.log(un+\" and \"+pw);\n            \n            this.username = un;\n            this.password = pw;\n            // this.loginService(un,pw);\n          })\n        })\n      }else{\n        this.username = \"\";\n        this.password = \"\";\n      }\n    })\n \n  }\n\n  focused: boolean;\n  error: boolean;\n  focused2: boolean;\n  error2: boolean;\n  username: string;\n  password: string;\n  newusername: string;\n  devcolor= \"#a71d31\";\n\n  onBlur(event: any) {\n    const value = event.target.value;\n    this.username = value;\n    if (!value) {\n      this.focused = false;\n      this.error = true;\n    } else {\n      this.error = false;\n    }\n  }\n\n  onBlur2(event: any) {\n    const value = event.target.value;\n    this.password = value;\n    if (!value) {\n      this.focused2 = false;\n      this.error2 = true;\n    } else {\n      this.error2 = false;\n    }\n  }\n\n\n\n  //Check if application having GPS access permission\n  checkWritePermission() {\n    this.androidPermission\n      .checkPermission(this.androidPermission.PERMISSION.WRITE_EXTERNAL_STORAGE)\n      .then(\n        (result) => {\n          if (result.hasPermission) {\n            //If having permission show 'Turn On GPS' dialogue\n          } else {\n            //If not having permission ask for permission\n            this.androidPermission\n              .requestPermission(\n                this.androidPermission.PERMISSION.WRITE_EXTERNAL_STORAGE\n              )\n              .then(\n                () => {\n                  // call method to turn on GPS\n                },\n                (error) => {\n                  //Show alert if user click on 'No Thanks'\n                  alert(\n                    \"requestPermission Error requesting file read permissions \" +\n                      error\n                  );\n                }\n              );\n          }\n        },\n        (err) => {\n          alert(err);\n        }\n      );\n  }\n\n\n  gotoRegister() {\n    const browser = this.iab.create(\n      \"https://www.homeresponse360.co.uk/app-signup/\"\n    );\n  }\n\n  emptyjobslist() {\n    return new Promise((resolve, reject) => {\n      this.auth.database\n        .executeSql(\"delete from jobslist\", [])\n        .then((res) => {\n          resolve(\"jobslist resolved\");\n        })\n        .catch((e) => {});\n    });\n  }\n\n\n  async onSubmit(form: NgForm) {\n    let a = await this.auth.checkNetwork();\n    if (a.connected) {\n      if(this.username==\"\"||this.username==null||this.username==undefined){\n        this.auth.showToast(\"Username cannot be empty.\",'danger');\n      }else {\n        if(this.password==\"\"||this.password==null||this.password==undefined){\n        this.auth.showToast(\"Password cannot be empty.\",'danger');\n        }else{\n          this.loginService(this.username,this.password);\n          this.storage.set('username',this.username);\n          this.storage.set('password',this.password);\n        } \n      }\n    } else {\n      this.auth.showToast(\"Internet not connected. There was a problem with your network connection.\",'danger');\n    }\n    \n  }\n\n  loginService(username : string, password : string){\n    this.auth.firmwareUpdateCheck().then(res=>{\n      console.log(\"Danish \"+res);      \n      this.auth.presentLoading(\"Please wait while we sign you in.\");\n      let params = new HttpParams()\n      .set(\"username\", username)\n      .set(\"password\", password)\n      this.auth.httpSend(\"Service_Login\", params, \"post\").subscribe(\n      (resLogin) => {\n        console.log();\n        \n        //resLogin = \"18648a22-5f02-41bf-a171-d2873adc9c0b\";\n        if (resLogin[\"Msg\"] == \"Failed\" || resLogin[\"Msg\"] == \"null\") {\n          this.auth.dismissLoading();\n          this.auth.alert(\"The Username or Password that you've entered is either incorrect or misspelled. Please try again.\",\"Invalid Credentials\");\n        } else {\n          //login success\n          this.storage.set('datasyncstatus','novice');\n          this.storage.set(\"enggid\", resLogin[\"Msg\"]);\n          this.gotoTabs(resLogin[\"Msg\"]);\n          // this.storage.get('loginCount').then((res)=>{\n          //     console.log(\"plan login count before login page \"+res);\n          //     if (res == null || res == undefined || res == \"null\") {\n          //       this.storage.set('datasyncstatus','novice');\n          //       this.storage.set(\"loginCount\", 1).then(()=>{\n          //         this.gotoTabs(resLogin[\"Msg\"]);\n          //       });\n                \n          //     } else {\n          //       this.storage.set('datasyncstatus','mature');\n          //       this.storage.set(\"loginCount\", (res+1)).then((res)=>{\n          //         this.gotoTabs(resLogin[\"Msg\"]);\n          //       });\n          //     }\n          // }\n          // ).catch(e=>{\n          //   this.auth.dismissLoading();\n          //   this.auth.showToast(\"unable to fetch previous login please clear data/cache and login again\")\n          // })\n          if (this.isChecked) {\n            this.storage.set('isChecked',this.isChecked);\n          } else {\n            this.storage.set('isChecked',this.isChecked);\n          }\n        }\n      },\n      (err) => {\n        setTimeout(() => {\n          this.auth.dismissLoading();\n        }, 300);      \n        this.auth.alert(err.message,err.name);\n      }\n    );\n    });\n  }\n\n  gotoTabs(res:string){\n    // this.storage.set('datasyncstatus','novice');\n    this.storage.set(\"loginStatus\", \"true\");\n    this.auth.createEngineerInfoTable();\n    this.createAllTables()\n    .then((res) => {\n    this.auth.dismissLoading();\n    this.router.navigate([\"tabs\"]);\n    }).catch((e) => {\n    this.auth.dismissLoading();\n    this.auth.alert(\n    \"Something went wrong. Try later after clearing data/cache\" + e\n    );\n    });\n\n\n\n    let params = new HttpParams()\n      .set(\"enggid\",res)\n      this.auth.httpSend(\"Service_Engineerandcompanydetailsforpdfcreation\", params, \"post\").subscribe(res=>{\n        this.auth.database.executeSql('select * from EngInfo',[]).then(succ =>{\n          console.log(\"sign length\"+succ.rows.length);         \n         if (succ.rows.length > 0) {\n           this.auth.database.executeSql('update EngInfo set GasSafeNumber =?, EngCertName=?, GasSafeLicenseNumber=?, CompanyAddress=?, SubContractor=?, TypeName=?',\n            [res['GasSafeNumber'],res['EngCertName'],res['GasSafeLicenseNumber'],res['CompanyAddress'],res['SubContractor'],res['TypeName']]);\n         } else {          \n           this.auth.database.executeSql('insert into EngInfo (GasSafeNumber, EngCertName, GasSafeLicenseNumber, CompanyAddress, SubContractor, TypeName, Sign) values(?,?,?,?,?,?,?)', [res['GasSafeNumber'],res['EngCertName'],res['GasSafeLicenseNumber'],res['CompanyAddress'],res['SubContractor'],res['TypeName'],\" \"]);\n         }\n        })\n      })                            \n  }\n\n  createAllTables() {\n    return new Promise((resolve, reject) => {\n      this.auth.createJobTable().then(\n        (res) => {\n          this.auth\n            .createOnRouteTable()\n            .then((res) => {\n              this.auth\n                .createArrivedTable()\n                .then((res) => {\n                  this.auth\n                    .createJobsStatusTable()\n                    .then((res) => {\n                      this.auth\n                        .createAbandonTable()\n                        .then((res) => {\n                          this.auth\n                            .createAuthorizationTable()\n                            .then((res) => {\n                              this.auth\n                                .createCompleteClaimTable()\n                                .then((res) => {\n                                  this.auth\n                                    .createCompleteServiceTable()\n                                    .then((res) => {\n                                      this.auth\n                                        .newApplianceTable()\n                                        .then((res) => {\n                                          this.auth\n                                            .certificateTable()\n                                            .then((res) => {\n                                              this.auth\n                                                .boilerInstallTable()\n                                                .then((res) => {\n                                                  this.auth\n                                                    .boilerInstallPicsTable()\n                                                    .then((res) => {\n                                                      this.auth\n                                                        .boilerInstallSignTable()\n                                                        .then((res) => {\n                                                          this.auth\n                                                            .completedjobsTable()\n                                                            .then((res) => {\n                                                              this.auth\n                                                                .enggPicsTable()\n                                                                .then((res) => {\n                                                                  this.auth\n                                                                    .siteSurveyTable()\n                                                                    .then(\n                                                                      (res) => {\n                                                                        this.auth\n                                                                          .siteSurveyPics()\n                                                                          .then(\n                                                                            (\n                                                                              res\n                                                                            ) => {\n                                                                              this.auth\n                                                                                .siteSurveySign()\n                                                                                .then(\n                                                                                  (\n                                                                                    res\n                                                                                  ) => {\n                                                                                    this.auth.createmakemodel()\n                                                                                    .then(\n                                                                                      (\n                                                                                        res\n                                                                                      ) => {\n                                                                                        this.auth.createErrorLogTable().then(res =>{\n                                                                                          this.auth.createFirmwareUrl().then(res=>{\n                                                                                            resolve(\"All TABLES CREATED\");  \n                                                                                          }).catch(e=>{\n                                                                                            reject(JSON.stringify(e));\n                                                                                          });                                                                                                                                                                                \n                                                                                        }).catch(e=>{\n                                                                                          reject(JSON.stringify(e));\n                                                                                        });                                                                        \n                                                                                      })\n                                                                                      .catch(\n                                                                                        (\n                                                                                          e\n                                                                                        ) => {\n                                                                                          reject(\n                                                                                            JSON.stringify(\n                                                                                              e\n                                                                                            )\n                                                                                          );\n                                                                                        }\n                                                                                      );\n                                                                                   \n                                                                                  }\n                                                                                )\n                                                                                .catch(\n                                                                                  (\n                                                                                    e\n                                                                                  ) => {\n                                                                                    reject(\n                                                                                      JSON.stringify(\n                                                                                        e\n                                                                                      )\n                                                                                    );\n                                                                                  }\n                                                                                );\n                                                                            }\n                                                                          )\n                                                                          .catch(\n                                                                            (\n                                                                              e\n                                                                            ) => {\n                                                                              reject(\n                                                                                JSON.stringify(\n                                                                                  e\n                                                                                )\n                                                                              );\n                                                                            }\n                                                                          );\n                                                                      }\n                                                                    )\n                                                                    .catch(\n                                                                      (e) => {\n                                                                        reject(\n                                                                          JSON.stringify(\n                                                                            e\n                                                                          )\n                                                                        );\n                                                                      }\n                                                                    );\n                                                                })\n                                                                .catch((e) => {\n                                                                  reject(\n                                                                    JSON.stringify(\n                                                                      e\n                                                                    )\n                                                                  );\n                                                                });\n                                                            })\n                                                            .catch((e) => {\n                                                              reject(\n                                                                JSON.stringify(\n                                                                  e\n                                                                )\n                                                              );\n                                                            });\n                                                        })\n                                                        .catch((e) => {\n                                                          reject(\n                                                            JSON.stringify(e)\n                                                          );\n                                                        });\n                                                    })\n                                                    .catch((e) => {\n                                                      reject(JSON.stringify(e));\n                                                    });\n                                                })\n                                                .catch((e) => {\n                                                  reject(JSON.stringify(e));\n                                                });\n                                            })\n                                            .catch((e) => {\n                                              reject(JSON.stringify(e));\n                                            });\n                                        })\n                                        .catch((e) => {\n                                          reject(JSON.stringify(e));\n                                        });\n                                    })\n                                    .catch((e) => {\n                                      reject(JSON.stringify(e));\n                                    });\n                                })\n                                .catch((e) => {\n                                  reject(JSON.stringify(e));\n                                });\n                            })\n                            .catch((e) => {\n                              reject(JSON.stringify(e));\n                            });\n                        })\n                        .catch((e) => {\n                          reject(JSON.stringify(e));\n                        });\n                    })\n                    .catch((e) => {\n                      reject(JSON.stringify(e));\n                    });\n                })\n                .catch((e) => {\n                  reject(JSON.stringify(e));\n                });\n            })\n            .catch((e) => {\n              reject(JSON.stringify(e));\n            });\n        },\n        (err) => {\n          reject(JSON.stringify(err));\n        }\n      );\n    });\n  }\n}\n","export default \"<ion-button expand='block'>\\n  {{label}}\\n</ion-button>\";","export default \"<ion-button expand='block'>\\n  <ion-icon [name]='icon'></ion-icon> {{label}}\\n</ion-button>\";","export default \"<div class=\\\"form-field\\\">\\n  <label [ngClass]=\\\"focused ? 'label-focused' : ''\\\">Enter {{label}}</label>\\n  <input [type]=\\\"type\\\" (focus)=\\\"focused = true\\\" (blur)=\\\"onBlur($event)\\\" />\\n</div>\\n<span>&nbsp;</span> <span *ngIf ='error'> {{label}} cannot be empty</span>\\n\\n\";","export default \"<ion-content class=\\\"loginbg\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          <ion-card>\\n            <div class=\\\"image\\\">\\n              <img class=\\\"picture\\\" src=\\\"../../assets/images/logo.png\\\" />\\n            </div>\\n            <div class=\\\"header\\\">\\n              <h2>\\n                Welcome to <br />\\n                HomeResponse360\\n              </h2>\\n            </div>\\n  \\n            <ion-card-content>\\n              <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n                <div class=\\\"form-field\\\">\\n                  <label [ngClass]=\\\"focused ? 'label-focused' : ''\\\"\\n                    >Username</label\\n                  >\\n                  <input\\n                    name=\\\"username\\\"\\n                    [ngClass]=\\\"focused ? 'input-focused' : ''\\\"\\n                    type=\\\"text\\\"\\n                    (focus)=\\\"focused = true\\\"\\n                    (blur)=\\\"onBlur($event)\\\"\\n                    [(ngModel)]=\\\"username\\\"\\n                  />\\n                </div>\\n                <!-- <span>&nbsp;</span> <span *ngIf ='error'> Username cannot be empty</span> -->\\n  \\n                <div class=\\\"form-field\\\">\\n                  <label [ngClass]=\\\"focused2 ? 'label-focused' : ''\\\"\\n                    >Password</label\\n                  >\\n                  <input\\n                    name=\\\"password\\\"\\n                    [ngClass]=\\\"focused2 ? 'input-focused' : ''\\\"\\n                    type=\\\"password\\\"\\n                    (focus)=\\\"focused2 = true\\\"\\n                    (blur)=\\\"onBlur2($event)\\\"\\n                    [(ngModel)]=\\\"password\\\"\\n                  />\\n                </div>\\n                <div>\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-checkbox name=\\\"cb\\\" color=\\\"secondary\\\" slot=\\\"start\\\" [(ngModel)]=\\\"isChecked\\\" (click)=\\\"checkCheckbox()\\\"></ion-checkbox>\\n                    <ion-label>Remember me</ion-label>\\n                  </ion-item>\\n                </div>\\n  \\n                <div>\\n                  <ion-button type=\\\"submit\\\" color=\\\"secondary\\\" expand=\\\"block\\\">\\n                    Sign In\\n                  </ion-button>\\n                </div>\\n  \\n                <h5>\\n                  Don't Have an Account?<br /><label (click)=\\\"gotoRegister()\\\"\\n                    ><b>Register</b></label\\n                  >\\n                </h5>\\n              </form>\\n            </ion-card-content>\\n          </ion-card>\\n        </td>\\n      </tr>\\n    </table>\\n  </ion-content>\\n  \";"]}