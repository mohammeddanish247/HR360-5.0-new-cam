{"version":3,"mappings":"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","names":["routes","path","component","_engineersignature_page__WEBPACK_IMPORTED_MODULE_0__","EngineersignaturePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","EngineersignaturePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_engineersignature_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_engineersignature_page__WEBPACK_IMPORTED_MODULE_1__","EngineersignaturePage","storage","auth","elementRef","Set","angular_hashtable__WEBPACK_IMPORTED_MODULE_4__","canvas","nativeElement","querySelector","EngsignaturePad","signature_pad__WEBPACK_IMPORTED_MODULE_2__","database","executeSql","then","fromDataURL","res","rows","item","width","height","isEmpty","clear","sigImage","toDataURL","checkNetwork","a","connected","presentLoading","get","daa","httpParams","_angular_common_http__WEBPACK_IMPORTED_MODULE_6__","set","split","httpSend","subscribe","console","log","dismissLoading","showToast","error","e","updateEngInfo","_ionic_storage__WEBPACK_IMPORTED_MODULE_7__","_api_service__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/engineersignature/engineersignature-routing.module.ts","webpack:///src/app/engineersignature/engineersignature.module.ts","webpack:///src/app/engineersignature/engineersignature.page.ts","webpack:///src/app/engineersignature/engineersignature.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EngineersignaturePage } from './engineersignature.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EngineersignaturePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EngineersignaturePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EngineersignaturePageRoutingModule } from './engineersignature-routing.module';\n import { EngineersignaturePage } from './engineersignature.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EngineersignaturePageRoutingModule,\n     \n  ],\n   declarations: [EngineersignaturePage]\n})\nexport class EngineersignaturePageModule {}\n","import { Component, OnInit ,ViewChild, ElementRef} from '@angular/core';\nimport { from } from 'rxjs';\nimport SignaturePad from 'signature_pad';\nimport { ApiService } from '../api.service';\nimport {Storage} from '@ionic/storage';\nimport {HttpParams} from '@angular/common/http';\nimport { HashTable } from 'angular-hashtable';\n\n@Component({\n  selector: 'app-engineersignature',\n  templateUrl: './engineersignature.page.html',\n  styleUrls: ['./engineersignature.page.scss'],\n})\nexport class EngineersignaturePage implements OnInit {\n \n \n  \n  set = new Set();\n  prg = new Set();\n\n  has = new HashTable<String, String[]>();\n  key: string;\n \n  \n  \n  EngsignaturePad:SignaturePad;\n  sigImage: string;\n  constructor(private storage:Storage, private auth:ApiService,private elementRef: ElementRef ) { }\n\n  ngOnInit() {\n    const canvas: any = this.elementRef.nativeElement.querySelector('canvas');\n    this.EngsignaturePad = new SignaturePad(canvas);\n    this.auth.database.executeSql('select Sign from EngInfo', []).then(res=>{\n      this.EngsignaturePad.fromDataURL(res.rows.item(0)['Sign'],{\n        width: canvas.width,\n        height: canvas.height\n      });\n    });\n   }\n\n   isCanvasBlank(){\n    if (this.EngsignaturePad) {\n      return this.EngsignaturePad.isEmpty() ? true : false;\n    }\n   }\n\n   \n  clear(){\n    this.EngsignaturePad.clear();\n  }\n\n  async save(){\n    this.sigImage = this.EngsignaturePad.toDataURL();\n   \n    let a = await this.auth.checkNetwork();\n    if (a.connected) {\n      this.auth.presentLoading('Please wait while we Uploading your Signature');\n      this.storage.get('enggid').then((daa)=>{        \n        let  httpParams = new HttpParams().set('SigImage',this.sigImage.split(',')[1]).set('EngId',daa);\n        this.auth.httpSend('Service_EngSignatureUpload',httpParams,'post').subscribe((res)=>{\n            console.log('Signature Updated');\n            this.auth.dismissLoading();\n            this.auth.showToast('Success! Engineer Signature has been updated','success');            \n        },\n        (error)=>{\n          console.log('errror');\n          this.auth.dismissLoading();\n        });\n       }).catch((e)=>{this.auth.dismissLoading();});;\n    } else {\n      //this.auth.showToast(\"Internet not connected. There was a problem with your network connection.\",'danger');\n    }     \n\n    this.auth.updateEngInfo(\"Sign\",this.sigImage);\n   \n  }\n\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Engineer Signature</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div id=\\\"canvasID\\\">\\n    <canvas id=\\\"Engsigcanvas\\\" width=\\\"300\\\" height=\\\"182\\\"></canvas>\\n  </div>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-button color=\\\"medium\\\" expand=\\\"full\\\" [disabled]=\\\"isCanvasBlank()\\\" (click)=\\\"save()\\\"> Save</ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-button color=\\\"medium\\\" expand=\\\"full\\\" (click)=\\\"clear()\\\"> Clear</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n </ion-content>\\n\";"]}