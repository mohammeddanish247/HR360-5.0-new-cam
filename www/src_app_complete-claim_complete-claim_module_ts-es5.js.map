{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC;AAFb,OADqB,CAAvB;;UAWaC,+BAA8B;AAAA;AAAA;;AAA9BA,qCAA8B,uDAJ1C,yDAAS;AACRC,eAAO,EAAE,CAACC,mEAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAACD,yDAAD;AAFD,OAAT,CAI0C,GAA9BF,+BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,wBAAuB;AAAA;AAAA;;AAAvBA,8BAAuB,uDATnC,yDAAS;AACRH,eAAO,EAAE,CACPI,yDADO,EAEPC,uDAFO,EAGPC,uDAHO,EAIPC,0FAJO,CADD;AAORC,oBAAY,EAAE,CAACC,mEAAD;AAPN,OAAT,CASmC,GAAvBN,wBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCbb;;;UAOaO,kBAAiB;AAqB5B,mCAAoBC,MAApB,EAA2CC,KAA3C,EAA0EC,IAA1E,EAAyF;AAAA;;AAArE;AAAuB;AAA+B;AAlB1E,wBAAc,EAAd;AACA,wBAAY,EAAZ;AACA,wBAAY,EAAZ;AACA,wBAAY,EAAZ;AACA,4BAAoB,EAApB;AAEA,4BAAuB,IAAvB;AACA,4BAAuB,IAAvB;AACA,iCACS,8PADT;AAU8F;;AArBlE;AAAA;AAAA,iBAuB5B,oBAAQ;AAAA;;AAEN,iBAAKD,KAAL,CAAWE,WAAX,CAAuBC,SAAvB,CAAiC,gBAAM,EAAE;AACvC,kBAAG,KAAI,CAACJ,MAAL,CAAYK,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA7C,EAAmD;AACjD,qBAAI,CAACC,IAAL,GAAc,KAAI,CAACR,MAAL,CAAYK,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDC,IAA9D;;AACA,qBAAI,CAACN,IAAL,CAAUO,WAAV;;AAEAC,uBAAO,CAACC,GAAR,CAAY,sBAAoB,KAAI,CAACH,IAAL,CAAU,YAAV,CAApB,GAA4C,EAA5C,GAA+C,KAAI,CAACA,IAAL,CAAU,kBAAV,CAA3D;AAED;AACF,aARD;AASD;AAlC2B;AAAA;AAAA,iBAoC5B,0BAAiBI,KAAjB,EAAsB;AACpB,iBAAKC,cAAL,GAAsB,KAAtB;AACAH,mBAAO,CAACC,GAAR,CAAY,gBAAcC,KAAK,CAACE,MAAN,CAAaC,KAAvC;AACA,iBAAKC,UAAL,GAAkBJ,KAAK,CAACE,MAAN,CAAaC,KAA/B;;AACA,gBAAG,KAAKC,UAAL,IAAmB,QAAnB,IAA+B,KAAKA,UAAL,IAAmB,WAArD,EAAiE;AAC/D,mBAAKC,UAAL,GAAkB,KAAlB;AACA,mBAAKC,UAAL,GAAkB,KAAlB;AACD,aAHD,MAII;AACF,mBAAKD,UAAL,GAAkB,IAAlB;AACA,mBAAKC,UAAL,GAAkB,IAAlB;AACD;AACJ;AAhD6B;AAAA;AAAA,iBAmD9B,oBAAWC,GAAX,EAAgBC,MAAhB,EAAsB;AAAA;;AACpB,iBAAKC,SAAL,GAAiB,KAAjB;AACA,iBAAKC,aAAL,GAAqB;AACnBC,qBAAO,EAAE,EADU;AAEnBC,oBAAM,EAAEC,kEAFW;AAGnBC,oBAAM,EAAC,GAHY;AAInBC,mBAAK,EAAC,GAJa;AAKnBC,wBAAU,EAAGH;AALM,aAArB;AAOA,iBAAKI,cAAL,GAAsB;AACpBN,qBAAO,EAAE,EADW;AAEpBC,oBAAM,EAAEC,kEAFY;AAGpBC,oBAAM,EAAC,GAHa;AAIpBC,mBAAK,EAAC,GAJc;AAKpBC,wBAAU,EAAGH;AALO,aAAtB;;AAOA,oBAAQN,GAAR;AACE,mBAAK,CAAL;AACEM,+EAAgBL,MAAM,IAAI,KAAV,GAAkB,KAAKE,aAAvB,GAAuC,KAAKO,cAA5D,EAA4EC,IAA5E,CAAiF,UAACC,SAAD,EAAc;AAC7F,sBAAIC,WAAW,GAAG,4BAA4BD,SAAS,CAACE,YAAxD;AACA,wBAAI,CAACC,MAAL,GAAc,4BAA4BH,SAAS,CAACE,YAApD;AACA,wBAAI,CAACE,MAAL,GAAcJ,SAAS,CAACE,YAAxB;AACA,iBAJF,EAII,UAACG,GAAD,EAAQ;AACV,wBAAI,CAAClC,IAAL,CAAUmC,SAAV,CAAoBC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAApB;AACA,iBANF;;AAOA;;AACF,mBAAK,CAAL;AACEX,+EAAgBL,MAAM,IAAI,KAAV,GAAkB,KAAKE,aAAvB,GAAuC,KAAKO,cAA5D,EAA4EC,IAA5E,CAAiF,UAACC,SAAD,EAAc;AAC7F,sBAAIC,WAAW,GAAG,4BAA4BD,SAAS,CAACE,YAAxD;AACA,wBAAI,CAACO,MAAL,GAAc,4BAA4BT,SAAS,CAACE,YAApD;AACA,wBAAI,CAACE,MAAL,GAAcJ,SAAS,CAACE,YAAxB;AACA,iBAJF,EAII,UAACG,GAAD,EAAQ;AACV,wBAAI,CAAClC,IAAL,CAAUmC,SAAV,CAAoBC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAApB;AACA,iBANF;;AAOA;;AACF,mBAAK,CAAL;AACEX,+EAAgBL,MAAM,IAAI,KAAV,GAAkB,KAAKE,aAAvB,GAAuC,KAAKO,cAA5D,EAA4EC,IAA5E,CAAiF,UAACC,SAAD,EAAc;AAC7F,sBAAIC,WAAW,GAAG,4BAA4BD,SAAS,CAACE,YAAxD;AACA,wBAAI,CAACQ,MAAL,GAAc,4BAA4BV,SAAS,CAACE,YAApD;AACA,wBAAI,CAACE,MAAL,GAAcJ,SAAS,CAACE,YAAxB;AACA,iBAJF,EAII,UAACG,GAAD,EAAQ;AACV,wBAAI,CAAClC,IAAL,CAAUmC,SAAV,CAAoBC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAApB;AACA,iBANF;;AAOA;;AAEF;AACE;AA9BJ;AAkCD;AArG6B;AAAA;AAAA,iBAuG9B,wBAAexB,KAAf,EAAoB;AAClB,iBAAK8B,SAAL,GAAiB,KAAjB;AACD;AAzG6B;AAAA;AAAA,iBA2G9B,yBAAgB9B,KAAhB,EAAqB;AACnB,iBAAK+B,UAAL,GAAkB,KAAlB;AACD;AA7G6B;AAAA;AAAA,iBA+G9B,6BAAoB/B,KAApB,EAAyB;AACvB,iBAAKgC,cAAL,GAAsB,KAAtB;AACD;AAjH6B;AAAA;AAAA,iBAkH5B,kBAASC,CAAT,EAAiB;AAAA;;AAEjB;AACC;AAEA;AACC;AAEE,gBAAG,KAAK7B,UAAL,IAAiB,EAApB,EAAuB;AACrB,mBAAKH,cAAL,GAAqB,IAArB;AACA,mBAAKX,IAAL,CAAU4C,UAAV,CAAqB,YAArB,EAFqB,CAGrB;AACD,aAJD,MAIK;AACH,kBAAGD,CAAC,CAAC9B,KAAF,CAAQgC,KAAR,IAAe,EAAlB,EAAqB;AACnB,qBAAKL,SAAL,GAAiB,IAAjB;AACA,qBAAKxC,IAAL,CAAU4C,UAAV,CAAqB,gBAArB,EAFmB,CAGnB;AACD,eAJD,MAIK;AACH,oBAAGD,CAAC,CAAC9B,KAAF,CAAQiC,MAAR,IAAgB,EAAnB,EAAsB;AACpB,uBAAKL,UAAL,GAAkB,IAAlB;AACA,uBAAKzC,IAAL,CAAU4C,UAAV,CAAqB,gBAArB,EAFoB,CAGpB;AACD,iBAJD,MAIK;AACH,sBAAGD,CAAC,CAAC9B,KAAF,CAAQkC,UAAR,IAAoB,EAAvB,EAA0B;AACxB,yBAAKL,cAAL,GAAsB,IAAtB;AACA,yBAAK1C,IAAL,CAAU4C,UAAV,CAAqB,YAArB,EAFwB,CAGxB;AACD,mBAJD,MAIK;AACH,wBAAG,CAAC,KAAK9B,UAAL,IAAmB,QAAnB,IAA+B,KAAKA,UAAL,IAAmB,WAAnD,KAAoE,KAAKkB,MAAL,IAAa,EAApF,EAAwF;AACtF,2BAAKb,SAAL,GAAiB,IAAjB;AACA,2BAAKnB,IAAL,CAAU4C,UAAV,CAAqB,aAArB,EAFsF,CAGtF;AACD,qBAJD,MAKG;AACH,0BAAI,KAAKtC,IAAL,CAAU,kBAAV,KAA+B,SAAnC,EAA8C;AAC5C;AACA,6BAAKN,IAAL,CAAUgD,QAAV,CAAmBC,UAAnB,CAA8B,8MAA9B,EAA8O,CAAC,KAAKnC,UAAN,EAAiB6B,CAAC,CAAC9B,KAAF,CAAQkC,UAAzB,EAAoCJ,CAAC,CAAC9B,KAAF,CAAQgC,KAA5C,EAAmDF,CAAC,CAAC9B,KAAF,CAAQiC,MAA3D,EAAkE,KAAKb,MAAvE,EAA+E,KAAKjC,IAAL,CAAUkD,eAAV,EAA/E,EAA4G,KAAKlD,IAAL,CAAUmD,GAAtH,EAA2H,KAAKnD,IAAL,QAA3H,EAA2I,KAAKM,IAAL,CAAU,YAAV,CAA3I,EAAmK,KAAnK,EAAyK,KAAKA,IAAL,CAAU,kBAAV,CAAzK,EAAuM,KAAvM,EAA6M,KAA7M,EAAoN,KAAKA,IAAL,CAAU,SAAV,CAApN,CAA9O,EACCsB,IADD,CACM,UAACwB,GAAD,EAAQ;AACZ,gCAAI,CAACpD,IAAL,CAAUgD,QAAV,CAAmBC,UAAnB,CAA8B,mDAA9B,EAAkF,CAAE,WAAF,EAAe,MAAI,CAAC3C,IAAL,CAAU,SAAV,CAAf,CAAlF,EAAwHsB,IAAxH,CAA6H,UAACwB,GAAD,EAAO;AAClI5C,mCAAO,CAACC,GAAR,CAAY,6BAA2B2B,IAAI,CAACC,SAAL,CAAee,GAAf,CAAvC;;AACA,kCAAI,CAACpD,IAAL,CAAUmC,SAAV,CAAoB,mCAApB,EAAwD,SAAxD;;AACA,kCAAI,CAACrC,MAAL,CAAYuD,QAAZ,CAAqB,CAAC,SAAD,CAArB;AAED,2BALD,WAKS,UAACC,CAAD,EAAK,CAAI,CALlB;AAOD,yBATD,WASS,UAACA,CAAD,EAAM;AACb9C,iCAAO,CAACC,GAAR,CAAY,0BAA0B2B,IAAI,CAACC,SAAL,CAAeiB,CAAf,CAAtC;AACD,yBAXD;AAaD,uBAfD,MAeO;AACN;AACC9C,+BAAO,CAACC,GAAR,CAAY,wBAAwB,KAAKH,IAAL,CAAU,SAAV,CAAxB,GAA6C,GAA7C,GAAiD,KAAKA,IAAL,CAAU,YAAV,CAA7D;AACA,6BAAKN,IAAL,CAAUgD,QAAV,CAAmBC,UAAnB,CAA8B,4LAA9B,EAA4N,CAAC,KAAKnC,UAAN,EAAiB6B,CAAC,CAAC9B,KAAF,CAAQkC,UAAzB,EAAoCJ,CAAC,CAAC9B,KAAF,CAAQgC,KAA5C,EAAmDF,CAAC,CAAC9B,KAAF,CAAQiC,MAA3D,EAAkE,KAAKb,MAAvE,EAA+E,KAAKjC,IAAL,CAAUkD,eAAV,EAA/E,EAA4G,KAAKlD,IAAL,CAAUmD,GAAtH,EAA2H,KAAKnD,IAAL,QAA3H,EAA2I,KAAKM,IAAL,CAAU,YAAV,CAA3I,EAAmK,KAAnK,EAAyK,KAAKA,IAAL,CAAU,kBAAV,CAAzK,EAAuM,KAAvM,EAA8M,KAAKA,IAAL,CAAU,SAAV,CAA9M,CAA5N,EACGsB,IADH,CACQ,UAACwB,GAAD,EAAQ;AACZ,gCAAI,CAACpD,IAAL,CAAUgD,QAAV,CAAmBC,UAAnB,CAA8B,mDAA9B,EAAkF,CAAE,WAAF,EAAe,MAAI,CAAC3C,IAAL,CAAU,SAAV,CAAf,CAAlF,EAAwHsB,IAAxH,CAA6H,UAACwB,GAAD,EAAO;AAClI5C,mCAAO,CAACC,GAAR,CAAY,6BAA2B2B,IAAI,CAACC,SAAL,CAAee,GAAf,CAAvC;;AACA,kCAAI,CAACpD,IAAL,CAAUmC,SAAV,CAAoB,mCAApB,EAAwD,SAAxD;;AACA3B,mCAAO,CAACC,GAAR,CAAY,2BAA2B2B,IAAI,CAACC,SAAL,CAAee,GAAf,CAAvC;;AACA,kCAAI,CAACtD,MAAL,CAAYuD,QAAZ,CAAqB,CAAC,SAAD,CAArB;AAED,2BAND,WAMS,UAACC,CAAD,EAAK,CAAI,CANlB;AAQD,yBAVH,WAUW,UAACA,CAAD,EAAM;AACb9C,iCAAO,CAACC,GAAR,CAAY,0BAA0B2B,IAAI,CAACC,SAAL,CAAeiB,CAAf,CAAtC;AACD,yBAZH;AAcD;AAEF;AAEF;AAEF;AAEF;AACA,aA3EY,CA6Ef;;AAED;AAjM2B;;AAAA;AAAA;;;;gBATrBC;;gBAAQA;;gBAFRC;;;;AAWI3D,wBAAiB,uDAL7B,0DAAU;AACT4D,gBAAQ,EAAE,oBADD;AAETC,qLAFS;;AAAA,OAAV,CAK6B,GAAjB7D,kBAAiB,CAAjB;;;;;;;;;;;;;ACbb;;;AAAA8D,uCAAe,k+IAAf;;;;;;;;;;;;;;;","names":["routes","path","component","_complete_claim_page__WEBPACK_IMPORTED_MODULE_0__","CompleteClaimPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","CompleteClaimPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_complete_claim_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_complete_claim_page__WEBPACK_IMPORTED_MODULE_1__","CompleteClaimPage","router","route","auth","queryParams","subscribe","getCurrentNavigation","extras","state","data","getLocation","console","log","event","jobOutComeFlag","detail","value","jobOutCome","image2flag","image3flag","opt","option","imageflag","cameraOptions","quality","source","_capacitor_camera__WEBPACK_IMPORTED_MODULE_2__","height","width","resultType","galleryOptions","then","imageData","base64Image","base64String","image1","base64","err","showToast","JSON","stringify","image2","image3","partsFlag","labourFlag","additionalFlag","f","scrollToId","parts","labour","additional","database","executeSql","getdateformatV2","lat","res","navigate","e","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_api_service__WEBPACK_IMPORTED_MODULE_3__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/complete-claim/complete-claim-routing.module.ts","webpack:///src/app/complete-claim/complete-claim.module.ts","webpack:///src/app/complete-claim/complete-claim.page.ts","webpack:///src/app/complete-claim/complete-claim.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompleteClaimPage } from './complete-claim.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompleteClaimPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompleteClaimPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompleteClaimPageRoutingModule } from './complete-claim-routing.module';\n\nimport { CompleteClaimPage } from './complete-claim.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CompleteClaimPageRoutingModule\n  ],\n  declarations: [CompleteClaimPage]\n})\nexport class CompleteClaimPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, ImageOptions } from '@capacitor/camera';\nimport { ApiService } from '../api.service';\nimport { Form, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n///////////////////completed\n\n@Component({\n  selector: 'app-complete-claim',\n  templateUrl: './complete-claim.page.html',\n  styleUrls: ['./complete-claim.page.scss'],\n})\nexport class CompleteClaimPage implements OnInit {\n\n  options: ImageOptions;\n  base64:string='';\n  image1 :any='';\n  image2 :any='';\n  image3 :any='';\n  jobOutCome : string='';\n  data:any[];\n  image2flag : boolean = true ;\n  image3flag : boolean = true ;\n  additionalNotes : \n  string = \"Did you work on the appliance: Yes/No \\nVisual Inspection of appliance: Pass/Fail \\nBurner Pressure/Gas Rate: \\nSafety Device: Pass/Fail \\nInitial FGA: \\nFinal FGA: \\nFlue: Pass Fail \\nVentilation: Pass/Fail \\nDefects: \\nClassification: \\nAction Taken:\";\n  jobOutComeFlag: boolean;\n  partsFlag: boolean;\n  labourFlag: boolean;\n  additionalFlag: boolean;\n  imageflag: boolean;\n  cameraOptions: ImageOptions;\n  galleryOptions: ImageOptions;\n\n  constructor(private router:Router, private route:ActivatedRoute , private auth:ApiService) { }\n\n  ngOnInit() {\n    \n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data; \n        this.auth.getLocation();      \n\n        console.log('## # combo jobid '+this.data['CLAIMJOBID']+\"\"+this.data['BackgroundColour']);\n        \n      }\n    });\n  }\n\n  radiogroupChange(event){\n    this.jobOutComeFlag = false;\n    console.log(' rg change '+event.detail.value);\n    this.jobOutCome = event.detail.value;   \n    if(this.jobOutCome == 'AtRisk' || this.jobOutCome == 'CappedOff'){\n      this.image2flag = false;\n      this.image3flag = false;\n    }\n    else{\n      this.image2flag = true;\n      this.image3flag = true;\n    }\n}\n\n\nopenCamera(opt, option){\n  this.imageflag = false;\n  this.cameraOptions = {\n    quality: 20,\n    source :CameraSource.Camera,\n    height:360,\n    width:360,\n    resultType : CameraResultType.Base64\n  }\n  this.galleryOptions = {\n    quality: 20,\n    source :CameraSource.Photos,\n    height:360,\n    width:360,\n    resultType : CameraResultType.Base64\n  }\n  switch (opt) {\n    case 1:\n      Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n        let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.image1 = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.base64 = imageData.base64String;\n       }, (err) => {\n        this.auth.showToast(JSON.stringify(err));\n       }); \n      break;\n    case 2:\n      Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n        let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.image2 = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.base64 = imageData.base64String;\n       }, (err) => {\n        this.auth.showToast(JSON.stringify(err));\n       }); \n      break;\n    case 3:\n      Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n        let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.image3 = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.base64 = imageData.base64String;\n       }, (err) => {\n        this.auth.showToast(JSON.stringify(err));\n       }); \n      break;\n  \n    default:\n      break;\n  }\n  \n\n}\n\npartsIonChange(event){\n  this.partsFlag = false;\n}\n\nlabourIonChange(event){\n  this.labourFlag = false;\n}\n\nadditionalIonChange(event){\n  this.additionalFlag = false;\n}\n  complete(f:NgForm)\n  {\n  //  if(this.base64==null || this.base64 == ''){\n   //   this.auth.showToast('Image in mandatory');\n     \n   // }else\n    //{\n\n      if(this.jobOutCome==''){\n        this.jobOutComeFlag =true;\n        this.auth.scrollToId(\"joboutcome\");\n        //this.auth.showToast('Job Outcome in mandatory','danger');\n      }else{\n        if(f.value.parts==''){\n          this.partsFlag = true;\n          this.auth.scrollToId(\"partsandlabour\");\n          //this.auth.showToast('Parts in mandatory','danger');\n        }else{\n          if(f.value.labour==''){\n            this.labourFlag = true;\n            this.auth.scrollToId(\"partsandlabour\");\n            //this.auth.showToast('Labour in mandatory','danger');            \n          }else{\n            if(f.value.additional==''){\n              this.additionalFlag = true;\n              this.auth.scrollToId(\"additional\");\n              //this.auth.showToast('Additional notes in mandatory','danger');\n            }else{\n              if((this.jobOutCome == 'AtRisk' || this.jobOutCome == 'CappedOff') && (this.image1=='')){\n                this.imageflag = true;\n                this.auth.scrollToId(\"uploadImage\");\n                //this.auth.showToast('Images are  mandatory','danger');\n              }\n             else{\n              if (this.data['BackgroundColour']=='#20B2AA') {\n                //IN COMBO CLAIM\n                this.auth.database.executeSql('update completeclaim set OUTCOME=?,JOBNOTE=?,PARTS=?,LABOUR=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,ComboClaimJobId=?,IsClaimCompleted=?,BackgroundColour=?,HaveData=?,ComboIsCompleted=? where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,f.value.labour,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long, this.data['CLAIMJOBID'],'yes',this.data['BackgroundColour'],'yes','yes', this.data['JOBGUID']])\n                .then((res) => {\n                  this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                    console.log('#### jobsstatus success '+JSON.stringify(res));\n                    this.auth.showToast('Success! Claim has been Completed','success'); \n                    this.router.navigate(['details']);\n                \n                  }).catch((e)=>{  });\n                  \n                }).catch((e) => {\n                  console.log('### complete Failure ' + JSON.stringify(e));\n                });\n                \n              } else {\n               // IN NORMAL CLAIM\n                console.log('Else code..........' + this.data['JOBGUID']+' '+this.data['CLAIMJOBID']);\n                this.auth.database.executeSql('update  completeclaim set OUTCOME=?,JOBNOTE=?,PARTS=?,LABOUR=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,ComboClaimJobId=?,IsClaimCompleted=?,BackgroundColour=?,HaveData=? where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,f.value.labour,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long, this.data['CLAIMJOBID'],'yes',this.data['BackgroundColour'],'yes', this.data['JOBGUID']])\n                  .then((res) => {\n                    this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                      console.log('#### jobsstatus success '+JSON.stringify(res));\n                      this.auth.showToast('Success! Claim has been Completed','success'); \n                      console.log('#### complete success ' + JSON.stringify(res));\n                      this.router.navigate(['details']);\n                  \n                    }).catch((e)=>{  });\n                    \n                  }).catch((e) => {\n                    console.log('### complete Failure ' + JSON.stringify(e));\n                  });\n                \n              }\n\n            }\n  \n          }\n\n        }\n\n      }\n      }\n     \n    //}\n\n  }\n\n}","export default \"<ion-header>\\n  <ion-toolbar  color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Job Report Complete Claim</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #f='ngForm'  >\\n    <ion-card id=\\\"joboutcome\\\" class=\\\"ion-padding\\\">     \\n      <ion-radio-group  \\n      allow-empty-selection='false' \\n      (ionChange)='radiogroupChange($event)'>\\n\\n        <div class=\\\"ion-text-center\\\">\\n          <h5>Job Outcome</h5>\\n        </div>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>job completed succesfully</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"JobCompletedSuccessfully\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>At Risk</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"AtRisk\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>Capped Off(Not Safe)</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"CappedOff\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n      <ion-item></ion-item>\\n      <p *ngIf='jobOutComeFlag' class=\\\"alert\\\">Job outcomes cannot be empty</p>\\n    </ion-card>\\n\\n    <ion-card id=\\\"partsandlabour\\\" class=\\\"ion-padding\\\">\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Parts</ion-label>\\n        <ion-input type=\\\"text\\\" \\n        (ionChange)=\\\"partsIonChange($event)\\\"\\n        ngModel \\n        name='parts'\\n        required\\n        #partsCtrl='ngModel'></ion-input>\\n      </ion-item>\\n      <p *ngIf='(!partsCtrl.valid && partsCtrl.touched) || partsFlag' class=\\\"alert\\\"> Parts cannot be empty</p>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Labour</ion-label>\\n        <ion-input type=\\\"text\\\"  \\n        (ionChange)=\\\"labourIonChange($event)\\\"\\n        ngModel \\n        name='labour'\\n        required\\n        #labourCtrl='ngModel' ></ion-input>\\n      </ion-item>\\n      <p *ngIf='(!labourCtrl.valid && labourCtrl.touched) || labourFlag' class=\\\"alert\\\">Labour cannot be empty</p>\\n    </ion-card>\\n    \\n\\n    <ion-card id=\\\"additional\\\" class=\\\"ion-padding\\\">\\n      <ion-item>\\n        <ion-textarea rows=\\\"12\\\" cols=\\\"20\\\"\\n        [(ngModel)]='additionalNotes' \\n        (ionChange)=\\\"additionalIonChange($event)\\\"\\n         placeholder=\\\"Enter Additional Notes here...\\\"\\n         ngModel \\n         name='additional'\\n         required\\n         #additionalCtrl='ngModel'\\n         ></ion-textarea>\\n      </ion-item>\\n      <p *ngIf='(!additionalCtrl.valid && additionalCtrl.touched) || additionalFlag' class=\\\"alert\\\">Additional cannot be empty</p>\\n    </ion-card>\\n      \\n    <ion-card id=\\\"uploadImage\\\" class=\\\"ion-padding\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 1</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(1,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(1,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image1!= null\\\">\\n        <img [src]=\\\"image1\\\" />\\n      </span>\\n      <p *ngIf='imageflag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    \\n    <ion-card id=\\\"uploadImage2\\\" class=\\\"ion-padding\\\" [hidden]=\\\"image2flag\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 2</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(2,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(2,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image2!= null\\\">\\n        <img [src]=\\\"image2\\\" />\\n      </span>      \\n      <p *ngIf='image2flag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    <ion-card id=\\\"uploadImage3\\\" class=\\\"ion-padding\\\" [hidden]=\\\"image3flag\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 3</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(3,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(3,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image3!= null\\\">\\n        <img [src]=\\\"image3\\\" />\\n      </span>\\n      <p *ngIf='image3flag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n    \\n    </form>\\n</ion-content>\\n<!-- [disabled]='!f.valid' -->\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\"   (click)=\\\"complete(f)\\\">Submit</ion-button>\\n</ion-footer>\\n\\n\";"]}