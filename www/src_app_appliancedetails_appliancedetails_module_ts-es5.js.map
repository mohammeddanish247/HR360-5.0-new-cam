{"version":3,"mappings":"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","names":["routes","path","component","_appliancedetails_page__WEBPACK_IMPORTED_MODULE_0__","AppliancedetailsPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","AppliancedetailsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_appliancedetails_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_appliancedetails_page__WEBPACK_IMPORTED_MODULE_1__","AppliancedetailsPage","router","route","auth","datePipe","currentyear","getdateformatV2","split","parseInt","lastyear","queryParams","subscribe","getCurrentNavigation","extras","state","data","getLocation","database","executeSql","then","console","log","res","rows","item","inputDate","dd","MM","yyyy","HH","mm","ss","isoDate","Date","toISOString","Detailsworkcarriedout","appliancestestedNumber","safetycheckDate","e","undefined","showToast","date","formattedDate","transform","JSON","stringify","navigationExtras","navigate","dateString","pattern","test","_api_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/appliancedetails/appliancedetails-routing.module.ts","webpack:///src/app/appliancedetails/appliancedetails.module.ts","webpack:///src/app/appliancedetails/appliancedetails.page.ts","webpack:///src/app/appliancedetails/appliancedetails.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppliancedetailsPage } from './appliancedetails.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppliancedetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppliancedetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AppliancedetailsPageRoutingModule } from './appliancedetails-routing.module';\n\nimport { AppliancedetailsPage } from './appliancedetails.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AppliancedetailsPageRoutingModule\n  ],\n  declarations: [AppliancedetailsPage]\n})\nexport class AppliancedetailsPageModule {}\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-appliancedetails',\n  templateUrl: './appliancedetails.page.html',\n  styleUrls: ['./appliancedetails.page.scss'],\n})\nexport class AppliancedetailsPage implements OnInit {\n\n  data: any[];\n  Detailsworkcarriedout:string=' ';\n  appliancestestedNumber:string=' ';\n  safetycheckDate: string;\n  currentyear: any;\n  lastyear: any;\n  constructor(private router:Router, private route:ActivatedRoute, private auth:ApiService,\n    private datePipe : DatePipe) { }\n\n  ngOnInit() {\n    this.currentyear = this.auth.getdateformatV2();\n    this.currentyear = this.currentyear.split(\"/\")[2];\n    this.currentyear = parseInt(this.currentyear.split(\" \")[0]);\n    this.lastyear = this.currentyear+10;\n    \n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data;}\n        this.auth.getLocation();  \n      });\n\n      this.auth.database.executeSql('select * from certificate where JOBGUID=?',[this.data['JOBGUID']])\n      .then(res => {\n        console.log(\"@@\"+res.rows.item(0)['JOBGUID']+\",\"+res.rows.item(0)['DetailsWork']+\",\"+res.rows.item(0)['NoOfAppTested']+\",\"+res.rows.item(0)['NextDueDt']);\n        const inputDate = res.rows.item(0)['NextDueDt'];\n        const [dd, MM, yyyy, HH, mm, ss] = inputDate.split(/[\\s/:]+/); // split the date string into components\n        const isoDate = new Date(`${yyyy}-${MM}-${dd}T${HH}:${mm}:${ss}`).toISOString(); //converting to ISO date formate\n        this.Detailsworkcarriedout = res.rows.item(0)['DetailsWork'];\n        this.appliancestestedNumber = res.rows.item(0)['NoOfAppTested'];\n        this.safetycheckDate = isoDate;\n      }).catch(e=>{console.log(\"error getting saved certicate appliance Details :\"+e);\n    })\n  }\n  saveNext(){\n      if(this.Detailsworkcarriedout==' ' || this.Detailsworkcarriedout== undefined){\n        this.auth.showToast('Details of work carried out cannot be empty','danger');\n\n      }else{\n\n      if(this.appliancestestedNumber==' ' || this.appliancestestedNumber == undefined){\n\n        this.auth.showToast('Number of appliances tested cannot be empty','danger');\n\n      }else{\n\n        if( parseInt(this.appliancestestedNumber)>4){\n\n        this.auth.showToast('Number of tested devices cannot be more than 4','danger');\n\n        }else{\n\n          if(this.safetycheckDate==null){\n            this.auth.showToast('Safety check date can not be empty.','danger');\n\n          }else{\n            console.log(\"before \" +this.safetycheckDate);\n            let date = new Date(this.safetycheckDate);\n            let formattedDate= this.datePipe.transform(date, 'dd/MM/yyyy HH:mm:ss');\n            console.log(\"after \" +this.safetycheckDate);\n            // this.auth.showToast(a);\n            this.auth.database.executeSql('update certificate set DetailsWork=?, NoOfAppTested=?, NextDueDt=? where JOBGUID=?',[this.Detailsworkcarriedout,this.appliancestestedNumber, formattedDate,this.data['JOBGUID']])\n           .then((res)=>{\n            this.data['DetailsWork']=this.Detailsworkcarriedout;\n            this.data['NoOfAppTested']=this.appliancestestedNumber;\n            this.data['NextDueDt']=this.safetycheckDate;\n            \n            console.log(JSON.stringify(res));\n            const navigationExtras: NavigationExtras = {\n              state: {\n              data: this.data,\n                    }\n             };\n              this.router.navigate(['outcomes'], navigationExtras);\n            }).catch((e)=>{\n              this.auth.showToast('Error Saving Data '+e,'danger');    \n            });\n          }\n         \n        }\n        \n        }\n      }\n  }\n\n  isDateFormatValid(dateString: string): boolean {\n    const pattern = /^(\\d{2})\\/(\\d{2})\\/(\\d{4}) (\\d{2}):(\\d{2}):(\\d{2})$/;\n    return pattern.test(dateString);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Appliances</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Details of work carried out</ion-label>\\n    <ion-textarea rows=\\\"6\\\" cols=\\\"20\\\" [(ngModel)]=\\\"Detailsworkcarriedout\\\" placeholder=\\\"Write details here...\\\" ></ion-textarea>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Number of appliances tested</ion-label>\\n    <ion-input type=\\\"number\\\" inputmode=\\\"numeric\\\" [(ngModel)]=\\\"appliancestestedNumber\\\"\\n     required placeholder=\\\"appliances tested No.\\\"></ion-input>\\n  </ion-item>\\n    \\n  \\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Next safety check due by</ion-label>\\n    <ion-datetime display-format=\\\"DD/MM/YYYY\\\" picker-format=\\\"DD MM YYYY\\\" [min]=\\\"currentyear\\\" [max]=\\\"lastyear\\\"  [(ngModel)]=\\\"safetycheckDate\\\" #safetycheck=\\\"ngModel\\\" required placeholder=\\\"Tap here to enter Date\\\"></ion-datetime>\\n  </ion-item>\\n\\n  <div *ngIf=\\\"safetycheck.invalid && (safetycheck.dirty || safetycheck.touched)\\\" class=\\\"validator-error\\\">\\n    <div *ngIf=\\\"safetycheck.errors.required\\\">\\n      Please select a valid date.\\n    </div>\\n  </div>\\n</ion-card>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\"  color=\\\"secondary\\\" (click)=\\\"saveNext()\\\">Save & Next</ion-button>\\n</ion-footer>\\n\";"]}