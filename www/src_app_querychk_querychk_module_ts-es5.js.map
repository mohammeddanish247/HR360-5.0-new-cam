{"version":3,"mappings":"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","names":["routes","path","component","_querychk_page__WEBPACK_IMPORTED_MODULE_0__","QuerychkPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","QuerychkPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_querychk_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_querychk_page__WEBPACK_IMPORTED_MODULE_1__","QuerychkPage","auth","router","route","queryParams","subscribe","getCurrentNavigation","extras","state","data","console","log","database","executeSql","then","completeServiceRes","JSON","stringify","rows","length","i","item","e","res","Promise","resolve","reject","_api_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/querychk/querychk-routing.module.ts","webpack:///src/app/querychk/querychk.module.ts","webpack:///src/app/querychk/querychk.page.ts","webpack:///src/app/querychk/querychk.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuerychkPage } from './querychk.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuerychkPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuerychkPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuerychkPageRoutingModule } from './querychk-routing.module';\n\nimport { QuerychkPage } from './querychk.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuerychkPageRoutingModule\n  ],\n  declarations: [QuerychkPage]\n})\nexport class QuerychkPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-querychk',\n  templateUrl: './querychk.page.html',\n  styleUrls: ['./querychk.page.scss'],\n})\nexport class QuerychkPage implements OnInit {\n  data=[];\n\n  constructor(private auth:ApiService,private router:Router ,    private route: ActivatedRoute ,) { }\n\n  ngOnInit() {\n\n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.data = this.router.getCurrentNavigation().extras.state.data;\n        console.log('#devdx JOBGUID: ', this.data['JOBGUID']);\n         \n    }\n  });\n  }\n\n  show(){//this.data[\"JOBGUID\"]\n    this.auth.database.executeSql('select * from completeservice where JOBGUID=? ',[this.data[\"JOBGUID\"]]).then((completeServiceRes)=>{\n      console.log(\"#devdx success gett \"+JSON.stringify(completeServiceRes.rows.length));\n\n      for(let i=0; i< completeServiceRes.rows.length; i++){\n        console.log(\"#devdx success gett \"+JSON.stringify(completeServiceRes.rows.item(i)));\n      }\n\n    }).catch((e)=>{\n      console.log(\"#devdx error gett \"+JSON.stringify(e));\n      \n    });\n  }\n\n  //    where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long,this.data['CLAIMJOBID'], 'yes',this.data['BackgroundColour'], this.data['JOBGUID']])\n\n  store(){\n    this.auth.database.executeSql('update  completeservice set OUTCOME=?,JOBNOTE=?,PARTS=?, FILEBASE=?,OnDt=?, Latitude=?,Longitude=?,ComboClaimJobId=?, CantCompleteReason=?, IsServiceCompleted=?, BackgroundColour=? where JOBGUID=?', [\"jboutcome\",\"additional\",\"parts\",\"file\", \"date\", \"lat\", \"long\", \"claimguid\", \"canntcpltresn\",\"isservicecompltd\",\"bgclr\" , this.data[\"JOBGUID\"]])\n    .then((res) => {\n     \n      console.log(\"#devdx stored \"+JSON.stringify(res));\n      \n    }).catch((e)=>{\n      \n      console.log(\"#devdx stored error \"+JSON.stringify(e));\n    });\n    \n\n    \n\n\n    // this.auth.database.executeSql(\"update arrived set Lattitude=?,Longitude=?,OnRouteDT=? where JOBGUID=?\",[\"latti\",\"longitude\",\"OnRouteDT\",this.data['JOBGUID']]).then(\n    //   (res)=>{\n    //     this.auth.dismissLoading();\n    //       console.log('### arrived '+JSON.stringify(res));         \n    //   }\n    // ).catch((e)=>{console.log('error'+JSON.stringify(e));\n    // });\n\n  }\n\n\n  insert(){\n\n    this.auth.database.executeSql(\"insert into  completeservice (JOBGUID) values(?)\",[\"sabir\"])\n    .then((res)=>{console.log('# complete Service Table inserted ');        \n     }).catch((e)=>{console.log('# complete  Service Table inseet ERROR '+JSON.stringify(e));});\n\n  }\n\n  \n  public createCompleteServiceTable(){\n    return new Promise((resolve, reject)=>{\n    this.auth.database.executeSql(\"create table IF NOT EXISTS completeservice (JOBGUID  VARCHAR(32)  , OUTCOME VARCHAR(32), PARTS VARCHAR(32), LABOUR VARCHAR(32), JOBNOTE VARCHAR(32), FILEBASE VARCHAR(32), FILENAME VARCHAR(32), OnDt VARCHAR(32), Latitude VARCHAR(32), Longitude VARCHAR(32), ComboClaimJobId VARCHAR(32), ComboIsCompleted VARCHAR(32), CantCompleteReason VARCHAR(32),  IsServiceCompleted VARCHAR(32), BackgroundColour VARCHAR(32))\",[])\n    .then((res)=>{console.log('# complete Service Table created ');         resolve('complete Service table created success');\n     }).catch((e)=>{console.log('# complete  Service Table Create ERROR '+JSON.stringify(e));});\n    });\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>querychk</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-button (click)=\\\"store()\\\">Store</ion-button>\\n  <ion-button (click)=\\\"show()\\\">Show</ion-button>\\n  <ion-button (click)=\\\"insert()\\\">Insert</ion-button>\\n  <ion-button (click)=\\\"createCompleteServiceTable()\\\">create</ion-button>\\n\\n</ion-content>\\n\";"]}