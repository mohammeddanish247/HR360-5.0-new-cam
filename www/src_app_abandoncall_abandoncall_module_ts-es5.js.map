{"version":3,"mappings":"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","names":["routes","path","component","_abandoncall_page__WEBPACK_IMPORTED_MODULE_0__","AbandoncallPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","AbandoncallPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_abandoncall_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_abandoncall_page__WEBPACK_IMPORTED_MODULE_1__","AbandoncallPage","router","route","auth","queryParams","subscribe","getCurrentNavigation","extras","state","data","getLocation","database","executeSql","then","res","jobOutCome","rows","item","additionalNotes","base64","event","detail","value","jobOutComeFlag","additionalNotesFlage","option","imageFlage","cameraOptions","quality","source","_capacitor_camera__WEBPACK_IMPORTED_MODULE_3__","height","width","resultType","allowEditing","galleryOption","imageData","base64Image","base64String","updatePicture","replace","err","showToast","JSON","stringify","form","date","String","getdateformatV2","split","scrollToId","trim","haveData","lat","navigate","e","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_api_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/abandoncall/abandoncall-routing.module.ts","webpack:///src/app/abandoncall/abandoncall.module.ts","webpack:///src/app/abandoncall/abandoncall.page.ts","webpack:///src/app/abandoncall/abandoncall.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AbandoncallPage } from './abandoncall.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AbandoncallPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AbandoncallPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { AbandoncallPageRoutingModule } from './abandoncall-routing.module';\n\nimport { AbandoncallPage } from './abandoncall.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AbandoncallPageRoutingModule\n  ],\n  declarations: [AbandoncallPage]\n})\nexport class AbandoncallPageModule {}\n","import { Component, OnInit } from '@angular/core';\n// import { Camera, CameraOptions } from '@awesome-cordova-plugins/camera/ngx';\nimport { ApiService } from '../api.service';\nimport { Form, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Camera, CameraResultType, CameraSource, ImageOptions } from '@capacitor/camera'\n\n\n///// abandoned\n\n @Component({\n  selector: 'app-abandoncall',\n  templateUrl: './abandoncall.page.html',\n  styleUrls: ['./abandoncall.page.scss'],\n})\nexport class AbandoncallPage implements OnInit {\n\n  cameraOptions: ImageOptions;\n  galleryOption : ImageOptions\n  base64:string='';\n  updatePicture :any='';\n  jobOutCome : string='';\n  data:any[];\n  additionalNotes:any='';\n   jobOutComeFlag: boolean ;\n   imageFlage: boolean ;\n   additionalNotesFlage: boolean ;\n\n  constructor( private router:Router, private route:ActivatedRoute ,private auth:ApiService) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data;  \n        this.auth.getLocation(); \n        // this.getdata();  \n      }\n    });\n   }\n   getdata() {\n    this.auth.database.executeSql('select * from abandon where JOBGUID=?',[this.data['JOBGUID']])\n    .then((res)=>{\n        this.jobOutCome = res.rows.item(0)['OUTCOME'];\n        this.additionalNotes = res.rows.item(0)['JOBNOTE'];\n        this.base64 = res.rows.item(0)['FILEBASE'];\n   });\n  }\n  radiogroupChange(event){\n      this.jobOutCome = event.detail.value;\n      this.jobOutComeFlag = false;\n  }\n\n  textarea(event){\n    this.additionalNotes = event.detail.value;\n    this.additionalNotesFlage = false;\n  }\n\n  openCamera(option : string){\n    this.imageFlage = false;\n    this.cameraOptions = {\n      quality: 20,\n      source :CameraSource.Camera,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64,\n      allowEditing : false\n    }\n    this.galleryOption = {\n      quality: 20,\n      source :CameraSource.Photos,\n      height:360,\n      width:360,\n      resultType : CameraResultType.Base64,\n      allowEditing : false\n    }\n    Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOption).then((imageData) => {\n      let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n      this.updatePicture = 'data:image/jpeg;base64,' + imageData.base64String;\n      this.base64 =   imageData.base64String.replace(/\\s+/g, \"+\");\n      \n      // let base64Image = imageData.base64String;\n      // this.updatePicture = imageData.base64String;\n      // this.base64 =   imageData.base64String;\n     }, (err) => {\n      this.auth.showToast(JSON.stringify(err));\n     }); \n  }\n\n  submitAbandon(form:NgForm){\n    let date = String(this.auth.getdateformatV2()).split(' ')[0];\n    if (this.jobOutCome == '') {\n        this.auth.scrollToId(\"joboutcome\");\n        this.jobOutComeFlag = true;\n    } else {\n      if (String(form.value.additionalNotes).trim() == '') {\n        this.additionalNotesFlage = true;\n        this.auth.scrollToId(\"textarea\");\n      } else {\n          if(this.base64==''){\n            this.imageFlage = true;\n            this.auth.scrollToId(\"uploadImage\")\n          }else{   \n            let haveData = \"yes\";\n            this.auth.database.executeSql('update abandon set  OUTCOME=?,JOBNOTE=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,HaveData=? where JOBGUID=? ',[this.jobOutCome,this.additionalNotes,this.base64,date,this.auth.lat,this.auth.long,haveData, this.data['JOBGUID']])\n            .then((res)=>{\n              this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                this.router.navigate(['details']);\n                this.auth.showToast(\"Success! Your Job has been abandoned.\",'success');\n              }).catch((e)=>{  });\n            }).catch((e)=>{\n              this.auth.showToast('### Abandon Failure '+JSON.stringify(e),'danger');\n            });\n          }\n      }\n    }   \n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Job Report</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #f='ngForm'  >\\n  <ion-card id=\\\"joboutcome\\\" class=\\\"ion-padding\\\">\\n      <ion-radio-group allow-empty-selection='true' (ionChange)='radiogroupChange($event)'>\\n        \\n          <div class=\\\"ion-text-center\\\">\\n            <h5>Job Outcome</h5> \\n          </div>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>Nobody At Home</ion-label>\\n          <ion-radio value=\\\"Nobody at Home\\\" ></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>No Adult At Home</ion-label>\\n          <ion-radio value=\\\"No Adult at Home\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>No Access to boiler</ion-label>\\n          <ion-radio value=\\\"No Access to boiler\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>No Parking</ion-label>\\n          <ion-radio value=\\\"No Parking\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label lines=\\\"none\\\">Boiler Not Working,<br> Cannot Complete This Job.</ion-label>\\n          <ion-radio value=\\\"Boiler Not Working Cannot Complete Service\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n      <ion-item></ion-item>\\n      <p *ngIf='jobOutComeFlag' class=\\\"alert\\\">Job outcomes cannot be empty</p>\\n  </ion-card>\\n\\n  <ion-card id=\\\"textarea\\\" class=\\\"ion-padding\\\">\\n    <ion-item>\\n      <ion-textarea rows=\\\"5\\\" cols=\\\"20\\\"  \\n      placeholder=\\\"Enter Additional Notes here...\\\"\\n      ngModel \\n      name='additionalNotes'\\n      required\\n      #additionalNotesCtrl='ngModel'\\n      (ionChange)='textarea($event)'\\n      >\\n      </ion-textarea>\\n    </ion-item>\\n    <p *ngIf='(!additionalNotesCtrl.valid && additionalNotesCtrl.touched) || additionalNotesFlage' class=\\\"alert\\\">Additional notes cannot be empty</p>\\n\\n  </ion-card>\\n\\n  <ion-card id=\\\"uploadImage\\\" class=\\\"ion-padding\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <p><b>Upload Image</b></p>\\n      <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera('cam')\\\"></ion-icon>\\n      <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera('gall')\\\"></ion-icon>\\n    </ion-item>\\n    <span *ngIf=\\\"updatePicture!= null\\\">\\n      <img [src]=\\\"updatePicture\\\" />\\n    </span>\\n    <p *ngIf='imageFlage' class=\\\"alert\\\">Image cannot be empty</p>\\n  </ion-card>\\n  \\n\\n</form>\\n  \\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\" (click)='submitAbandon(f)' >Submit</ion-button>\\n</ion-footer>\\n\\n\";"]}