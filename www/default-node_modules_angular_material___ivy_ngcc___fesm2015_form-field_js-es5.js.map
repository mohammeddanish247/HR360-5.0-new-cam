{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAIA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;;AACAA;AACAC;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACAA;AACA,SAFA,MAGA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;UACAC;AACA;AACA;AACA;AACA;AACAC,iBAJA,EAIA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACAC;AAA2CC,uCAA3C;AAA2CC;AAA3C;AACA,aAJA,MAKA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA,aANA,CAOA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,+EAAsEC,+BAAtE;;AACA,4BAAwBC,4BAAxB,EAAsDA,GAAtD,EAAsD;AACtD;;AACAC;AACA;;AACA;AACA;AACA;;AACAL;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACAC;;AACA;;AACAK;AACAN;AAAuCC,4CAAvC;AAAuCC;AAAvC;AACA;AACA;;;;iBACA;AACA;AACAK,qCAA4BC,0BAA5B,cAAyDC,QAAzD;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACAH;AACA;;AACAN;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA,+FAHA,CAIA;AACA;AACA;AACA;;;AACA;AACAU;AACA;;AACAJ;AACAA;AACAA,qEAbA,CAcA;AACA;AACA;AACA;;AACAA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACAA;AACAA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,wFACAK,MADA,CACA;AAAA;AAAA,aADA;AAEAJ;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,iEADA,CAEA;AACA;;AACAK;AACAL;AACAM;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACAA;AACAC;AACAP;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,kEAAyDQ,OAAzD,EAAiEC,IAAjE;AACA,+DAXA,CAYA;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;;;;AAEAlB;AAAyD,yCAAgCmB,uDAAgBC,qDAAhB,CAAhC,EAA2DD,uDAAgBE,2DAAhB,CAA3D;AAA0F,OAAnJ;;AACArB,6BAAsB,sEAAkB;AAAGsB;AAA4C,oCAAyB,4DAASF,qDAAT,CAAzB,EAA6C,4DAASC,2DAAT,CAA7C;AAAmE,SAAlH;AAAkHE,6BAAlH;AAAkHC;AAAlH,OAAlB,CAAtB;;AACAxB;AAAA,gBACA;AAAMyB,yBAAN;AAAMC;AAAgCD,kBAAMN,iDAAtC;AAA4CQ,mBAASP,qDAAT;AAA5C;AAAN,SADA,EAEA;AAAMK,gBAAMJ;AAAZ,SAFA;AAAA;;AAIA;AAAe,2DAAmDF,gEAAwBnB,cAAxB,EAAwB;AAC1FyB,gBAAcN,qDAD4E;AAE1FQ;AAAiBH;AAAjB;AAF0F,UAAxB,EAG7D;AAAiB;AAAUC,2BAAV;AAAUC;AAChCD,oBAAsBN,iDADU;AAEhCQ,qBAAuBP,qDAAvB;AAFgC;AAAV,aAGN;AAAIK,kBAAMJ;AAAV,WAHM;AAGyB,SANmB,EAMnB,IANmB,CAAnD;AAM0C,OANzD;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACAO;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA,sCAAoCC,yCAApC;AACA,wCAAsCC,oDAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA,YAdA,CAeA;;;AACA;AACA;AACA;AACA;AACA;;AACA,4BAA0BD,yCAA1B;AACA;;AACA,4BAA0BA,yCAA1B,GAvBA,CAwBA;AACA;AACA;;AACA,gCAA8BV,oDAA9B,EAAuC;AACvCY;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACa,aARb;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AAAA;;AACA,yFACA;AAAA;AAAA,cADA,EACA;AACA;AACA;;AACA,sDALA,CAMA;AACA;AACA;;;AACA,qEAAiE,qDAAG;AAAA;AAAA,aAAH,CAAjE,EAAmH,8DAAYC,gBAAZ,CAAnH,EAAmJ,wDAAM;AAAA;AAAA,aAAN,CAAnJ,EAAkM,qDAAG;AAAA;AAAA,aAAH,CAAlM,EAAqMC,SAArM,CAAqM;AACrM,kDADqM,CAErM;AACA;;;AACA,8BAA4B3B,oBAA5B,EAAkDA,GAAlD,EAAkD;AAClD;AACA;;AACA,sDACA4B,+DADA,EACA;AACA;;AACA;AACA;AACA;;AACA;AACS,aAdT;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA;AACS,aAFT;;AAGA;AACA,mBAAiBC,sDAAjB;AACA;AACA;;AACA,mBAAiBA,6DAAjB;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;;AACA,mBAAiBA,2DAAjB;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;;AACA,mBAAiBA,8DAAjB;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;;AACA,mBAAiBA,6DAAjB;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;;AACA,mBAAiBA,uDAAjB;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;;AACA,mBAAiBA,sDAAjB;AACA;AACA;AACA;AACA,iBAHA,MAIA;AACA;AACA;;AACA;AACA,yCAAyC,uEAAcC,KAAd,EAAc,UAAd,CAAzC,EAAuD;AACvD;AACA;AACA;AACA;AACA,mBAFA,MAGA,eAAyCD,oDAAzC,IAA0CE,WAAeF,oDAAzD,IAA0DE,WAAiBF,uDAAjB,IAAqBE,WAAeF,uDAA9F,EAAkG;AAClG;AACA;AACA,iBAVA,CAWA;AACA;;;AACA;AAjEA;;AAmEA;AACAC;AACA;AACA;;;;eACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA,iFACA,8BADA;AAEA;;;iBACA;AACA;;AACA;AACA,8CAHA,CAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA,4BAAwB9B,iBAAxB,EAA2CA,GAA3C,EAA2C;AAC3C;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;;AACA;AACAgC;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;;iBACA;AACA,0CAAsCnB,oDAAtC,GAA+C,qBAA/C,GAA+C,WAA/C;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAoB;;;;;;;;;;;;;iBACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;;QATAX;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAY;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AACA;;;iBACA;AACA;;AACA;AACA;AACA;AACA;;;;QAlBAZ;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACAa,+CACA;AAAA;;AACA;AACA;AACA;AACA;AACA,UAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACAC;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA,eAJA,CAKA;;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,aA1BA,CA2BA;;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,eALA,CAMA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAPA,CAQA;AACA;;;AACA;AACA;AACA,eAZA,CAaA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,oFACA,oGADA;AAEA;;;;;;AAEAA;AAAuE,gDAAuCvB,uDAAgBE,2DAAhB,CAAvC;AAAsE,OAA7I;;AACAqB,oCAA6B,sEAAkB;AAAGpB;AAAmD,2CAAgC,4DAASD,2DAAT,CAAhC;AAAsD,SAA5G;AAA4GE,oCAA5G;AAA4GC;AAA5G,OAAlB,CAA7B;;AACAkB;AAAA,gBACA;AAAMjB,gBAAMJ;AAAZ,SADA;AAAA;;AAGA;AAAe,2DAAmDF,gEAAwBuB,qBAAxB,EAAwB;AAC1FjB,gBAAcN,qDAD4E;AAE1FQ;AAAiBH;AAAjB;AAF0F,UAAxB,EAG7D;AAAiB;AAAUC,kBAAMJ;AAAhB;AAAqC,SAHO,EAGP,IAHO,CAAnD;AAGsD,OAHrE;AAIA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,SAFA,CAGA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,iEACA,+EADA;AAEA;AACA;;;AACA;AACA;AACA,uCACAsB,qBADA,IAEAA,qBAFA,IAGAA,uBAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AACA,wDAJA,CAKA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,SAHA,CAIA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,uCACAC,wBADA,IAEAD,qBAFA,IAGAA,uBAHA;AAIA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA,+CACAE,yBADA,IAEApC,uCAFA,IAGAqC,yBAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAC;AACA;AAAA;;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA,oCALA,CAMA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AAAoB;AAAA;eACpB;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACAC;;AACA;AACAA;AACA;AACA;;AACA;AACAC;;AACA;AACAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACS,aATT;;AAUA;AACA;;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AAAA;AAAA;AACS,aAFT;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AAAA;AAAA;AACS,aAFT;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AAAA;AAAA;AACS,aAFT;AAGA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,qFAA0EC,KAA1E,oCAC8BA,KAD9B,gCAE0BA,KAF1B;;AAGA,4BAAwB5C,kBAAxB,EAA4CA,GAA5C,EAA4C;AAC5C;AACA,8DAAqD4C,KAArD,IAA2D;AAC3DC,oFAA6ED,KAA7E,wCAC0CA,KAD1C,yEAEAE,UAFA;AAGA,eAJA,MAKA,uDAAiEF,KAAjE,IAAuE;AACvEC,2FAAoFD,KAApF,wCAC0CA,KAD1C,yEAEAE,UAFA;AAGA;AACA;;AACA;AACA;AACA;;AACA,oCACAA,2BADA,GACA,2CADA;AAEA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AAEA;AACA;AACA;AACAD,kLAEAE,iBAFA;AAGA,eANA,CAOA;AACA;;;AACA,qEACA,6CADA,EACA;AACAF;AACA;;AACAE;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;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C,gBAAMN,gDAA1B;AAA+BQ;AAA/B;AAFA;;AAIA;AAAe,2DAAmDR,gEAAwBuC,aAAxB,EAAwB;AAC1FjC,gBAAcN,oDAD4E;AAE1FQ;AACAuC,sCADA;AAEAF;AAFA;AAF0F,UAAxB,EAM7D;AAAiB;AAAUvC,kBAAMN;AAAhB,aAAmC;AAAIM;AAAJ,WAAnC,EAA+D;AAAIA,2BAAJ;AAAIC;AACzFD,oBAAsBN,iDADmE;AAEzFQ,qBAAuBP,qDAAvB;AAFyF;AAAJ,WAA/D;AAGF,SAT8C,EAS9C;AAAI0C;AACxBrC,kBAAkBN,gDADM;AAExBQ;AAFwB,YAAJ;AAGXoC;AACTtC,kBAAkBN,gDADT;AAETQ;AAFS;AAHW,SAT8C,CAAnD;AAeC,OAfhB;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAwC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;;AACA;;AAJA;AAKA;AACA;;;;;eACA;AAAoB;AAAA;eACpB;AACA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;;;;QAhCApB;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AACA;AACA;;AACA;;AACA;AACAqB;AACA;;AACA,2CACAA,sBADA,GACAC,+BADA;AAEA;AACA;;;AACA;AACA;;AACA;AACAD;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA,iCACA3D,yBADA,GAEAA,sCAFA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACA6D;AACA;AAAA;;AACA;AACA;AACA;AACA;;;;;iBACA;AAAA;;AACA;AACA;AACAC;AACA;;AACA;AAAA;AAAA;;AACAA;AACAA;AACS,aAFT;AAGA;AACA;;;;iBACA;AACA;AACA;AACA;;AACAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,mDAFA,CAGA;AACA;;AACA;AACA;AACA;AACA;AACAC;AACA;AACA;AACAD;AACA;AACa,eALb;AAMA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACAE,wDACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,2CAAsCtD,yDAAtC,CAAoD,2BAApD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACAuD;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACAC;AACA;;AACAA;;AACAJ;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACAA;;AACA;AACA;;AACA;AACAI;;AACA;AACAA;AACA;AACA;AACA;;;;;;AAEAD;AAA+D;AAAA,OAA/D;;AACAA,+BAAyB,sEAAkB;AAAGpD;AAA+C;AAAgC,SAAlF;AAAkFC,+BAAlF;AAAkFC;AAAlF,OAAlB,CAAzB;;AACA;AAAe,2DAAmDL,gEAAwBuD,gBAAxB,EAAwB;AAC1FjD,gBAAcN,qDAD4E;AAE1FQ;AAAiBH;AAAjB;AAF0F,UAAxB,EAG7D;AAAiB;AAAY,SAHgC,EAGhC,IAHgC,CAAnD;AAG6B,OAH5C;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACAoD;AACA;AAAA;;AACA;AACA;AACA;AACA,qCAJA,CAKA;;AACA;AACA;;;;iBACA;AAAA;AACA;;AACA;AACAC;AACAA;AACA,aAHA,MAIA;AACAA;AACA;;AACA;AACA;;;;;;AAEAD;AAAuF,wDAA+CzD,uDAAeuB,qBAAf,CAA/C,EAAsFvB,uDAAgBA,iDAAhB,CAAtF,EAAsHA,uDAAeuD,gBAAf,CAAtH,EAAyJvD,uDAAgBC,qDAAhB,CAAzJ,EAAoLD,uDAAe2D,0BAAf,EAAe,CAAf,CAApL;AAAmM,OAA1R;;AACAF,4CAAqC,sEAAkB;AAAGtD;AAA2D,mDA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EAAwBsE,YAAxB,EAAwB;AAC1FhE,gBAAcN,oDAD4E;AAE1FQ;AACAuC,qCADA;AAEAF;AAFA;AAF0F,UAAxB,EAM7D;AAAiB;AAAUvC,kBAAMN;AAAhB,aAAmC;AAAIM;AAAJ,WAAnC,EAA4D;AAAIA,kBAAMkE;AAAV,WAA5D,EAA8F;AAAIlE,kBAAMN;AAAV,WAA9F;AAA2H,SAN/E,EAM+E;AAAI8D;AACrJxD,kBAAkBN,gDADmI;AAErJQ;AAFqJ;AAAJ,SAN/E,CAAnD;AASC,OAThB;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA,+CAA0CR,yDAA1C,CAAwD,mCAAxD;AACA;AACA;AACA;AACA;;;AACA,wCAAoC,wFAA+B;AACnEyE,qBADmE;AAEnEC;AAFmE,OAA/B,CAApC;AAIA;;UACAC;AACA;AACA;AACAC,gBAFA,EAEAC,OAFA,EAEA;AAAA;;AAAA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,WAJA;AAKA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,WATA;AAUA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACAd;AACA;;AACA;AACA;AAAA;AAAA;AACA,WATA;AAUA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA,WALA;AAMA;AACA;AACA;AACA;;;AACA;AACA;AACA,sFAFA,CAGA;;AACA,uCAAuCzE,OAAvC,EAAgDA,+BAAhD,EAAgD;AAChDwF;AACA;AACA,WAPA;;AAQA;AACA;AAAA;AAAA;AACA;;;;iBACA;AAAA;AACA,gCAA8B,uEAAaxF,OAAb,CAA9B,CADA,CAEA;;AACA;AACA,qBAAmB,2CAAE,IAAF,CAAnB;AACA,aALA,CAMA;AACA;AACA;;;AACA,2BAAyB,uEAAcyF,aAAd,KAAc,mBAAvC;;AACA,kEAVA,CAWA;;;AACA;AACA;AACA;AACA;AACA;AACAC;AACA;;AACA;AACA,aApBA,CAqBA;;;AACA;AACAC,0CADA;AAEAC,2BAAyBxE,yCAAzB,EAFA;AAGAyE;AAHA;;AAKA;;AACA;;AACA;AACA;;;iBACA;AACA,gCAA8B,uEAAa7F,OAAb,CAA9B;;AACA;;AACA;AACA8F;;AACA;;AACA;;AACA;AACA;AACA;;;iBACA;AACA,gCAA8B,uEAAa9F,OAAb,CAA9B;;AACA,wDAFA,CAGA;;;AACA;AACA;AACAyF;AACA;AACA;;;iBACA;AAAA;;AACA;AAAA;AAAA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;;;iBACA;AACA;AACAzF;AACA,aAFA,MAGA;AACAA;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACS,aART;AASA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FACA+F,oFADA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA,oGACA/F,qCADA,EACA;AACA;AACA;;AACA;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AAGA;AAAe,2DAAmDN,gEAAwB+F,WAAxB,EAAwB;AAC1FzF,gBAAcN,mDAD4E;AAE1FQ;AACAyF,sBAA0B/F,iEAA1B,EAA0CsE,oEAA1C,CADA;AAEA0B,yEAFA;AAGAC;AAHA;AAF0F,UAAxB,EAO7D;AAAiB;AAAU7F;AAAV;AAA8C,SAPF,EAOE,IAPF,CAAnD;AAO+D,OAP9E;;AAQA;AAAe,2DAAmDN,iEAAyB+F,WAAzB,EAAyB;AAAeG;AAA4B;AAAsD,WAAjG;AAAiGD;AAAyB,oBAAQ/F,iEAAR,EAAwBsE,oEAAxB;AAA2C,WAArK;AAAqK2B;AAAyB;AAAA;AAA9L,SAAzB,CAAnD;AAAsU,OAArvEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAAyB;;AACzB,2BAAsB;;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAiB;;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAkB;;AAClB,8BAAyB;;AACzB,4BAAuB;;AACvB;AACA;AACA;AACA;AACA,4BAAuB;;AACvB,yBAAoB;;AACpB;AACA,uBAAkB;;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAAC;AAAA;;AACA;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAE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CA;;AACA;;;UACAsH;;;;AAEAA;AACAA;AACAA;AACAA;AACA;;UACAC;;;;AAEAA;AACAA;AACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,0BAAsBvH,kDAAtB,CAA6B,QAA7B;AACA;;AACA;AACA;AACA;AACA;;;AACA,wCAAmCA,yDAAnC,CAAiD,mBAAjD,EAAiD;AACjDK,0BADiD;AAEjDF;AAFiD,OAAjD;AAIA;AACA;AACA;AACA;AACA;AACA;;;UACAqH;AACA;AACA;AACA5C,gBAFA,EAEA;AAAA;;AACA;AACA;AACA,oCAHA,CAIA;AACA;;AACAoB,0EANA,CAOA;AACA;;;AACA;;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA,mBAAe,+DAAS,kBAAxB;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;;;iBACA;AACA,yDACA,yDADA;;AAEA;;AACA;AACAhE,yFACA,6DADA;AAEA;AACA;;;iBACA;AACA;AACA;AACA,0DACA,yDADA;;AAEA;;AACA,6DACA,sCADA,EACA;AACA;AACA;;AACA;AACA4D;AACAhB;AACA,8DAbA,CAcA;AACA;AACA;;AACA;AACA5C,0FACA,2DADA,GAEA,iEAFA;AAGA;;AACA4C;AACA;AACA;;;;iBACA;AACA,yDACA,yDADA;;AAEA,gDAA4C6C,sDAA5C,EAA0D;AAC1DzF,qGACA,2BADA,GAC8CyF,sDAD9C,GAC4D,MAD5D,GAEA,iEAFA;AAGA;AACA;;;;;;AAEAD;AAA6D,2CAAkCxH,uDAAgB0H,uEAAhB,CAAlC,EAAoF1H,uDAAe2H,uBAAf,EAAe,CAAf,CAApF,EAAgI3H,uDAAgB4H,qDAAhB,EAAwB,CAAxB,CAAhI;AAAwJ,OAArN;;AACAJ,2CAAqCxH,+DAAuB;AAAGM;AAAH,OAAvB,CAArC;AACAkH,2CAAqCxH,+DAAuB;AAAGiG,mBAAW4B,yDAAX,GAAwBA,yDAAxB;AAAH,OAAvB,CAArC;;AACAL;AAAA,gBACA;AAAMlH,gBAAMoH;AAAZ,SADA,EAEA;AAAMpH,yBAAN;AAAMC;AAAgCD,kBAAMN;AAAtC,aAAgD;AAAIM,kBAAMN,iDAAV;AAAgBQ;AAAhB,WAAhD;AAAN,SAFA,EAGA;AAAMF,yBAAN;AAAMC;AAAgCD,kBAAMN;AAAtC,aAAgD;AAAIM,kBAAMN,iDAAV;AAAgBQ,mBAASoH,qDAAT;AAAhB,WAAhD;AAAN,SAHA;AAAA;;AAKA;AAAe,2DAAmD5H,gEAAwBwH,gBAAxB,EAAwB;AAC1FlH,gBAAcN,mDAD4E;AAE1FQ;AACAyF,sBAA0B4B,yDAA1B,CADA;AAEA1B,sBAA0B0B,yDAA1B;AAFA;AAF0F,UAAxB,EAM7D;AAAiB;AAAUvH,kBAAMoH;AAAhB,aAAiD;AAAIpH,2BAAJ;AAAIC;AAC3ED,oBAAsBN;AADqD,eAE9D;AACbM,oBAAsBN,iDADT;AAEbQ;AAFa,aAF8D;AAAJ,WAAjD,EAKN;AAAIF,2BAAJ;AAAIC;AACpBD,oBAAsBN;AADF,eAEP;AACbM,oBAAsBN,iDADT;AAEbQ,qBAAuBoH,qDAAvB;AAFa,aAFO;AAAJ,WALM;AAUF,SAhB8C,EAgB9C,IAhB8C,CAAnD;AAgBe,OAhB9B;;AAiBA;AAAe,2DAAmD5H,iEAAyBwH,gBAAzB,EAAyB;AAAoBvB;AAAuB,oBAAQ4B,yDAAR;AAAsB,WAAjE;AAAiE1B;AAAyB,oBAAQ0B,yDAAR;AAAkB;AAA5G,SAAzB,CAAnD;AAAkM,OAAjN;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AAAA;AAAArH;AAAA;;AACA;AACA;AAFA;AAGA;;AAJA;AAAA;AAAA,iBAKA;AAAyB;AAAA,aALzB;AAAA,iBAMA;AAA8B,+BAAiB,8EAAqBgC,KAArB,CAAjB;AAAsC;AANpE;;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AAAA;AAAAhC;AAAA;;AACA;AACA,gDAFA,CAGA;;AACA;AAJA;AAKA;;AANA;AAAA;AAAA,iBAOA;AAAsB;AAAA,aAPtB;AAAA,iBAQA;AACA;;AACA;AACA;AACA,gFAA2E,WAA3E;AACA;;AACA;AACA,6EAAwEsH,YAAxE;AACA;;AACA;AACA;AACA;AAnBA;;AAAA;AAAA;AAqBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AAAA,YACAC,KADA;AAAA;;AAAA;;AAEA;AAAA;;AAAA;;AAAA;AAAAvH;AAAA;;AACA;AACA;AAFA;AAGA;AACA;;;AANA;AAAA;AAAA,iBAOA;AAA8B;AAAA,aAP9B;AAAA,iBAQA;AAAmC,oCAAsB,8EAAqBgC,KAArB,CAAtB;AAA2C;AAR9E;;AAAA;AAAA,UACAwF,IADA,GAUA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AAAA;;AACA;AACA;AAFA,YAGAD,KAHA;AAAA;;AAAA;;AAIA;AAAA;;AAAA;;AAAA;AAAAvH;AAAA;;AACA;AACA;AACA;AAHA;AAIA;;AARA;AAAA;AAAA,iBASA;AAAyB;AAAA,aATzB;AAAA,iBAUA;AACA;AACA,+CAA6C,6EAAoBgC,KAApB,CAA7C,GAAiE,oBAAjE;AACA;AAbA;;AAAA;AAAA,UAGAwF,IAHA,GAeA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AACA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AAAA;AAAAxH;AAAA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,uCAAoCyH,yCAApC;AARA;AASA;;AAVA;AAAA;AAAA,mBAWA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AArBA;;AAAA;AAAA;AAuBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AAAA;AAAAzH;AAAA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,sCAAmC0H,4CAAnC,CAA6C;AAC7C;AACA;AACA;AACA;AACA,eAFA,MAGA;AACA;AACA;AACa,aATb;AAdA;AAwBA;AACA;AACA;AACA;AACA;AACA;;;AA9BA;AAAA;AAAA,mBA+BA;AACA;AACA,2FACA,6BADA;AAEA;;AACA;;AACA;;AACA;AACA;AACA;;AAxCA;AAAA;AAAA,mBAyCA;AACAC;AACAA;AACA;AA5CA;;AAAA;AAAA;AA8CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,iCAA4BnI,yDAA5B,CAA0C,iBAA1C,EAA0C;AAC1CK,0BAD0C;AAE1CF;AAF0C,OAA1C;AAIA;;;AACA;AACA,eAAW,uDAAOH,oDAAP,CAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAmCoI,iCAAnC;AAAmCC,qBAAuCrI;AAA1E;AACA;;UACAsI;AACA;AAAA;;AACA,oCAAkCL,yCAAlC;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,iEACA,4CADA,IAEA,0CAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,kCAA6BjI,yDAA7B,CAA2C,kBAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,6BACA;AACA;AACA;AACA;AACA;;AACA;AACAuI;AACA,OAFA,CAGA;AACAA;AACA;AACA;;;AACA;AACA,iBACA,SADA,EACA,UADA,EACA,OADA,EACA,OADA,EACA,KADA,EACA,MADA,EACA,MADA,EACA,QADA,EACA,WADA,EAEA,SAFA,EAEA,UAFA,EAEA,UAFA,CADA;AAKA,qGALA;AAMA;AANA;;AAQA;AAAA;AAAA;AACA;;;AACA;AACA;;AACA;AACA,8FADA;AAEA,kEAFA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA,wBAAoBpJ,UAApB,EAAgCA,GAAhC,EAAgC;AAChCqJ;AACA;;AACA;AACA;AACA;;;UACAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,uKAdA,CAeA;;;AACA;AACA;AAjBA;AAkBA;;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AAAA;;AACA;AACA;AAA+DC,4BAA/D;AAA+DC;AAA/D;AACA;AAAA;AAAA;AACA;;AACA;AACA;;;iBACA;AAAA;;AACA;AACA;AAA+DC,8BAA/D;AAA+DD;AAA/D;AACA;AAAA;AAAA;AACA;;AACA;AACA;;;iBACA;AAAA;;AACA;AACA;AAA+DE,8BAA/D;AAA+DF;AAA/D;AACA;AAAA;AAAA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;AAA+DG,+BAA/D;AAA+DH;AAA/D;AACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA;AACA,4DAAoDD,KAApD;AACA;;AACA;AACA,qDAA6CK,IAA7C;AACA;AACA;;AACA,yEAXA,CAYA;;;AACA;AACA,mDAAyCA,IAAzC,uCAAwEL,KAAxE;AACA;;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACAK;AACAA;AACA;;AACAC,8DAA0DA,aAA1D,GAA0D;AAAoBL;AAApB,eAA1D;AACA;AACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA,6HADA,CAEA;AACA;AACA;AACA;;;AACA;AACAM;AACA;;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA,oBACAF,qBADA,EAEA,oCAFA,EAGA,+BAHA,EAIAG,IAJA,CAIA,GAJA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA,eAHA,CAIA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACAC;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACAA;AACAA;AACA;AACA;;;;QAvNAb;;AAyNAG;AAAiE,6CAAoCzI,uDAAeoJ,gBAAf,EAAe,CAAf,CAApC,EAAyEpJ,uDAAgBqJ,2DAAhB,CAAzE;AAAwG,OAAzK;;AACAZ,8CAAwCzI,iEAAyB;AAAGI,iCAAH;AAAGD;AAAH,OAAzB,CAAxC;;AACAsI;AAAA,gBACA;AAAMnI,sBAAN;AAAMC;AAA6BD,kBAAMN;AAAnC,aAA6C;AAAIM,kBAAMN,iDAAV;AAAgBQ;AAAhB,WAA7C;AAAN,SADA,EAEA;AAAMF,gBAAM+I;AAAZ,SAFA;AAAA;;AAIA;AAAe,2DAAmDrJ,gEAAwByI,kBAAxB,EAAwB;AAC1FnI,gBAAcN;AAD4E,UAAxB,EAE7D;AAAiB;AAAUM,wBAAV;AAAUC;AAChCD,oBAAsBN;AADU,eAEnB;AACbM,oBA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C;;AAClC,sDACA,qEADA;;AAEA,kEAA8DK,6BAA9D,GAA8DL,gBAA9D;;AACA;AACAM;AACAC;AACA;;AACA;AACA;AACA;AACA;AACA;AACAC;AACAA,0CAA+BC,gBAA/B;AACAD,yCAA8BE,gBAA9B;AACAF,4CAAiCG,UAAjC;AACAH,2CAAgCG,UAAhC,QAjBkC,CAkBlC;AACA;;AACA;AACAH;AACA;;AACAA,wDAA6CzH,QAA7C;;AACA,uDAxBkC,CAyBlC;AACA;;;AACA6H;AACAJ,gDA5BkC,CA6BlC;;AACA;AACAK;AAAA;AAAA,aA/BkC,CAgClC;;AACA;;AACA;AACA;AACA,aApCkC,CAqClC;AACA;;;AACA;AACA;AACAA;AAAA;AAAA,eAFA,CAGA;AACA;AACA;AACA;;AACA;AACAA;AACA;AACS,aAVT,EAUS9H,QAVT;;AAWA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA,aAJA,CAKA;;;AACA;AACA;AACA,aARA,CASA;;;AACA;AACA;AACA;;AACA;AACA,kEAA8DsH,6BAA9D,GAA8DQ,0BAA9D;AACAC,0DAA+CC,4BAA/C;AACAD;AACAD;AAAA;AAAA,aAjBA,CAkBA;;AACA;AACAA;AAAA;AAAA;AACAC;AACS,aAHT,EAGSC,4BAHT;AAIA;AACA;;;;iBACA;AACA;AAAA;AAAA;AACA;AACA;;;;iBACA;AACA,0BAAwB,sEAAaX,mBAAb,CAAxB;;AACA;AACA;AACA,aAJA,CAKA;;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA,aATA,CAUA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,kCAAgC,oFAA+BjK,KAA/B,CAAhC;AACA,gEACA6K,iEADA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA,yCALA,CAMA;AACA;;AACA;;AACA,8BAA4B3M,kBAA5B,EAAgDA,GAAhD,EAAgD;AAChD;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA,wCAJA,CAKA;;AACA;AACA;AACA;AACA;AAAA;AAAA,iBACAmM;AAAA;AADA;;AAEA;AACAA;AACA;AACS,aART;AASA;AACA;;;;iBACA;AAAA;;AACA;AAAA;AAAA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACAS;AACA;AACa,eAFb;AAGS,aAJT;AAKA;AACA;;;;iBACA;AAAA;;AACA;AACAC;AACA;AACa,eAFb;;AAGA;AACAC;AACA;AACiB,iBAFjB;AAGA;AACA;AACA;;;;;AAEA;;;AACA;AACA;AACA;AACA;AACA3G;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,2CAAsCtF,yDAAtC,CAAoD,2BAApD;;UACAkM;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AAAqB;AAAA;eACrB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAoB;AAAA;eACpB;AACA;;AACA;AACA;;;iBACA;AACA;;AACA;AACA;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACAC,qCADA;AAEAV,iCAFA;AAGAW,+BAHA;AAIAC,uEAAmE,6BAAnE,GAAmE;AAAgFtB,gCAAhF;AAAgFC;AAAhF,kBAAoH,EAAvL,GAA2L,cAA3L,CAJA;AAKAsB;AALA;AAOA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AAAA;;AACA;AACA,qGAAiG,iBAAjG,GAAiGxB,MAAjG;AACA,aAFA,MAGA;AACA,6FAAyF,iBAAzF,GAAyFyB,SAAzF;AACA;AACA;;;;;;AAEAL;AAAiD,qCAA4BlM,gEAAyBA,qDAAzB,CAA5B,EAAyEA,gEAA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,yCAAgCC,kBAAhC;AACA;AACA;;AACA,uCAAqCtO,uDAArC;AACA;;AACA,mCAAiCiI,yCAAjC;AACA;AACA;;;;;eACA;AAAqB;AAAA;AACrB;;;;eACA;AAAqB;AAAA;AACrB;;;;eACA;AAAqB;AAAA;eACrB;AAA0B,6BAAiB,8EAAqBzF,KAArB,CAAjB;AAAsC;AAChE;;;;eACA;AAA0B;AAAA;AAC1B;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA,mCAA+BiP,yDAA/B,IAAoCtN,kBAAsBsN,yDAA1D,KAA+D,CAAM,wEAActN,KAAd,CAArE,EAAmF;AACnF,2CADmF,CAEnF;;;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;;;;iBACA;AAAA;AACA;AACA;;;;;;AAEAoN;AAA2D,0CAAiCrO,gEAAyBA,qDAAzB,CAAjC,EAA8EA,gEAAyBA,4DAAzB,CAA9E,EAAkIA,gEAAwBwO,SAAxB,CAAlI,EAAuKxO,gEAAwB0N,iBAAxB,CAAvK;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1FQ;AACAuC,mCADA;AAEAqE;AAA8BgB,kCAA9B;AAA8BC;AAA9B;AAFA;AAF0F,UAAxB,EAM7D,IAN6D,EAM7D,IAN6D,CAAnD;AAMO,OANtB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACAwI,6CACA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,mCAA+B,oEAAUA,gBAAV,EAAU,SAAV,CAA/B;AACA;AACA;AACA;AACA;;;AACA,gDAA2C7Q,yDAA3C,CAAyD,gCAAzD;AACA;AACA;AACA;AACA;AACA;;;AACA,gCAA2BA,yDAA3B,CAAyC,cAAzC;AACA;;;UACA8Q;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,mCAA8BpQ,yCAA9B;AACA;;AACA;AACA;;AACA;AACA,kCApBA,CAqBA;;AACA,oDAAwCqQ,gBAAxC,EAtBA,CAuBA;;AACA,4DAAgDA,gBAAhD;AACA;AACA;AACA,2EA3BA,CA4BA;;AACA;AACA,4FACAC,4BADA,GACA,KADA;AA9BA;AAgCA;AACA;;;;;eACA;AAAuB;AAAA;eACvB;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAA+B;AAAA;eAC/B;AACA,uCAAmC,8EAAqBxO,KAArB,CAAnC;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AAAuB;AAAA;AACvB;;;;eACA;AAAsB;AAAA;eACtB;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;eACA;AACA;AACA;;AACA;AACA;AACA;;;eACA;AACA;AACA;AACA;AACA;eACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;iBACA;AAAA;;AACA;;AACA;;AACA;AACA,yFAAgFyO,mBAAhF;AACA,aALA,CAMA;;;AACAA,sCAAkC,2DAAS,IAAT,CAAlC,EAA2CnQ,SAA3C,CAA2C;AAC3C;;AACA;;AACA;AACS,aAJT,EAPA,CAYA;;AACA;AACAmQ,6CACAC,IADA,CACsB,2DAAS,eAAT,CADtB,EAEApQ,SAFA,CAEA;AAAA;AAAA,eAFA;AAGA,aAjBA,CAkBA;AACA;AACA;;;AACA;AACA,4CAAuC,2DAAS,kBAAT,CAAvC,EAAgDA,SAAhD,CAAgD;AAChD;AACA;AACA;AACa,eAJb;AAKS,aANT,EArBA,CA4BA;;;AACQ,yDAAK,4BAAL,EAAK,4BAAL,EAAKA,SAAL,CAAK;AACb;;AACA;AACS,aAHD,EA7BR,CAiCA;;AACA,4CAAwC,2DAAS,IAAT,CAAxC,EAAiDA,SAAjD,CAAiD;AACjD;;AACA;AACS,aAHT,EAlCA,CAsCA;;;AACA,6CAAyC,2DAAS,IAAT,CAAzC,EAAkDA,SAAlD,CAAkD;AAClD;;AACA;AACS,aAHT;;AAIA;AACA,oCAAkC,2DAAS,eAAT,CAAlC,EAA2CA,SAA3C,CAA2C;AAC3C;AACA;AACAqQ;AAAA;AAAA;AACqB,mBAFrB;AAGA,iBAJA,MAKA;AACA;AACA;AACa,eATb;AAUA;AACA;;;iBACA;AACA;;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;AACA;AACA;;;iBACA;AACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA,6CACA,4EADA;AAEA;;;iBACA;AACA;AACA,wEACA,6CADA;AAEA;;;iBACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,4EACA,wBADA,GACA,OADA,GACA,MADA;AAEA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACgB,iEAAS,yBAAT,EAAS,eAAT,EAASD,IAAT,CAA2D,sDAAI,CAAJ,CAA3D,EAA+DpQ,SAA/D,CAA+D;AAC/E;AACiB,iBAFD;AAGhB;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,wEACA,6CADA,GACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACAsQ;AACA,iBALA,MAMA;AACA;AACA;AACA;;AACAC;AACA;AACa,eAbb;AAcA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,2BADA,CAEA;;AACA,uDACA,qDADA,EACA;AACA1S;AACA;;AACA;AACA,qDACA;AAAA;AAAA,kBADA,GACA,IADA;AAEA,mDACA;AAAA;AAAA,kBADA,GACA,IADA;;AAEA;AACAA;AACA,iBAFA,MAGA;AACAA;AACA;;AACA;AACAA;AACA;AACA,eAdA,MAeA;AACAA;AAAA;AAAA;AACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA,yFACA,2BADA,EACA;AACA;AACA;;AACA;AACA;AACA;AACA,aATA,CAUA;AACA;;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,oEADA,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,8BAA4BQ,wBAA5B,EAAsDA,GAAtD,EAAsD;AACtDmS;AACA;;AACAC;AACAC;AACA;;AACA,6BAAwBrS,oBAAxB,EAA6CA,IAA7C,EAA6C;AAC7CsS,mDAAyCF,UAAzC;AACA;;AACA,8BAAwBpS,mBAAxB,EAA2CA,KAA3C,EAA2C;AAC3CuS,kDAAuCF,QAAvC;AACA;;AACA,wDACA,oDADA;AAEA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA,mDADA,CAEA;AACA;;AACA;AACA,aAPA,CAQA;AACA;;;AACA;AACA;;;;QAhXAG;;AAkXAb;AAAuD,wCAA+B9Q,gEAAyBA,qDAAzB,CAA/B,EAA4EA,gEAAyBA,4DAAzB,CAA5E,EAAgIA,gEAAyB4R,4EAAzB,EAAiD,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","names":["ids","el","AriaDescriber","_platform","messageRegistry","messageElement","referenceCount","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","i","describedElements","messagesContainer","element","CDK_DESCRIBEDBY_ID_PREFIX","nextId","preExistingContainer","filter","addAriaReferencedId","registeredMessage","removeAriaReferencedId","message","trim","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__","factory","token","providedIn","type","decorators","args","ListKeyManager","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_4__","_items","debounceInterval","subscribe","item","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_9__","event","keyCode","index","ActiveDescendantKeyManager","FocusKeyManager","IsFocusableConfig","InteractivityChecker","nodeName","inputType","isAnchorWithHref","hasValidTabIndex","FocusTrap","startAnchor","endAnchor","bound","console","markers","redirectToElement","anchor","isEnabled","fn","FocusTrapFactory","CdkTrapFocus","value","selectors","inputs","enabled","autoCapture","exportAs","features","selector","ConfigurableFocusTrap","curr","polyfillClosest","EventListenerFocusTrapInertStrategy","focusTrap","setTimeout","ConfigurableFocusTrapConfig","FocusTrapManager","stack","ConfigurableFocusTrapFactory","configObject","FOCUS_TRAP_INERT_STRATEGY","LiveAnnouncer","duration","politeness","clearTimeout","defaultOptions","resolve","previousElements","liveEl","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_DEFAULT_OPTIONS","CdkAriaLive","observe","_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_12__","passive","capture","FocusMonitor","document","options","handler","nativeElement","cachedInfo","checkChildren","subject","rootNode","elementInfo","focusTarget","window","FOCUS_MONITOR_DEFAULT_OPTIONS","CdkMonitorFocus","outputs","cdkFocusChange","HighContrastModeDetector","testElement","documentWindow","bodyClasses","A11yModule","highContrastModeDetector","imports","declarations","exports","modifiers","MutationObserverFactory","ContentObserver","elementOrRef","rxjs__WEBPACK_IMPORTED_MODULE_2__","subscription","observer","characterData","childList","subtree","stream","count","CdkObserveContent","disabled","debounce","ObserversModule","providers","ctx_r0","AnimationCurves","AnimationDurations","MatCommonModule","_angular_cdk__WEBPACK_IMPORTED_MODULE_1__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__","MATERIAL_SANITY_CHECKS","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__","colorPalette","Mixin","base","rxjs__WEBPACK_IMPORTED_MODULE_6__","rxjs__WEBPACK_IMPORTED_MODULE_7__","subscriber","provide","useExisting","DateAdapter","SUPPORTS_INTL_API","valuesArray","NativeDateAdapter","month","timeZone","day","weekday","year","date","displayFormat","newDate","join","d","MAT_DATE_LOCALE","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_8__","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","ErrorStateMatcher","MatLine","hostAttrs","host","lines","length","setClass","prefix","isAdd","MatLineSetter","setLines","MatLineModule","RippleRef","config","enterDuration","exitDuration","RippleRenderer","elementOrElementRef","defaultRippleAnimationConfig","x","y","ripple","offsetX","offsetY","radius","enforceStyleRecalculation","rippleRef","rippleEl","animationConfig","Date","eventTypes","pointerDownEvents","pointerUpEvents","MatRipple","centered","color","animation","terminateOnPointerUp","configOrX","MAT_RIPPLE_GLOBAL_OPTIONS","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_10__","hostVars","hostBindings","ctx","trigger","unbounded","MatRippleModule","MatPseudoCheckbox","state","decls","vars","template","styles","encapsulation","changeDetection","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupBase","_uniqueOptgroupIdCounter","_MatOptgroupMixinBase","t","label","MatOptgroup","ngContentSelectors","consts","_c0","MatOptionSelectionChange","source","_MatOptionBase","_uniqueIdCounter","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__","undefined","id","onSelectionChange","MatOption","changeDetectorRef","parent","group","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOption_mat_pseudo_checkbox_0_Template","directives","groupCounter","MatOptionModule","ctx_r10","_r14","MatFormField_label_9_ng_container_2_Template","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","ctx_r4","ctx_r6","ctx_r7","ctx_r16","MatFormField_div_14_div_1_Template","ctx_r8","MatError","nextUniqueId","transitionMessages","opacity","transform","MatFormFieldControl","align","MatHint","nextUniqueId$1","MatLabel","MatPlaceholder","MatPrefix","MatSuffix","MatFormFieldBase","MatFormField","nextUniqueId$2","_defaults","control","pipe","requestAnimationFrame","startHint","endHint","labelWidth","startWidth","gapWidth","startEls","gapEls","_MatFormFieldMixinBase","_angular_material_core__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_10__","MAT_FORM_FIELD_DEFAULT_OPTIONS","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_11__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_12__","contentQueries","dirIndex","MAT_ERROR","_MAT_HINT","MAT_PREFIX","MAT_SUFFIX","_t","viewQuery","_c1","_c2","_c3","floatLabel","appearance","hideRequiredMarker","hintLabel","_c4","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_Template","MatFormField_div_10_Template","MatFormField_div_11_Template","MatFormField_div_13_Template","MatFormField_div_14_Template","_angular_common__WEBPACK_IMPORTED_MODULE_13__","_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__","data","underlineRef","_connectionContainerRef","_inputContainerRef","_label","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_placeholderChild","_errorChildren","descendants","_hintChildren","_prefixChildren","_suffixChildren","animations","MatFormFieldModule","scheduler","_scheduler_async__WEBPACK_IMPORTED_MODULE_0__","DebounceTimeOperator","DebounceTimeSubscriber","lastValue","debouncedSubscription","_Subscriber__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/debounceTime.js"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, QueryList, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Platform, normalizePassiveListenerOptions, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** ID used for the body container where all messages are appended. */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/** ID prefix used for each created message element. */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/** Attribute given to each host element that is described by a message element. */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map();\n/** Container for all registered messages. */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @breaking-change 8.0.0 `_platform` parameter to be made required.\n     */\n    _platform) {\n        this._platform = _platform;\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /** Removes the host element's aria-describedby reference to the message element. */\n    removeDescription(hostElement, message) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message) {\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        messagesContainer.appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /** Assigns a unique ID to an element, if it doesn't have one already. */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(message) {\n        const registeredMessage = messageRegistry.get(message);\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            // @breaking-change 8.0.0 `_platform` null check can be removed once the parameter is required\n            const canBeAriaHidden = !this._platform || (!this._platform.EDGE && !this._platform.TRIDENT);\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer && preExistingContainer.parentNode) {\n                preExistingContainer.parentNode.removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.classList.add('cdk-visually-hidden');\n            // IE and Edge won't read out the messages if they're in an `aria-hidden` container.\n            // We only disable `aria-hidden` for these platforms, because it comes with the\n            // disadvantage that people might hit the messages when they've navigated past\n            // the end of the document using the arrow keys.\n            messagesContainer.setAttribute('aria-hidden', canBeAriaHidden + '');\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /** Deletes the global messages container. */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, message) {\n        const registeredMessage = messageRegistry.get(message);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, message) {\n        const registeredMessage = messageRegistry.get(message);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, message) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = messageRegistry.get(message);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nAriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: AriaDescriber, providedIn: \"root\" });\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && (this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) &&\n            ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element));\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nInteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`);\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this.focusTrap.enabled; }\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() { return this._autoCapture; }\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = this._document.activeElement;\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector));\n}\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element, selector) {\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (curr || null);\n}\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/** IE 11 compatible matches implementation. */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        element['msMatchesSelector'](selector);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\nFocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\nConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout(() => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout(() => this.clear(), duration);\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = null;\n        }\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].parentNode.removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\nLiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() { return this._politeness; }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nconst TOUCH_BUFFER_MS = 650;\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        };\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (event) => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n                // Resolve the focus source to `keyboard` if we detect one of them.\n                const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n                this._setOriginForCurrentEventQueue(source);\n            }\n        };\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            this._lastTouchTarget = getTarget(event);\n            this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n        };\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n        };\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = getTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            nativeElement.focus(options);\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    _getFocusOrigin(event) {\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (this._origin) {\n            return this._origin;\n        }\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        else if (this._wasCausedByTouch(event)) {\n            return 'touch';\n        }\n        else {\n            return 'program';\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        this._toggleClass(element, 'cdk-focused', !!origin);\n        this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n        this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @param origin The origin to set.\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n            }\n        });\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param event The focus event to check.\n     * @returns Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        const focusTarget = getTarget(event);\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n            return;\n        }\n        const origin = this._getFocusOrigin(event);\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const document = this._getDocument();\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const document = this._getDocument();\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); };\nFocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8), ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/** Gets the target of an event, accounting for Shadow DOM. */\nfunction getTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n            documentWindow.getComputedStyle(testElement) : null;\n        const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\nHighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); };\nA11yModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule, ObserversModule]] });\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ɵɵdefineInjectable, Injectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\nMutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\nContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() { return this._debounce; }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nclass ObserversModule {\n}\nObserversModule.ɵfac = function ObserversModule_Factory(t) { return new (t || ObserversModule)(); };\nObserversModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MutationObserverFactory] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('10.2.7');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('10.2.7');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION$1 = new Version('10.2.7');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, sanityChecks, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        const doc = this._document || document;\n        return typeof doc === 'object' && doc ? doc : null;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n    _checksAreEnabled() {\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n        // it. Since these checks can have performance implications and they aren't tree shakeable\n        // in their current form, we can leave the `isDevMode` check in for now.\n        // tslint:disable-next-line:ban\n        return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n    _isTestEnv() {\n        const window = this._getWindow();\n        return window && (window.__karma__ || window.jasmine);\n    }\n    _checkDoctypeIsDefined() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.doctype);\n        const document = this._getDocument();\n        if (isEnabled && document && !document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !this._sanityChecks.theme);\n        const document = this._getDocument();\n        if (isDisabled || !document || !document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        const testElement = document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        document.body.appendChild(testElement);\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n    _checkCdkVersionMatch() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nMatCommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule], BidiModule] });\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disabled` property. */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() { return this._disabled; }\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `color` property. */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() { return this._color; }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disableRipple` property. */\nfunction mixinDisableRipple(base) {\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `tabIndex` property. */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n    // but given we `extend` it from another class, we can assume a constructor being accessible.\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nclass MatLineSetter {\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach((type) => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((type) => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((type) => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase {\n}\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\n_MatOptgroupBase.ɵfac = /*@__PURE__*/ function () { let ɵ_MatOptgroupBase_BaseFactory; return function _MatOptgroupBase_Factory(t) { return (ɵ_MatOptgroupBase_BaseFactory || (ɵ_MatOptgroupBase_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(_MatOptgroupBase)))(t || _MatOptgroupBase); }; }();\n_MatOptgroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatOptgroupBase.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n        type: Directive\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = /*@__PURE__*/ function () { let ɵMatOptgroup_BaseFactory; return function MatOptgroup_Factory(t) { return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup); }; }();\nMatOptgroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /** Whether or not the option is currently selected. */\n    get selected() { return this._selected; }\n    /** Whether the option is disabled. */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\n_MatOptionBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\n_MatOptionBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined },\n    { type: _MatOptgroupBase }\n];\n_MatOptionBase.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\nMatOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTGROUP]\n            }] }]; }, null); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nconst JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8, OCT = 9, NOV = 10, DEC = 11;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n"]}