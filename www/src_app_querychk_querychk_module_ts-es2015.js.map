{"version":3,"file":"src_app_querychk_querychk_module_ts-es2015.js","mappings":"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","sources":["./src/app/querychk/querychk-routing.module.ts","./src/app/querychk/querychk.module.ts","./src/app/querychk/querychk.page.ts","./src/app/querychk/querychk.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuerychkPage } from './querychk.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuerychkPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuerychkPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuerychkPageRoutingModule } from './querychk-routing.module';\n\nimport { QuerychkPage } from './querychk.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuerychkPageRoutingModule\n  ],\n  declarations: [QuerychkPage]\n})\nexport class QuerychkPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-querychk',\n  templateUrl: './querychk.page.html',\n  styleUrls: ['./querychk.page.scss'],\n})\nexport class QuerychkPage implements OnInit {\n  data=[];\n\n  constructor(private auth:ApiService,private router:Router ,    private route: ActivatedRoute ,) { }\n\n  ngOnInit() {\n\n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.data = this.router.getCurrentNavigation().extras.state.data;\n        console.log('#devdx JOBGUID: ', this.data['JOBGUID']);\n         \n    }\n  });\n  }\n\n  show(){//this.data[\"JOBGUID\"]\n    this.auth.database.executeSql('select * from completeservice where JOBGUID=? ',[this.data[\"JOBGUID\"]]).then((completeServiceRes)=>{\n      console.log(\"#devdx success gett \"+JSON.stringify(completeServiceRes.rows.length));\n\n      for(let i=0; i< completeServiceRes.rows.length; i++){\n        console.log(\"#devdx success gett \"+JSON.stringify(completeServiceRes.rows.item(i)));\n      }\n\n    }).catch((e)=>{\n      console.log(\"#devdx error gett \"+JSON.stringify(e));\n      \n    });\n  }\n\n  //    where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long,this.data['CLAIMJOBID'], 'yes',this.data['BackgroundColour'], this.data['JOBGUID']])\n\n  store(){\n    this.auth.database.executeSql('update  completeservice set OUTCOME=?,JOBNOTE=?,PARTS=?, FILEBASE=?,OnDt=?, Latitude=?,Longitude=?,ComboClaimJobId=?, CantCompleteReason=?, IsServiceCompleted=?, BackgroundColour=? where JOBGUID=?', [\"jboutcome\",\"additional\",\"parts\",\"file\", \"date\", \"lat\", \"long\", \"claimguid\", \"canntcpltresn\",\"isservicecompltd\",\"bgclr\" , this.data[\"JOBGUID\"]])\n    .then((res) => {\n     \n      console.log(\"#devdx stored \"+JSON.stringify(res));\n      \n    }).catch((e)=>{\n      \n      console.log(\"#devdx stored error \"+JSON.stringify(e));\n    });\n    \n\n    \n\n\n    // this.auth.database.executeSql(\"update arrived set Lattitude=?,Longitude=?,OnRouteDT=? where JOBGUID=?\",[\"latti\",\"longitude\",\"OnRouteDT\",this.data['JOBGUID']]).then(\n    //   (res)=>{\n    //     this.auth.dismissLoading();\n    //       console.log('### arrived '+JSON.stringify(res));         \n    //   }\n    // ).catch((e)=>{console.log('error'+JSON.stringify(e));\n    // });\n\n  }\n\n\n  insert(){\n\n    this.auth.database.executeSql(\"insert into  completeservice (JOBGUID) values(?)\",[\"sabir\"])\n    .then((res)=>{console.log('# complete Service Table inserted ');        \n     }).catch((e)=>{console.log('# complete  Service Table inseet ERROR '+JSON.stringify(e));});\n\n  }\n\n  \n  public createCompleteServiceTable(){\n    return new Promise((resolve, reject)=>{\n    this.auth.database.executeSql(\"create table IF NOT EXISTS completeservice (JOBGUID  VARCHAR(32)  , OUTCOME VARCHAR(32), PARTS VARCHAR(32), LABOUR VARCHAR(32), JOBNOTE VARCHAR(32), FILEBASE VARCHAR(32), FILENAME VARCHAR(32), OnDt VARCHAR(32), Latitude VARCHAR(32), Longitude VARCHAR(32), ComboClaimJobId VARCHAR(32), ComboIsCompleted VARCHAR(32), CantCompleteReason VARCHAR(32),  IsServiceCompleted VARCHAR(32), BackgroundColour VARCHAR(32))\",[])\n    .then((res)=>{console.log('# complete Service Table created ');         resolve('complete Service table created success');\n     }).catch((e)=>{console.log('# complete  Service Table Create ERROR '+JSON.stringify(e));});\n    });\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>querychk</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-button (click)=\\\"store()\\\">Store</ion-button>\\n  <ion-button (click)=\\\"show()\\\">Show</ion-button>\\n  <ion-button (click)=\\\"insert()\\\">Insert</ion-button>\\n  <ion-button (click)=\\\"createCompleteServiceTable()\\\">create</ion-button>\\n\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}