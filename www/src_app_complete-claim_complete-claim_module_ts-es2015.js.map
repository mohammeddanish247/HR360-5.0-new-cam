{"version":3,"file":"src_app_complete-claim_complete-claim_module_ts-es2015.js","mappings":"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","sources":["./src/app/complete-claim/complete-claim-routing.module.ts","./src/app/complete-claim/complete-claim.module.ts","./src/app/complete-claim/complete-claim.page.ts","./src/app/complete-claim/complete-claim.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompleteClaimPage } from './complete-claim.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompleteClaimPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompleteClaimPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompleteClaimPageRoutingModule } from './complete-claim-routing.module';\n\nimport { CompleteClaimPage } from './complete-claim.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CompleteClaimPageRoutingModule\n  ],\n  declarations: [CompleteClaimPage]\n})\nexport class CompleteClaimPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, ImageOptions } from '@capacitor/camera';\nimport { ApiService } from '../api.service';\nimport { Form, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n///////////////////completed\n\n@Component({\n  selector: 'app-complete-claim',\n  templateUrl: './complete-claim.page.html',\n  styleUrls: ['./complete-claim.page.scss'],\n})\nexport class CompleteClaimPage implements OnInit {\n\n  options: ImageOptions;\n  base64:string='';\n  image1 :any='';\n  image2 :any='';\n  image3 :any='';\n  jobOutCome : string='';\n  data:any[];\n  image2flag : boolean = true ;\n  image3flag : boolean = true ;\n  additionalNotes : \n  string = \"Did you work on the appliance: Yes/No \\nVisual Inspection of appliance: Pass/Fail \\nBurner Pressure/Gas Rate: \\nSafety Device: Pass/Fail \\nInitial FGA: \\nFinal FGA: \\nFlue: Pass Fail \\nVentilation: Pass/Fail \\nDefects: \\nClassification: \\nAction Taken:\";\n  jobOutComeFlag: boolean;\n  partsFlag: boolean;\n  labourFlag: boolean;\n  additionalFlag: boolean;\n  imageflag: boolean;\n  cameraOptions: ImageOptions;\n  galleryOptions: ImageOptions;\n\n  constructor(private router:Router, private route:ActivatedRoute , private auth:ApiService) { }\n\n  ngOnInit() {\n    \n    this.route.queryParams.subscribe(params=>{\n      if(this.router.getCurrentNavigation().extras.state){\n        this.data   = this.router.getCurrentNavigation().extras.state.data; \n        this.auth.getLocation();      \n\n        console.log('## # combo jobid '+this.data['CLAIMJOBID']+\"\"+this.data['BackgroundColour']);\n        \n      }\n    });\n  }\n\n  radiogroupChange(event){\n    this.jobOutComeFlag = false;\n    console.log(' rg change '+event.detail.value);\n    this.jobOutCome = event.detail.value;   \n    if(this.jobOutCome == 'AtRisk' || this.jobOutCome == 'CappedOff'){\n      this.image2flag = false;\n      this.image3flag = false;\n    }\n    else{\n      this.image2flag = true;\n      this.image3flag = true;\n    }\n}\n\n\nopenCamera(opt, option){\n  this.imageflag = false;\n  this.cameraOptions = {\n    quality: 20,\n    source :CameraSource.Camera,\n    height:360,\n    width:360,\n    resultType : CameraResultType.Base64\n  }\n  this.galleryOptions = {\n    quality: 20,\n    source :CameraSource.Photos,\n    height:360,\n    width:360,\n    resultType : CameraResultType.Base64\n  }\n  switch (opt) {\n    case 1:\n      Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n        let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.image1 = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.base64 = imageData.base64String;\n       }, (err) => {\n        this.auth.showToast(JSON.stringify(err));\n       }); \n      break;\n    case 2:\n      Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n        let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.image2 = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.base64 = imageData.base64String;\n       }, (err) => {\n        this.auth.showToast(JSON.stringify(err));\n       }); \n      break;\n    case 3:\n      Camera.getPhoto(option == 'cam' ? this.cameraOptions : this.galleryOptions).then((imageData) => {\n        let base64Image = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.image3 = 'data:image/jpeg;base64,' + imageData.base64String;\n        this.base64 = imageData.base64String;\n       }, (err) => {\n        this.auth.showToast(JSON.stringify(err));\n       }); \n      break;\n  \n    default:\n      break;\n  }\n  \n\n}\n\npartsIonChange(event){\n  this.partsFlag = false;\n}\n\nlabourIonChange(event){\n  this.labourFlag = false;\n}\n\nadditionalIonChange(event){\n  this.additionalFlag = false;\n}\n  complete(f:NgForm)\n  {\n  //  if(this.base64==null || this.base64 == ''){\n   //   this.auth.showToast('Image in mandatory');\n     \n   // }else\n    //{\n\n      if(this.jobOutCome==''){\n        this.jobOutComeFlag =true;\n        this.auth.scrollToId(\"joboutcome\");\n        //this.auth.showToast('Job Outcome in mandatory','danger');\n      }else{\n        if(f.value.parts==''){\n          this.partsFlag = true;\n          this.auth.scrollToId(\"partsandlabour\");\n          //this.auth.showToast('Parts in mandatory','danger');\n        }else{\n          if(f.value.labour==''){\n            this.labourFlag = true;\n            this.auth.scrollToId(\"partsandlabour\");\n            //this.auth.showToast('Labour in mandatory','danger');            \n          }else{\n            if(f.value.additional==''){\n              this.additionalFlag = true;\n              this.auth.scrollToId(\"additional\");\n              //this.auth.showToast('Additional notes in mandatory','danger');\n            }else{\n              if((this.jobOutCome == 'AtRisk' || this.jobOutCome == 'CappedOff') && (this.image1=='')){\n                this.imageflag = true;\n                this.auth.scrollToId(\"uploadImage\");\n                //this.auth.showToast('Images are  mandatory','danger');\n              }\n             else{\n              if (this.data['BackgroundColour']=='#20B2AA') {\n                //IN COMBO CLAIM\n                this.auth.database.executeSql('update completeclaim set OUTCOME=?,JOBNOTE=?,PARTS=?,LABOUR=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,ComboClaimJobId=?,IsClaimCompleted=?,BackgroundColour=?,HaveData=?,ComboIsCompleted=? where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,f.value.labour,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long, this.data['CLAIMJOBID'],'yes',this.data['BackgroundColour'],'yes','yes', this.data['JOBGUID']])\n                .then((res) => {\n                  this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                    console.log('#### jobsstatus success '+JSON.stringify(res));\n                    this.auth.showToast('Success! Claim has been Completed','success'); \n                    this.router.navigate(['details']);\n                \n                  }).catch((e)=>{  });\n                  \n                }).catch((e) => {\n                  console.log('### complete Failure ' + JSON.stringify(e));\n                });\n                \n              } else {\n               // IN NORMAL CLAIM\n                console.log('Else code..........' + this.data['JOBGUID']+' '+this.data['CLAIMJOBID']);\n                this.auth.database.executeSql('update  completeclaim set OUTCOME=?,JOBNOTE=?,PARTS=?,LABOUR=?,FILEBASE=?,OnDt=?,Latitude=?,Longitude=?,ComboClaimJobId=?,IsClaimCompleted=?,BackgroundColour=?,HaveData=? where JOBGUID=?', [this.jobOutCome,f.value.additional,f.value.parts ,f.value.labour,this.base64, this.auth.getdateformatV2(), this.auth.lat, this.auth.long, this.data['CLAIMJOBID'],'yes',this.data['BackgroundColour'],'yes', this.data['JOBGUID']])\n                  .then((res) => {\n                    this.auth.database.executeSql(\"update  jobsstatus set  status=? where JOBGUID=? \",[ 'completed', this.data['JOBGUID']]).then((res)=>{\n                      console.log('#### jobsstatus success '+JSON.stringify(res));\n                      this.auth.showToast('Success! Claim has been Completed','success'); \n                      console.log('#### complete success ' + JSON.stringify(res));\n                      this.router.navigate(['details']);\n                  \n                    }).catch((e)=>{  });\n                    \n                  }).catch((e) => {\n                    console.log('### complete Failure ' + JSON.stringify(e));\n                  });\n                \n              }\n\n            }\n  \n          }\n\n        }\n\n      }\n      }\n     \n    //}\n\n  }\n\n}","export default \"<ion-header>\\n  <ion-toolbar  color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>Job Report Complete Claim</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #f='ngForm'  >\\n    <ion-card id=\\\"joboutcome\\\" class=\\\"ion-padding\\\">     \\n      <ion-radio-group  \\n      allow-empty-selection='false' \\n      (ionChange)='radiogroupChange($event)'>\\n\\n        <div class=\\\"ion-text-center\\\">\\n          <h5>Job Outcome</h5>\\n        </div>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>job completed succesfully</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"JobCompletedSuccessfully\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>At Risk</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"AtRisk\\\"></ion-radio>\\n        </ion-item>\\n    \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>Capped Off(Not Safe)</ion-label>\\n          <ion-radio slot=\\\"end\\\" color=\\\"primary\\\" value=\\\"CappedOff\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n      <ion-item></ion-item>\\n      <p *ngIf='jobOutComeFlag' class=\\\"alert\\\">Job outcomes cannot be empty</p>\\n    </ion-card>\\n\\n    <ion-card id=\\\"partsandlabour\\\" class=\\\"ion-padding\\\">\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Parts</ion-label>\\n        <ion-input type=\\\"text\\\" \\n        (ionChange)=\\\"partsIonChange($event)\\\"\\n        ngModel \\n        name='parts'\\n        required\\n        #partsCtrl='ngModel'></ion-input>\\n      </ion-item>\\n      <p *ngIf='(!partsCtrl.valid && partsCtrl.touched) || partsFlag' class=\\\"alert\\\"> Parts cannot be empty</p>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Labour</ion-label>\\n        <ion-input type=\\\"text\\\"  \\n        (ionChange)=\\\"labourIonChange($event)\\\"\\n        ngModel \\n        name='labour'\\n        required\\n        #labourCtrl='ngModel' ></ion-input>\\n      </ion-item>\\n      <p *ngIf='(!labourCtrl.valid && labourCtrl.touched) || labourFlag' class=\\\"alert\\\">Labour cannot be empty</p>\\n    </ion-card>\\n    \\n\\n    <ion-card id=\\\"additional\\\" class=\\\"ion-padding\\\">\\n      <ion-item>\\n        <ion-textarea rows=\\\"12\\\" cols=\\\"20\\\"\\n        [(ngModel)]='additionalNotes' \\n        (ionChange)=\\\"additionalIonChange($event)\\\"\\n         placeholder=\\\"Enter Additional Notes here...\\\"\\n         ngModel \\n         name='additional'\\n         required\\n         #additionalCtrl='ngModel'\\n         ></ion-textarea>\\n      </ion-item>\\n      <p *ngIf='(!additionalCtrl.valid && additionalCtrl.touched) || additionalFlag' class=\\\"alert\\\">Additional cannot be empty</p>\\n    </ion-card>\\n      \\n    <ion-card id=\\\"uploadImage\\\" class=\\\"ion-padding\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 1</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(1,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(1,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image1!= null\\\">\\n        <img [src]=\\\"image1\\\" />\\n      </span>\\n      <p *ngIf='imageflag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    \\n    <ion-card id=\\\"uploadImage2\\\" class=\\\"ion-padding\\\" [hidden]=\\\"image2flag\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 2</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(2,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(2,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image2!= null\\\">\\n        <img [src]=\\\"image2\\\" />\\n      </span>      \\n      <p *ngIf='image2flag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n\\n    <ion-card id=\\\"uploadImage3\\\" class=\\\"ion-padding\\\" [hidden]=\\\"image3flag\\\">\\n      <ion-item>\\n        <ion-label> Upload Image 3</ion-label>     \\n        <ion-icon slot=\\\"end\\\" name=\\\"camera\\\" (click)=\\\"openCamera(3,'cam')\\\"></ion-icon>\\n        <ion-icon slot=\\\"end\\\" name=\\\"image\\\" (click)=\\\"openCamera(3,'gall')\\\"></ion-icon>\\n      </ion-item>\\n      <span *ngIf=\\\"image3!= null\\\">\\n        <img [src]=\\\"image3\\\" />\\n      </span>\\n      <p *ngIf='image3flag' class=\\\"alert\\\">Image cannot be empty</p>\\n    </ion-card>\\n    \\n    </form>\\n</ion-content>\\n<!-- [disabled]='!f.valid' -->\\n<ion-footer>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\"   (click)=\\\"complete(f)\\\">Submit</ion-button>\\n</ion-footer>\\n\\n\";"],"names":[],"sourceRoot":"webpack:///"}